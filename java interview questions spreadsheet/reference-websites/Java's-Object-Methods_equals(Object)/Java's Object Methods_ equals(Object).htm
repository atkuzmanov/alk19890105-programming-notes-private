<!DOCTYPE html>
<!-- saved from url=(0058)https://stackabuse.com/javas-object-methods-equals-object/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="./Java&#39;s Object Methods_ equals(Object)_files/525232124909042" async=""></script><script async="" src="./Java&#39;s Object Methods_ equals(Object)_files/fbevents.js"></script><script async="" src="./Java&#39;s Object Methods_ equals(Object)_files/analytics.js"></script><script id="repixel" async="" src="./Java&#39;s Object Methods_ equals(Object)_files/r.js"></script><script type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/cmp.complete.bundle.js"></script><script type="text/javascript" async="" src="./Java&#39;s Object Methods_ equals(Object)_files/videoplayer.js"></script><script type="text/javascript" async="" src="./Java&#39;s Object Methods_ equals(Object)_files/prebid.js"></script>
	
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>Java's Object Methods: equals(Object)</title>
    <meta name="HandheldFriendly" content="True">
	<meta name="keywords" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<!-- fav icons -->
	<!--<link rel="shortcut icon" href="/favicon.ico">-->
	<link rel="apple-touch-icon" href="https://stackabuse.com/assets/images/apple-touch-icon.png?v=8b761e8043">
	<link rel="apple-touch-icon" sizes="72x72" href="https://stackabuse.com/assets/images/apple-touch-icon-72x72.png?v=8b761e8043">
	<link rel="apple-touch-icon" sizes="114x114" href="https://stackabuse.com/assets/images/apple-touch-icon-114x114.png?v=8b761e8043">
    <!-- header scripts -->
    <script async="" type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/gpt.js"></script><script type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/3873.js"></script><style type="text/css">.waldo-sticky-footer{position: fixed; width: 100%; bottom: 0px; left: 0px; text-align: center; z-index: 9000;}.waldo-sticky-footer iframe, .waldo-sticky-footer div {margin-left: auto;margin-right: auto;}.waldo-sticky-sidebar{position: fixed; top: 10px;z-index: 90}.waldo-sticky-css{position: sticky; top: 10px; z-index: 90}.waldo-overlay{position: fixed;height: 100%;width: 100%;top: 0;left: 0;z-index: 105;background: rgba(0,0,0,0.7);}#waldo-counter {position: absolute;bottom: 0;right: 0;color: #fff;font-size: 30px;padding: 15px;}.waldo-bfleft {position: fixed; left: 0; top: 10px;z-index:101;}.waldo-bfright {position: fixed; right: 0; top: 10px;z-index:101;}#waldo-tag-6038 {clear: both !important;}div[class^="app_gdpr-"] a {color: #41afbb !important; text-decoration: underline !important}#waldo-close-button a {border: 1px solid rgba(0,0,0,.35);padding: 3px;font-size: 12px;color: #fff;font-weight: bold;background-color: #777;}</style><script type="text/javascript">googletag.cmd.push(function() {gptAdSlots[3874] = googletag.defineSlot('/124067137/stackabuse300x250FL_1', [[300, 250], [300, 600]], 'waldo-tag-3874').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[300, 250], [300, 600]]).addSize([768, 0], [[300, 250], [300, 600]]).addSize([0, 0], [[300, 250], [300, 600]]).build()).addService(googletag.pubads());gptAdSlots[3875] = googletag.defineSlot('/8491498/stackabuse300x250FL_1_Universal_Passback_5c8a5d10788bc', [300, 250], 'waldo-tag-3875').addService(googletag.pubads());gptAdSlots[3876] = googletag.defineSlot('/124067137/stackabuse300x250FL_2', [[300, 250], [300, 600]], 'waldo-tag-3876').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[300, 250], [300, 600]]).addSize([768, 0], [[300, 250], [300, 600]]).addSize([0, 0], [[300, 250], [300, 600]]).build()).addService(googletag.pubads());gptAdSlots[3877] = googletag.defineSlot('/8491498/stackabuse300x250FL_2_Universal_Passback_5c8a5d13f3b0f', [300, 250], 'waldo-tag-3877').addService(googletag.pubads());gptAdSlots[3878] = googletag.defineSlot('/124067137/stackabuse728x90FS_1', [[728, 90], [320, 50]], 'waldo-tag-3878').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90]]).addSize([768, 0], [[320, 50]]).addSize([0, 0], [[320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3879] = googletag.defineSlot('/8491498/stackabuse728x90FS_1_Universal_Passback_5c8a5d17af7f4', [[728, 90], [320, 50]], 'waldo-tag-3879').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90]]).addSize([768, 0], [[320, 50]]).addSize([0, 0], [[320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3880] = googletag.defineSlot('/124067137/stackabuse728x90FS_2', [[728, 90], [300, 250], [320, 50]], 'waldo-tag-3880').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90], [300, 250]]).addSize([768, 0], [[300, 250], [320, 50]]).addSize([0, 0], [[300, 250], [320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3881] = googletag.defineSlot('/8491498/stackabuse728x90FS_2_Universal_Passback_5c8a5d1c6686c', [[728, 90], [300, 250]], 'waldo-tag-3881').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90]]).addSize([768, 0], [[300, 250]]).addSize([0, 0], [[300, 250]]).build()).addService(googletag.pubads());gptAdSlots[3884] = googletag.defineSlot('/124067137/stackabuse728x90FS_3', [[728, 90], [300, 250], [320, 50]], 'waldo-tag-3884').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90], [300, 250]]).addSize([768, 0], [[300, 250], [320, 50]]).addSize([0, 0], [[300, 250], [320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3885] = googletag.defineSlot('/8491498/stackabuse728x90FS_3_Universal_Passback_5c8ab6465375f', [[728, 90], [300, 250]], 'waldo-tag-3885').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90]]).addSize([768, 0], [[300, 250]]).addSize([0, 0], [[300, 250]]).build()).addService(googletag.pubads());googletag.pubads().enableSingleRequest();googletag.enableServices();googletag.pubads().addEventListener('impressionViewable', function(event) {hb_refresh(event); hb_sroll_pause(event);});googletag.pubads().addEventListener('slotRenderEnded', function(event) {waldoAddCloseBtn(event); waldoPassbackInit(event);waldoInterstitialInit(event);})});</script>
	<!-- stylesheets -->
    <link href="./Java&#39;s Object Methods_ equals(Object)_files/css" rel="stylesheet">
	<link rel="stylesheet" href="./Java&#39;s Object Methods_ equals(Object)_files/bootstrap.min.css">
	<link rel="stylesheet" href="./Java&#39;s Object Methods_ equals(Object)_files/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="./Java&#39;s Object Methods_ equals(Object)_files/screen.css">
	<link rel="stylesheet" type="text/css" href="./Java&#39;s Object Methods_ equals(Object)_files/atom_one_dark.css">
	<script>
/*====================================================
  THEME SETTINGS & GLOBAL VARIABLES
====================================================*/
//  1. Disqus comment settings
var disqus_shortname = 'stackabuse'; // required: replace example with your forum shortname

//	2. Sidebar Position
var sidebar_left = false; // Set true or flase for positioning sidebar on left

//  3. Recent Post count
var recent_post_count = 3;

//	4. Google+ badge settings
var badge_type = 'page'; // person / page / community ----- three type of google badge
var google_plus_url = 'https://plus.google.com/111813546240107028721';

//	5. Facebook Page Setting
var facebook_page_url = 'https://www.facebook.com/stackabuse';

//	6. Twitter Setting
var twitter_url = 'https://twitter.com/ScottWRobinson';
var twitter_widget_id = '722928793669607425';
var number_of_tweet = 3;

//	7. Mailchimp signup form Setting
var mailchimp_form_url = '//stackabuse.us10.list-manage.com/subscribe/post?u=90b216fdbe02b25619ec94fc3&amp;id=bc2bb312cd';
var success_message = "Please check your inbox and confirm your email address. Thank you!";

//	8. Flickr Setting
//var flickr_id = '52617155@N08';
var flickr_id = '';

// 9. Adsense Channels
var adsense_tag_to_channel_name = {
    'node': 'sa-topic-node-js',
    'javascript': 'sa-topic-javascript',
    'python': 'sa-topic-python',
    'java': 'sa-topic-java',
    'machine learning': 'sa-topic-machine-learning',
    'artificial intelligence': 'sa-topic-ai',
    'tensorflow': 'sa-topic-tensorflow',
    'scikit-learn': 'sa-topic-scikit-learn',
    'algorithms': 'sa-topic-algorithms',
    'data structures': 'sa-topic-data-structures',
    'aws': 'sa-topic-aws',
    'apache': 'sa-topic-apache',
    'django': 'sa-topic-django',
    'flask': 'sa-topic-flask',
    'shell': 'sa-topic-shell',
    'bash': 'sa-topic-bash',
    'npm': 'sa-topic-npm',
    'unix': 'sa-topic-unix',
    'linux': 'sa-topic-linux',
    'json': 'sa-topic-json',
    'maven': 'sa-topic-maven',
    'web framework': 'sa-topic-web-framework',
    'security': 'sa-topic-security',
    'arduino': 'sa-topic-arduino',
    'express': 'sa-topic-express-js',
    'es6': 'sa-topic-es6',
    'mongodb': 'sa-topic-mongodb',
    'how to': 'sa-topic-how-to',
};
var adsense_author_to_channel_name = {
    'Scott Robinson': 'sa-author-scott-robinson',
    'Frank Hofmann': 'sa-author-frank-hofmann',
    'Adam McQuistan': 'sa-author-adam-mcquistan',
    'Tendai Mutunhire': 'sa-author-tendai-mutunhire',
    'Guest Contributor': 'sa-author-guest-contributor',
    'Mihajlo Pavloski': 'sa-author-mihajlo-pavloski',
    'Esther Vaati': 'sa-author-esther-vaati',
    'Adnan Rahic': 'sa-author-adnan-rahic',
    'Sam Galizia': 'sa-author-sam-galizia',
};
var adsense_channel_name_to_id = {
    'sa-author-scott-robinson': '5091228512',
    'sa-author-frank-hofmann': '5574923176',
    'sa-author-adam-mcquistan': '5470502461',
    'sa-author-tendai-mutunhire': '4157420794',
    'sa-author-guest-contributor': '9218175780',
    'sa-author-mihajlo-pavloski': '2081921796',
    'sa-author-esther-vaati': '9026604091',
    'sa-author-adnan-rahic': '5829595117',
    'sa-author-sam-galizia': '1890350103',
    'sa-topic-node-js': '9234966588',
    'sa-topic-javascript': '4871736666',
    'sa-topic-python': '6017776300',
    'sa-topic-java': '4704694632',
    'sa-topic-machine-learning': '2618830613',
    'sa-topic-ai': '7679585600',
    'sa-topic-tensorflow': '2325943302',
    'sa-topic-scikit-learn': '8801095589',
    'sa-topic-algorithms': '9664898345',
    'sa-topic-data-structures': '8884856065',
    'sa-topic-aws': '6294351744',
    'sa-topic-apache': '4220999970',
    'sa-topic-django': '2399338763',
    'sa-topic-flask': '3357197212',
    'sa-topic-shell': '7386698293',
    'sa-topic-bash': '6588621943',
    'sa-topic-npm': '8417952206',
    'sa-topic-unix': '4912578190',
    'sa-topic-linux': '4029428281',
    'sa-topic-json': '7104870536',
    'sa-topic-maven': '2286414858',
    'sa-topic-web-framework': '4321551251',
    'sa-topic-security': '8660251512',
    'sa-topic-arduino': '2649376939',
    'sa-topic-express-js': '3008469582',
    'sa-topic-es6': '3447453289',
    'sa-topic-mongodb': '9382306243',
    'sa-topic-how-to': '5443061231',
    'sa-position-sidebar-top': '9190734552',
    'sa-position-sidebar-middle': '5600217174',
    'sa-position-sidebar-bottom': '3770886911',
    'sa-position-content-top': '4789698384',
    'sa-position-content-middle': '7686081194',
    'sa-position-content-bottom': '4576223195',
};
</script>    <link rel="shortcut icon" href="https://stackabuse.com/favicon.ico" type="image/x-icon">
    <link rel="canonical" href="https://stackabuse.com/javas-object-methods-equals-object/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="Stack Abuse">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Java&#39;s Object Methods: equals(Object)">
    <meta property="og:description" content="Introduction This article is a continuation of a series of articles describing the often forgotten about methods of the Java language&#39;s base Object class. The following are the methods of the base Java Object which are present in all Java objects due to the implicit inheritance of Object. toString getClass">
    <meta property="og:url" content="https://stackabuse.com/javas-object-methods-equals-object/">
    <meta property="article:published_time" content="2018-10-15T14:00:00.000Z">
    <meta property="article:modified_time" content="2019-03-22T20:17:32.000Z">
    <meta property="article:tag" content="java">
    
    <meta property="article:author" content="https://www.facebook.com/adam.hittle.7">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="Java&#39;s Object Methods: equals(Object)">
    <meta name="twitter:description" content="Introduction This article is a continuation of a series of articles describing the often forgotten about methods of the Java language&#39;s base Object class. The following are the methods of the base Java Object which are present in all Java objects due to the implicit inheritance of Object. toString getClass">
    <meta name="twitter:url" content="https://stackabuse.com/javas-object-methods-equals-object/">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Adam McQuistan">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="java">
    <meta name="twitter:site" content="@ScottWRobinson">
    <meta name="twitter:creator" content="@adamjmcquistan">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Stack Abuse",
        "logo": {
            "@type": "ImageObject",
            "url": "https://stackabuse.com/favicon.ico",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Adam McQuistan",
        "image": {
            "@type": "ImageObject",
            "url": "https://stackabuse.com/content/images/2017/11/linkedinphoto.png",
            "width": 400,
            "height": 400
        },
        "url": "https://stackabuse.com/author/adam/",
        "sameAs": [
            "https://thecodinginterface.com/",
            "https://www.facebook.com/adam.hittle.7",
            "https://twitter.com/adamjmcquistan"
        ]
    },
    "headline": "Java&#x27;s Object Methods: equals(Object)",
    "url": "https://stackabuse.com/javas-object-methods-equals-object/",
    "datePublished": "2018-10-15T14:00:00.000Z",
    "dateModified": "2019-03-22T20:17:32.000Z",
    "keywords": "java",
    "description": "Introduction This article is a continuation of a series of articles describing the often forgotten about methods of the Java language&#x27;s base Object class. The following are the methods of the base Java Object which are present in all Java objects due to the implicit inheritance of Object. toString getClass",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://stackabuse.com/"
    }
}
    </script>

    <script src="./Java&#39;s Object Methods_ equals(Object)_files/ghost-sdk.min.js"></script>
<script>
ghost.init({
	clientId: "ghost-frontend",
	clientSecret: "952da4a040f4"
});
</script>
    <meta name="generator" content="Ghost 2.23">
    <link rel="alternate" type="application/rss+xml" title="Stack Abuse" href="https://stackabuse.com/rss/">
    <script type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/jquery.min.js"></script>
<!-- Repixel Code -->
<script>
  (function(w, d, s, id, src){
  w.Repixel = r = {
    init: function(id) {
      w.repixelId = id;
    }
  };
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)){ return; }
  js = d.createElement(s); 
  js.id = id;
  js.async = true;
  js.onload = function(){
      Repixel.init(w.repixelId);
  };
  js.src = src;
  fjs.parentNode.insertBefore(js, fjs);
  }(window, document, 'script', 'repixel', 
  'https://sdk.repixel.co/r.js'));
  Repixel.init('5cefff7fce3aad00089e44e5');
</script>
<!-- Repixel Code -->
<script type="text/javascript" async="" src="./Java&#39;s Object Methods_ equals(Object)_files/embed.js"></script><script async="" type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/count.js"></script><style type="text/css">.hljs-ln{border-collapse:collapse}.hljs-ln td{padding:0}.hljs-ln-n:before{content:attr(data-line-number)}</style><link rel="preload" href="./Java&#39;s Object Methods_ equals(Object)_files/f.txt" as="script"><script type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/f.txt"></script><link rel="preload" href="./Java&#39;s Object Methods_ equals(Object)_files/f(1).txt" as="script"><script type="text/javascript" src="./Java&#39;s Object Methods_ equals(Object)_files/f(1).txt"></script><script src="./Java&#39;s Object Methods_ equals(Object)_files/pubads_impl_2019121002.js" async=""></script><link rel="prefetch" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.91c71242b4acaa0ee7f9db125ef21f90.css"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.0b9bbdb3bc568241a5d1d7626947e8b0.js"><link rel="prefetch" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.0523614fef9787c3e3459e0602078385.js"><link rel="prefetch" as="script" href="https://disqus.com/next/config.js"><script src="./Java&#39;s Object Methods_ equals(Object)_files/count-data.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><iframe src="./Java&#39;s Object Methods_ equals(Object)_files/serve.html" id="bidt-sra" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="1" height="1"></iframe><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><img src="./Java&#39;s Object Methods_ equals(Object)_files/notify"><img src="./Java&#39;s Object Methods_ equals(Object)_files/notify(1)"><img src="./Java&#39;s Object Methods_ equals(Object)_files/notify(2)"><img src="./Java&#39;s Object Methods_ equals(Object)_files/notify(3)"></head>
<body class="post-template tag-java"><div id="MathJax_Message" style="display: none;"></div>
	<nav class="navbar navbar-default navbar-static-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <i class="fa fa-bars"></i>
      </button>
      <a class="navbar-brand" href="https://stackabuse.com/">Stack <span style="color:#f16334;">Abuse</span></a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav">
	<li class="nav-node-js" role="presentation"><a href="https://stackabuse.com/tag/node/">Node.js</a></li>
	<li class="nav-python" role="presentation"><a href="https://stackabuse.com/tag/python">Python</a></li>
	<li class="nav-java" role="presentation"><a href="https://stackabuse.com/tag/java/">Java</a></li>
    <li class="nav-hireremote" role="presentation">
        <a rel="nofollow" target="_blank" href="https://hireremote.io/" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Nav-Link">
            Jobs
        </a>
    </li>
</ul>
      <!--<ul class="nav navbar-nav pull-right">
        <li role="presentation">
          <a class="btn btn-success nav-btn" href="http://jobs.stackabuse.com">Find a Job</a>
        </li>
        <li role="presentation">
          <a class="btn btn-danger nav-btn" href="http://jobs.stackabuse.com/post">Post a Job</a>
        </li>
      </ul>-->
    </div><!--/.nav-collapse -->
  </div>
</nav>
	<!-- start site's main content area -->
<section class="content-wrap">
	<div class="container">
		<div class="row">
			<!-- start main post area -->
			<div class="col-md-8 main-content">
				<!-- start post -->
				<article id="5d2e2f5a2ad4a010f9ee6268" class="post tag-java">
					<div class="post-head">
						<h2 class="post-title">Java's Object Methods: equals(Object)</h2>
						<div class="post-meta">
							<span class="author">
                                By
                                <a rel="nofollow" target="_blank" href="https://twitter.com/adamjmcquistan">
                                    <i class="fa fa-twitter" style="color:#55acee;"></i>
                                    Adam McQuistan
                                </a>
                            </span> •
							<span class="date">October 15, 2018</span> •
							<span class="comment-count"><a href="https://stackabuse.com/javas-object-methods-equals-object/#disqus_thread">0 Comments</a></span>
						</div>
					</div>
                    <div class="post-ad">
                        <!-- 728x90/320x50 -->
<div id="waldo-tag-3878" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() { googletag.display('waldo-tag-3878'); });</script><span id="_waldo-tag-3878-4-container"></span></div>                    </div>
					<div class="post-content">
						<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><h3 id="introduction">Introduction</h3>
<p>This article is a continuation of a series of articles describing the often forgotten about methods of the Java language's base Object class. The following are the methods of the base Java Object which are present in all Java objects due to the implicit inheritance of Object.</p>
<ul>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-tostring/">toString</a></li>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-getclass/">getClass</a></li>
<li>equals <em>(you are here)</em></li>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-hashcode">hashCode</a></li>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-clone/">clone</a></li>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-finalize/">finalize</a></li>
<li><a target="_blank" href="https://stackabuse.com/javas-object-methods-wait-notify/">wait &amp; notify</a></li>
</ul>
<p>The focus of this article is the <code>equals(Object)</code> method which is used to test for equality among objects and gives the developer the ability to define a meaningful test of logical equivalence.</p>
<h3 id="vsequalsobject">== vs equals(Object)</h3>
<p>As you might have guessed the <code>equals(Object)</code> method is used to test for equality among reference types (objects) in Java. Ok, makes sense but, you might also be thinking "Why can't I just use <code>==</code>?" The answer to this question is that when it comes to reference types the <code>==</code> operator is only true when comparing two <em>references</em> to the same instantiated object in memory. On the other hand the <code>equals(Object)</code> can be overridden to implement the notion of <em>logical equivalence</em> rather than mere <em>instance equivalence</em>.</p>
<p>I think an example would best describe this difference between using the <code>==</code> verse the <code>equals(Object)</code> method on Strings.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
        String myName = <span class="hljs-string">"Adam"</span>;
        String myName2 = myName; <span class="hljs-comment">// references myName</span>
        String myName3 = <span class="hljs-keyword">new</span> String(<span class="hljs-string">"Adam"</span>); <span class="hljs-comment">// new instance but same content</span>

        <span class="hljs-keyword">if</span> (myName == myName2)
            System.out.println(<span class="hljs-string">"Instance equivalence: "</span> + myName + <span class="hljs-string">" &amp; "</span> + myName2);

        <span class="hljs-keyword">if</span> (myName.equals(myName2))
            System.out.println(<span class="hljs-string">"Logical equivalence: "</span> + myName + <span class="hljs-string">" &amp; "</span> + myName2);

        <span class="hljs-keyword">if</span> (myName == myName3)
            System.out.println(<span class="hljs-string">"Instance equivalence: "</span> + myName + <span class="hljs-string">" &amp; "</span> + myName3);

        <span class="hljs-keyword">if</span> (myName.equals(myName3))
            System.out.println(<span class="hljs-string">"Logical equivalence: "</span> + myName + <span class="hljs-string">" &amp; "</span> + myName3);
    }
}
</code></pre>
<p>Output:</p>
<pre><code class="hljs properties"><span class="hljs-attr">Instance</span> <span class="hljs-string">equivalence: Adam &amp; Adam</span>
<span class="hljs-attr">Logical</span> <span class="hljs-string">equivalence: Adam &amp; Adam</span>
<span class="hljs-attr">Logical</span> <span class="hljs-string">equivalence: Adam &amp; Adam</span>
</code></pre>
<p>In the example above I created and compared three String variables: <code>myName</code>, <code>myName2</code> which is a copy of the reference to <code>myName</code>, and <code>myName3</code> which is a totally new instance but with the same content. First I show that the <code>==</code> operator identifies <code>myName</code> and <code>myName2</code> as being instance equivalent, which I would expect because <code>myName2</code> is just a copy of the reference. Due to the fact that <code>myName</code> and <code>myName2</code> are identical instance references it follows that they have to be logically equivalent.</p>
<p>The last two comparisons really demonstrate the difference between using <code>==</code> and <code>equals(Object)</code>. The instance comparison using <code>==</code> demonstrates they are different instances with their own unique memory locations while the logical comparison using <code>equals(Object)</code> shows they contain the exact same content.</p>
<h3 id="divingintoequalsobject">Diving into equals(Object)</h3>
<p>Ok, we now know the difference between <code>==</code> and <code>equals(Object)</code>, but what if I were to tell you the base implementation of the Object class actually produces the same result as the <code>==</code> operator?</p>
<p>What...!? I know... that seems strange, but hey the developers of Java had to start somewhere. Let me say that again, by default the <code>equals(Object)</code> method that you inherit in your custom classes simply tests for instance equality. It is up to us as the developers to determine if this is appropriate or not, that is, to determine if there is a notion of logical equivalence that is required for our class.</p>
<p>Again, let me use the <code>Person</code> class that I introduced previously in this series for more demonstration.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-keyword">private</span> String firstName;
    <span class="hljs-keyword">private</span> String lastName;
    <span class="hljs-keyword">private</span> LocalDate dob;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(String firstName, String lastName, LocalDate dob)</span> </span>{
        <span class="hljs-keyword">this</span>.firstName = firstName;
        <span class="hljs-keyword">this</span>.lastName = lastName;
        <span class="hljs-keyword">this</span>.dob = dob;
    }

    <span class="hljs-comment">// omitting getters and setters for brevity</span>

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;Person: firstName="</span> + firstName + <span class="hljs-string">", lastName="</span> + lastName + <span class="hljs-string">", dob="</span> + dob + <span class="hljs-string">"&gt;"</span>;
    }
}
</code></pre>
<p>Let me again use a simple program wrapped in a <code>Main</code> class that demonstrates both identical instance equality and logical equality by overriding <code>equals(Object)</code>.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
        Person me = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"Adam"</span>, <span class="hljs-string">"McQuistan"</span>, LocalDate.parse(<span class="hljs-string">"1987-09-23"</span>));
        Person me2 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"Adam"</span>, <span class="hljs-string">"McQuistan"</span>, LocalDate.parse(<span class="hljs-string">"1987-09-23"</span>));

        <span class="hljs-keyword">if</span> (me != me2)
            System.out.println(<span class="hljs-string">"Not instance equivalent"</span>);

        <span class="hljs-keyword">if</span> (!me.equals(me2))
            System.out.println(<span class="hljs-string">"Not logically equivalent"</span>);
    }
}
</code></pre>
<p>Output:</p>
<pre><code class="hljs properties"><span class="hljs-attr">Not</span> <span class="hljs-string">instance equivalent</span>
<span class="hljs-attr">Not</span> <span class="hljs-string">logically equivalent</span>
</code></pre>
<p>As you can see the two people instances <code>me</code> and <code>me2</code> are neither logically or instance equivalent out of the box, even though one would reasonably conceive that <code>me</code> and <code>me2</code> represent the same thing based on the content.</p>
<p>This is where it becomes important to override the default implementation and provide one that makes sense for the class being defined. However, according to the official Java docs there are some rules that need to be followed when doing so to avoid problems with some important implementation dependencies of the language.</p><div><!-- 728x90/300x250/320x50 --><div id="waldo-tag-3880"><div id="_waldo-tag-3880-2-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3880-2" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="728" height="90" src="./Java&#39;s Object Methods_ equals(Object)_files/render.html">
    </iframe></div></div></div>
<p>The rules outlined in the <a rel="nofollow" target="_blank" href="https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)">equals Java docs</a> for given object instances <code>x</code>, <code>y</code>, and <code>z</code> are as follows:</p>
<ul>
<li>reflexive: <code>x.equals(x)</code> must be true for all non-null reference instances of <code>x</code></li>
<li>symmetric: <code>x.equals(y)</code> and <code>y.equals(x)</code> must be true for all non-null reference instances of <code>x</code> and <code>y</code></li>
<li>transitive: if <code>x.equals(y)</code> and <code>y.equals(z)</code> then <code>x.equals(z)</code> must also be true for non-null reference instances of <code>x</code>, <code>y</code>, and <code>z</code></li>
<li>consistency: <code>x.equals(y)</code> must always hold true where no member values used in the implementation of equals have changed in <code>x</code> and <code>y</code> non-null reference instances</li>
<li>no null equality: <code>x.equals(null)</code> must never be true</li>
<li>always override <code>hashCode()</code> when overriding <code>equals()</code></li>
</ul>
<h3 id="unpackingtherulesofoverridingequalsobject">Unpacking the Rules of Overriding equals(Object)</h3>
<p><strong>A. Reflexive: x.equals(x)</strong></p>
<p>To me this is the easiest to grasp. Plus the default implementation of the <code>equals(Object)</code> method guarantees it, but for the sake of completeness I will provide an example implementation below that follows this rule:</p>
<pre><code class="language-java hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-comment">// omitting for brevity</span>

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> == o) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
    }
}
</code></pre>
<p><strong>B. Symmetric: x.equals(y) and y.equals(x)</strong></p>
<p>This one may seem intuitive at first glance, but it is actually quite easy to make a mistake and violate this rule. In fact, the main reason this is often violated is in cases of inheritance, which happens to be a very popular thing in Java.</p>
<p>Before I give an example let me update the <code>equals(Object)</code> method to account for the most obvious new requirement, which is the fact that the equivalence test must implement a logical test in addition to the instance equality test.</p>
<p>To implement a logical test I will want to compare the state-containing fields between two instances of the people class, described as <code>x</code> and <code>y</code>. In addition I should also check to make sure the two instances are of the same instance type, like so:</p>
<pre><code class="language-java hljs"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-comment">// omitting for brevity</span>

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> == o) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }
        <span class="hljs-keyword">if</span> (!(o <span class="hljs-keyword">instanceof</span> Person)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
        }
        Person p = (Person)o;
        <span class="hljs-keyword">return</span> firstName.equals(p.firstName)
                &amp;&amp; lastName.equals(p.lastName)
                &amp;&amp; dob.equals(p.dob);
    }
}
</code></pre>
        <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">        
            <form action="https://stackabuse.com/javas-object-methods-equals-object/#" method="post" class="form-inline validate" novalidate="">
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and reviews in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row">
                    <div class="col-md-7 col-md-offset-1 col-xs-12">
                        <input type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-4 col-xs-12 text-left">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-subscribe" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->    
<p>Ok, it should be evident that <code>Person</code> now has a much more robust <code>equals(Object)</code> implementation. Now let me give an example of how inheritance can cause a violation of symmetry. Below is a seemingly harmless class, called <code>Employee</code>, that inherits from <code>Person</code>.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Person</span> </span>{

    <span class="hljs-keyword">private</span> String department;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span><span class="hljs-params">(String firstName, String lastName, LocalDate dob, String department)</span> </span>{
        <span class="hljs-keyword">super</span>(firstName, lastName, dob);
        <span class="hljs-keyword">this</span>.department = department;
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (o == <span class="hljs-keyword">this</span>) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }

        <span class="hljs-keyword">if</span> (!(o <span class="hljs-keyword">instanceof</span> Employee)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
        }
        Employee p = (Employee)o;
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.equals(o) &amp;&amp; department.equals(p.department);

    }
}
</code></pre>
<p>Hopefully you are able to notice that these should not be treated as equal instances, but you may be surprised with what I'm about to show you.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
        Person billy = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"Billy"</span>, <span class="hljs-string">"Bob"</span>, LocalDate.parse(<span class="hljs-string">"2016-09-09"</span>));
        MinorPerson billyMinor = <span class="hljs-keyword">new</span> MinorPerson(
                billy.getFirstName(),
                billy.getLastName(),
                billy.getDob());

        System.out.println(<span class="hljs-string">"billy.equals(billyMinor): "</span> + billy.equals(billyMinor));
        System.out.println(<span class="hljs-string">"billyMinor.equals(billy): "</span> + billyMinor.equals(billy));
    }
}
</code></pre>
<p>Output:</p>
<pre><code class="hljs cs">billy.<span class="hljs-keyword">equals</span>(billyEmployee): <span class="hljs-literal">true</span>
billyEmployee.<span class="hljs-keyword">equals</span>(billy): <span class="hljs-literal">false</span>
</code></pre>
<p>Oops! Clearly a violation of symmetry, <code>billy</code> equals <code>billyEmployee</code> but the opposite is not true. So what do I do? Well, I could do something like the following, given that I wrote the code and know what inherits what, then modify the <code>Employee</code> <code>equals(Object)</code> method like so:</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Person</span> </span>{

    <span class="hljs-keyword">private</span> String department;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Employee</span><span class="hljs-params">(String firstName, String lastName, LocalDate dob, String department)</span> </span>{
        <span class="hljs-keyword">super</span>(firstName, lastName, dob);
        <span class="hljs-keyword">this</span>.department = department;
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (o == <span class="hljs-keyword">this</span>) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }

        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">instanceof</span> Person &amp;&amp; !(o <span class="hljs-keyword">instanceof</span> Employee)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.equals(o);
        }

        <span class="hljs-keyword">if</span> (o <span class="hljs-keyword">instanceof</span> Employee) {
            Employee p = (Employee)o;
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">super</span>.equals(o) &amp;&amp; department.equals(p.department);
        }

        <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
    }
}
</code></pre>
<p>Output:</p>
<pre><code class="hljs cs">billy.<span class="hljs-keyword">equals</span>(billyEmployee): <span class="hljs-literal">true</span>
billyEmployee.<span class="hljs-keyword">equals</span>(billy): <span class="hljs-literal">true</span>
</code></pre><div><!-- 728x90/300x250/320x50 --><div id="waldo-tag-3884"><div id="_waldo-tag-3884-4-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3884-4" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="728" height="90" src="./Java&#39;s Object Methods_ equals(Object)_files/render(1).html">
    </iframe></div></div></div>
<p>Yay I have symmetry! But am I really ok? Notice here how I'm going out of my way to make <code>Employee</code> now conform... this should be sending up a red flag which will come back to bite me later as I demonstrate in the next section.</p>
<p><strong>C. Transitivity: if x.equals(y) and y.equals(z) then x.equals(z)</strong></p>
<p>Thus far I have ensured that my <code>Person</code> and <code>Employee</code> classes have <code>equals(Object)</code> methods that are both reflexive and symmetric, so I need to check that transitivity is also being followed. I'll do so below.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span> </span>{
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
        Person billy = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">"Billy"</span>, <span class="hljs-string">"Bob"</span>, LocalDate.parse(<span class="hljs-string">"2016-09-09"</span>));
        Employee billyEngineer = <span class="hljs-keyword">new</span> Employee(
                billy.getFirstName(),
                billy.getLastName(),
                billy.getDob(),
                <span class="hljs-string">"Engineering"</span>);
        Employee billyAccountant = <span class="hljs-keyword">new</span> Employee(<span class="hljs-string">"Billy"</span>, <span class="hljs-string">"Bob"</span>, LocalDate.parse(<span class="hljs-string">"2016-09-09"</span>), <span class="hljs-string">"Accounting"</span>);

        System.out.println(<span class="hljs-string">"billyEngineer.equals(billy): "</span> + billyEngineer.equals(billy));
        System.out.println(<span class="hljs-string">"billy.equals(billyAccountant): "</span> + billy.equals(billyAccountant));
        System.out.println(<span class="hljs-string">"billyAccountant.equals(billyEngineer): "</span> + billyAccountant.equals(billyEngineer));
    }
}
</code></pre>
<p>Output:</p>
<pre><code class="hljs cs">billyEngineer.<span class="hljs-keyword">equals</span>(billy): <span class="hljs-literal">true</span>
billy.<span class="hljs-keyword">equals</span>(billyAccountant): <span class="hljs-literal">true</span>
billyAccountant.<span class="hljs-keyword">equals</span>(billyEngineer): <span class="hljs-literal">false</span>
</code></pre>
<p>Darn! I was on such a good path there for a while. What happened? Well it turns out in classical inheritance within the Java language you cannot add an identifying class member to a subclass and still expect to be able to override <code>equals(Object)</code> without violating either symmetry or transitivity. The best alternative I have found is to use composition patterns instead of inheritance. This effectively breaks the rigid hierarchy of inheritance between the classes, like so:</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GoodEmployee</span> </span>{

    <span class="hljs-keyword">private</span> Person person;
    <span class="hljs-keyword">private</span> String department;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">GoodEmployee</span><span class="hljs-params">(String firstName, String lastName, LocalDate dob, String department)</span> </span>{
        person = <span class="hljs-keyword">new</span> Person(firstName, lastName, dob);
        <span class="hljs-keyword">this</span>.department = department;
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (o == <span class="hljs-keyword">this</span>) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }

        <span class="hljs-keyword">if</span> (!(o <span class="hljs-keyword">instanceof</span> Employee)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
        }

        GoodEmployee p = (GoodEmployee)o;
        <span class="hljs-keyword">return</span> person.equals(o) &amp;&amp; department.equals(p.department);
    }
}
</code></pre>
<p><strong>D. Consistency: x.equals(y) as long as nothing changes</strong></p>
<p>This one is really very easy to comprehend. Basically, if two objects are equal then they will only remain equal as long as neither of them change. Although this is easy to understand, caution should be taken to ensure that values do not change if there could be negative consequences resulting from such as change.</p>
<p>The best way to ensure things do not change in a class is to make it immutable by only supplying one way to assign values. Generally this one way on assignment should be via a constructor during instantiation. Also declaring class fields <code>final</code> can help with this.</p>
<p>Below is an example of the <code>Person</code> class defined as an immutable class. In this case two objects that are initially equal will always be equal because you cannot change their state once created.</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">import</span> java.time.LocalDate;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Person</span> </span>{
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String firstName;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String lastName;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> LocalDate dob;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Person</span><span class="hljs-params">(String firstName, String lastName, LocalDate dob)</span> </span>{
        <span class="hljs-keyword">this</span>.firstName = firstName;
        <span class="hljs-keyword">this</span>.lastName = lastName;
        <span class="hljs-keyword">this</span>.dob = dob;
    }

    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getFirstName</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> firstName;
    }

    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getLastName</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> lastName;
    }

    <span class="hljs-function"><span class="hljs-keyword">public</span> LocalDate <span class="hljs-title">getDob</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> dob;
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span><span class="hljs-params">()</span> </span>{
        Class c = getClass();
        <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;"</span> + c.getSimpleName() + <span class="hljs-string">": firstName="</span> + firstName + <span class="hljs-string">", lastName="</span> + lastName + <span class="hljs-string">", dob="</span> + dob + <span class="hljs-string">"&gt;"</span>;
    }

    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">equals</span><span class="hljs-params">(Object o)</span> </span>{
        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">this</span> == o) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;
        }
        <span class="hljs-keyword">if</span> (!(o <span class="hljs-keyword">instanceof</span> Person)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
        }
        Person p = (Person)o;
        <span class="hljs-keyword">return</span> firstName.equals(p.firstName)
                &amp;&amp; lastName.equals(p.lastName)
                &amp;&amp; dob.equals(p.dob);
    }
}
</code></pre>
<p><strong>E. No null equality: x.equals(null)</strong></p>
<p>Sometimes you will see this enforced via a direct check for the <code>Object</code> instance <code>o</code> being equal to <code>null</code>, but in the above example this is implicitly checked using the <code>!(o instanceof Person)</code> due to the fact that the <code>instanceof</code> command will always return false if the left operand is null.</p>
<p><strong>F. Always override <code>hashCode()</code> when overriding <code>equals(Object)</code></strong></p>
<p>Due to the nature of various implementation details in other areas of the Java language, such as the collections framework, it is imperative that if <code>equals(Object)</code> is overridden then <code>hashCode()</code> must be overridden as well. Since the next article of this series is going to specifically cover the details of implementing your own <code>hasCode()</code> method I will not be covering this requirement in any more detail here other than to say that two instances that exhibit equality via the <code>equals(Object)</code> method must produce the identical hash codes via <code>hashCode()</code>.</p>
<h3 id="conclusion">Conclusion</h3>
<p>This article described the meaning and use of the <code>equals(Object)</code> method along with why it may be important for your programs to have a notion of logical equality that differs from identity (instance) equality.</p>
<p>As always, thanks for reading and don't be shy about commenting or critiquing below.</p>
<!--kg-card-end: markdown--><!--kg-card-end: markdown-->
					</div>
					<footer class="post-footer clearfix">
						<div class="pull-left tag-list">
							<i class="fa fa-folder-open-o"></i>
							<a href="https://stackabuse.com/tag/java/">java</a>
						</div>
						<div class="pull-right share">
							<div>
	<ul class="share-icons">
		<!-- twitter -->
		<li>
			<a href="https://twitter.com/share?text=Java%27s%20Object%20Methods%3A%20equals(Object)&amp;url=https://stackabuse.com/javas-object-methods-equals-object/" onclick="window.open(this.href, &#39;twitter-share&#39;, &#39;width=550,height=235&#39;);return false;"><i class="fa fa-twitter" style="color:#55acee;"></i></a>
		</li>
		<!-- facebook -->
		<li>
			<a href="https://www.facebook.com/sharer/sharer.php?u=https://stackabuse.com/javas-object-methods-equals-object/" onclick="window.open(this.href, &#39;facebook-share&#39;,&#39;width=580,height=296&#39;);return false;"><i class="fa fa-facebook" style="color:#3b5998;"></i></a>
		</li>
		<!-- google plus -->
		<li>
			<a href="https://plus.google.com/share?url=https://stackabuse.com/javas-object-methods-equals-object/" onclick="window.open(this.href, &#39;google-plus-share&#39;, &#39;width=490,height=530&#39;);return false;"><i class="fa fa-google-plus" style="color:#dc4e41;"></i></a>
		</li>
		<!-- linkedin -->
		<li>
			<a href="https://www.linkedin.com/shareArticle?mini=true%26url=https://stackabuse.com/javas-object-methods-equals-object/%26source=https://stackabuse.com" onclick="window.open(this.href, &#39;linkedin-share&#39;, &#39;width=490,height=530&#39;);return false;"><i class="fa fa-linkedin" style="color:#0077b5;"></i></a>
		</li>
	</ul>
</div>						</div>
					</footer>
                    <!-- start about the author -->
<div class="about-author clearfix">
		<a href="https://stackabuse.com/author/adam/"><img src="./Java&#39;s Object Methods_ equals(Object)_files/linkedinphoto.png" alt="Author image" class="avatar pull-left"></a>
	<div class="details">
		<div class="author">
			About <a href="https://stackabuse.com/author/adam/">Adam McQuistan</a>
		</div>
		<div class="meta-info" style="font-style: normal;">
			<span class="location"><i class="fa fa-home"></i>Lincoln, Nebraska</span>
			<span>
                <i class="fa fa-twitter" style="color:#55acee;"></i>
                <a rel="nofollow" href="https://twitter.com/adamjmcquistan" target="_BLANK">Twitter</a>
            </span>
            <span>
                <i class="fa fa-globe" style="color:#333333;"></i>
                <a rel="nofollow" href="https://thecodinginterface.com/" target="_BLANK">Website</a>
            </span>
		</div>
		<div class="bio" rel="nofollow" target="_blank">
            I am both passionate and inquisitive about all things software. My background is mostly in Python, Java, and JavaScript in the areas of science but, have also worked on large ecommerce and ERP apps.
        </div>
	</div>
</div>
<!-- end about the author -->				</article>
                <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">        
            <form action="https://stackabuse.com/javas-object-methods-equals-object/#" method="post" class="form-inline validate" novalidate="">
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and reviews in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row">
                    <div class="col-md-7 col-md-offset-1 col-xs-12">
                        <input type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-4 col-xs-12 text-left">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-subscribe" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->				<div class="comment-wrap">
					<!-- start disqus comment -->
<div class="disqus-container">
	<div id="disqus_thread"><iframe id="dsq-app9689" name="dsq-app9689" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./Java&#39;s Object Methods_ equals(Object)_files/saved_resource.html" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 698px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>
	    <script type="text/javascript">
	        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
	        var disqus_shortname = disqus_shortname; // required: replace example with your forum shortname

	        /* * * DON'T EDIT BELOW THIS LINE * * */
	        (function() {
	            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
	            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
	            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	        })();
	    </script>
	    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
</div>
<!-- end disqus comment -->				</div>
				<!-- start prev next wrap -->
<div class="prev-next-wrap clearfix">
		<a class="btn btn-default pull-left" href="https://stackabuse.com/python-gui-development-with-tkinter/"><i class="fa fa-angle-left fa-fw"></i> Previous Post : Python GUI Development with Tkinter</a>
		&nbsp;
        <a class="btn btn-default pull-right" href="https://stackabuse.com/a-brief-introduction-to-matplotlib-for-data-visualization/">Next Post : A Brief Introduction to matplotlib for Data Visualization <i class="fa fa-angle-right fa-fw"></i></a>
</div>				<!-- end post -->
			</div>
			<!-- end main post area -->
			<!-- start sidebar -->
<div class="col-md-4 sidebar">
    <!-- start widget -->
<div class="widget">
	<h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-3874" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() { googletag.display('waldo-tag-3874'); });</script><div id="_waldo-tag-3874-3-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3874-3" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="300" height="250" src="./Java&#39;s Object Methods_ equals(Object)_files/render(2).html">
    </iframe></div></div>    </div>
</div>
<!-- end widget -->    <!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-md-4 col-xs-12">
                <a rel="nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="fa fa-twitter fa-lg"></i>
                    Twitter
                </a>
            </div>
            <div class="col-md-4 col-xs-12">
                <a rel="nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="fa fa-facebook fa-lg"></i>
                    Facebook
                </a>
            </div>
            <div class="col-md-4 col-xs-12">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="fa fa-rss fa-lg"></i>
                    RSS
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->    <!-- start newsletter widget -->
<div class="widget">
    <h4 class="title">Newsletter</h4>
    <div class="content newsletter">
        <p style="font-size: 16px;">Subscribe to our newsletter! Get occassional tutorials, guides, and reviews in your inbox.</p>
        <form action="https://stackabuse.com/javas-object-methods-equals-object/#" method="post" class="validate" novalidate="">
            <div class="input-group">
                <input type="email" value="" name="email" class="required email input-lg" placeholder="Enter your email...">
            </div>
            <div class="input-group">
                <button type="submit" name="subscribe" class="btn btn-lg btn-default" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                    <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                    Subscribe
                </button>
            </div>
            <span style="color: #7f7f7f;">No spam ever. Unsubscribe at any time.</span>
        </form>
        <div class="message"></div>
    </div>
</div>
<!-- end tag cloud widget -->    <!-- start widget -->
<div class="widget">
    <h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-3876" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() { googletag.display('waldo-tag-3876'); });</script><div id="_waldo-tag-3876-0-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3876-0" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="300" height="250" src="./Java&#39;s Object Methods_ equals(Object)_files/render(3).html">
    </iframe></div></div>    </div>
</div>
<!-- end widget -->    <div class="widget-sticky" style="width: 360px; position: fixed; top: 10px;">
        <!-- start widget -->
<div class="widget">
    <h4 class="title">Our Sponsors</h4>
    <div class="content text-center">
        <a class="do-link" rel="nofollow" target="_blank" href="https://stackabu.se/digitalocean" ga-on="click" ga-event-category="Sponsorship" ga-event-action="Click" ga-event-label="DO-Link">
            <img style="margin-left: auto;margin-right: auto;" alt="DigitalOcean" src="./Java&#39;s Object Methods_ equals(Object)_files/do-logo-horizontal-blue.svg">
        </a>
        <div style="margin: 15px 30px 0px 30px;font-size: 1.1em;">
            The simplest cloud platform for developers and teams.
        </div>
        <div>
            <a class="do-link" rel="nofollow" target="_blank" href="https://stackabu.se/digitalocean" ga-on="click" ga-event-category="Sponsorship" ga-event-action="Click" ga-event-label="DO-Link">Learn More</a>
        </div>
    </div>
</div>
<!-- end widget -->        <!-- start widget -->
<div class="widget">
    <h4 class="title">Want a remote job?</h4>
    <div class="content jobs">
        <ul style="margin-bottom: 0px; display: block;">
        <li><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0880-senior-software-engineer-at-income-discovery" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Senior Software Engineer<br><span class="job-company">Income Discovery</span>&nbsp;<span class="job-posted-at">3 days ago</span></a><div><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0880-senior-software-engineer-at-income-discovery" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link"></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-java-jobs"><span class="job-tag">java</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-javascript-jobs"><span class="job-tag">javascript</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-aws-jobs"><span class="job-tag">aws</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-computational-finance-jobs"><span class="job-tag">computational-finance</span></a></div><hr></li><li><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0879-senior-machine-learning-series-a-funded-startup-at-source-coders-inc" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Senior Machine Learning - Series A Funded Sta...<br><span class="job-company">Source Coders Inc</span>&nbsp;<span class="job-posted-at">3 days ago</span></a><div><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0879-senior-machine-learning-series-a-funded-startup-at-source-coders-inc" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link"></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-machine-learning-jobs"><span class="job-tag">machine-learning</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-scala-jobs"><span class="job-tag">scala</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-python-jobs"><span class="job-tag">python</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-tensorflow-jobs"><span class="job-tag">tensorflow</span></a></div><hr></li><li><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0866-senior-full-stack-developer-to-challenge-convention-at-oreilly-auto-parts" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Senior Full-stack Developer To Challenge Conv...<br><span class="job-company">O'Reilly Auto Parts</span>&nbsp;<span class="job-posted-at">5 days ago</span></a><div><a rel="nofollow" target="_blank" href="https://hireremote.io/remote-job/0866-senior-full-stack-developer-to-challenge-convention-at-oreilly-auto-parts" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link"></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-javascript-jobs"><span class="job-tag">javascript</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-java-jobs"><span class="job-tag">java</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-css-jobs"><span class="job-tag">css</span></a><a rel="nofollow" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-java-8-jobs"><span class="job-tag">java-8</span></a></div></li></ul>
        <div class="row">
            <div class="col-md-4">
                <strong>
                    <a rel="nofollow" target="_blank" class="btn btn-default" href="https://hireremote.io/" style="margin-top: 10px;" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-More-Link">
                        <i class="fa fa-arrow-circle-right"></i>&nbsp; More jobs
                    </a>
                </strong>
            </div>
            <div class="col-md-8 text-right" style="margin-top: 18px;">
                Jobs via
                <a rel="nofollow" target="_blank" href="https://hireremote.io/" class="hr-link" style="color: #f16334;" ga-on="click" ga-event-category="Affiliate" ga-event-action="Click" ga-event-label="HR-Link">
                    HireRemote.io
                </a>
            </div>
            <!-- <div class="col-md-9 text-right">
                <span>Jobs by</span>
                <a
                    rel="nofollow" target="_blank"
                    href="https://www.hireremote.io/"
                    id="jobs_widget_link"
                    ga-on="click"
                    ga-event-category="Jobs"
                    ga-event-action="Click"
                    ga-event-label="HR-Jobs-By"
                >
                    <span id="hr_logo_container">
                        <img
                            id="hr_logo"
                            src="https://www.ziprecruiter.com/img/logos/logo-sm-black-304px.png" alt="HireRemote.io"
                            width="100"
                        />
                    </span>
                </a>
            </div> -->
        </div>
    </div>
</div>
<!-- end widget -->    </div>
</div>
<!-- end sidebar -->		</div>
	</div>
</section>
<!-- end site's main content area -->

	<!-- start main-footer -->
	<footer class="main-footer">
		<div class="container">
			<div class="row">
				<!-- start first footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Recent Posts</h4>
    <div class="content recent-post">
        <div class="recent-single-post">
            <a href="https://stackabuse.com/java-collections-the-map-interface/" class="post-title">Java Collections: The Map Interface</a>
            <!--<div class="date">December 27, 2019</div>-->
        </div>
        <div class="recent-single-post">
            <a href="https://stackabuse.com/heap-sort-in-python/" class="post-title">Heap Sort in Python</a>
            <!--<div class="date">December 26, 2019</div>-->
        </div>
        <div class="recent-single-post">
            <a href="https://stackabuse.com/working-with-postgresql-in-java/" class="post-title">Working with PostgreSQL in Java</a>
            <!--<div class="date">December 25, 2019</div>-->
        </div>
    </div>
</div>
<!-- end widget -->				</div>
				<!-- end first footer widget area -->
				<!-- start second footer widget area -->
				<div class="col-sm-4">
					<!-- start tag cloud widget -->
<div class="widget">
    <h4 class="title">Tags</h4>
    <div class="content tag-cloud">
        <a href="https://stackabuse.com/tag/ai/">ai</a><a href="https://stackabuse.com/tag/algorithms/">algorithms</a><a href="https://stackabuse.com/tag/amqp/">amqp</a><a href="https://stackabuse.com/tag/angular/">angular</a><a href="https://stackabuse.com/tag/announcements/">announcements</a><a href="https://stackabuse.com/tag/apache/">apache</a><a href="https://stackabuse.com/tag/api/">api</a><a href="https://stackabuse.com/tag/arduino/">arduino</a><a href="https://stackabuse.com/tag/artificial-intelligence/">artificial intelligence</a><a href="https://stackabuse.com/tag/asynchronous/">asynchronous</a>
    </div>
</div>
<!-- end tag cloud widget -->
				</div>
				<!-- end second footer widget area -->
				<!-- start third footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-md-4 col-xs-12">
                <a rel="nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="fa fa-twitter fa-lg"></i>
                    Twitter
                </a>
            </div>
            <div class="col-md-4 col-xs-12">
                <a rel="nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="fa fa-facebook fa-lg"></i>
                    Facebook
                </a>
            </div>
            <div class="col-md-4 col-xs-12">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="fa fa-rss fa-lg"></i>
                    RSS
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->				</div>
				<!-- end third footer widget area -->
			</div>
		</div>
	</footer>
	<!-- end main-footer -->
	<!-- start copyright section -->
<div class="copyright">
	<div class="container">
		<div class="row">
			<div class="col-sm-12">
				Copyright © 2019, <a href="https://stackabuse.com/">Stack Abuse</a>.  All Rights Reserved.
			</div>
		</div>
	</div>
</div>
<!-- end copyright section -->	<div class="footer-links">
		<div class="container">
			<div class="row">
				<div class="col-sm-12">
					<a href="https://stackabuse.com/disclosure">Disclosure</a>
					•
					<a href="https://stackabuse.com/privacy-policy">Privacy Policy</a>
					•
					<a href="https://stackabuse.com/terms-of-service">Terms of Service</a>
				</div>
			</div>
		</div>
	</div>
	<a href="https://stackabuse.com/javas-object-methods-equals-object/#" id="back-to-top" style="display: block;"><i class="fa fa-angle-up"></i></a>
	<!--
<script src="//my.hellobar.com/4dd9990be00532b0fc7961824b7d7a0930e9e2b7.js" type="text/javascript" charset="utf-8" async="async"></script>
-->
	<!-- scripts -->
	<script type="text/javascript">
    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
    </script>

    <!-- HTML templates for use in JS code -->
    <script id="newsletter-template" type="text/x-custom-template">
        <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">        
            <form action="#" method="post" class="form-inline validate" novalidate>
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and reviews in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row">
                    <div class="col-md-7 col-md-offset-1 col-xs-12">
                        <input type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-4 col-xs-12 text-left">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-subscribe"
                            ga-on="click"
                            ga-event-category="Newsletter"
                            ga-event-action="Signup"
                            ga-event-label="General-Newsletter-Signup"
                        >
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->    </script>

    <!-- <script src="/assets/js/jquery.adsenseloader.js?v=8b761e8043"></script> -->
	<script src="./Java&#39;s Object Methods_ equals(Object)_files/jquery.fitvids.js"></script>
	<script src="./Java&#39;s Object Methods_ equals(Object)_files/bootstrap.min.js"></script>
    <!-- <script src="/assets/js/jflickrfeed.min.js?v=8b761e8043"></script> -->
	<!-- <script src="/assets/js/highlight.pack.js?v=8b761e8043"></script> -->
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/highlight.min.js"></script>
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/dockerfile.min.js"></script>
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/yaml.min.js"></script>
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/highlightjs-line-numbers.min.js"></script>
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/moment.min.js"></script>
	<!-- <script src="/assets/js/indeed.js?v=8b761e8043"></script> -->
	<script src="./Java&#39;s Object Methods_ equals(Object)_files/main.js"></script>
	<!-- <script src="//gdc.indeed.com/ads/apiresults.js" type="text/javascript"></script> -->
    <script src="./Java&#39;s Object Methods_ equals(Object)_files/MathJax.js" type="text/javascript" async=""></script>
	<!-- Add your analytic code below -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  if (window.location.hostname !== 'localhost') {
    ga('create', 'UA-43140675-1', 'auto');
    ga('require', 'eventTracker');
    ga('send', 'pageview');
  }

</script>
<script async="" src="./Java&#39;s Object Methods_ equals(Object)_files/autotrack.js"></script>
<iframe style="display: none;" src="./Java&#39;s Object Methods_ equals(Object)_files/saved_resource(1).html"></iframe></body></html>