<!DOCTYPE html>
<!-- saved from url=(0077)https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/ -->
<html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" async="" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/f.txt"></script><script async="" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/analytics.js"></script><script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/cmp.complete.bundle.js"></script><script async="" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/apstag.js"></script><script type="text/javascript">!function(a9,a,p,s,t,A,g){if(a[a9])return;function q(c,r){a[a9]._Q.push([c,r])}a[a9]={init:function(){q("i",arguments)},fetchBids:function(){q("f",arguments)},setDisplayBids:function(){},targetingKeys:function(){return[]},_Q:[]};A=p.createElement(s);A.async=!0;A.src=t;g=p.getElementsByTagName(s)[0];g.parentNode.insertBefore(A,g)}("apstag",window,document,"script","//c.amazon-adsystem.com/aax2/apstag.js");</script><script type="text/javascript" async="" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/videoplayer.js"></script><script type="text/javascript" async="" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/prebid.js"></script><link rel="stylesheet" type="text/css" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/e185d.css" media="all"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Object level lock vs Class level lock in Java - HowToDoInJava</title><meta name="description" content="Object level lock vs Class level lock in Java with example code. Learn different ways to achieve synchronization using locks at class and object level."><meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1"><link rel="canonical" href="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/"><meta property="og:locale" content="en_US"><meta property="og:type" content="article"><meta property="og:title" content="Object level lock vs Class level lock in Java - HowToDoInJava"><meta property="og:description" content="Object level lock vs Class level lock in Java with example code. Learn different ways to achieve synchronization using locks at class and object level."><meta property="og:url" content="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/"><meta property="og:site_name" content="HowToDoInJava"><meta property="article:publisher" content="http://www.facebook.com/HowToDoInJava"><meta property="article:author" content="http://www.facebook.com/HowToDoInJAVA"><meta property="article:tag" content="Java"><meta property="article:tag" content="Java Concurrency"><meta property="article:section" content="Java Concurrency"><meta property="og:image" content="https://howtodoinjava.com/wp-content/uploads/2015/12/Java-Concurrency.gif"><meta property="og:image:secure_url" content="https://howtodoinjava.com/wp-content/uploads/2015/12/Java-Concurrency.gif"><meta property="og:image:width" content="451"><meta property="og:image:height" content="359"><meta name="twitter:card" content="summary_large_image"><meta name="twitter:description" content="Object level lock vs Class level lock in Java with example code. Learn different ways to achieve synchronization using locks at class and object level."><meta name="twitter:title" content="Object level lock vs Class level lock in Java - HowToDoInJava"><meta name="twitter:site" content="@HowToDoInJAVA"><meta name="twitter:image" content="https://howtodoinjava.com/wp-content/uploads/2015/12/Java-Concurrency.gif"><meta name="twitter:creator" content="@HowToDoInJAVA"> <script async="" type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/gpt.js"></script><script type="application/ld+json" class="yoast-schema-graph yoast-schema-graph--main">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://howtodoinjava.com/#website","url":"https://howtodoinjava.com/","name":"HowToDoInJava","publisher":{"@id":"https://howtodoinjava.com/#/schema/person/"},"potentialAction":{"@type":"SearchAction","target":"https://howtodoinjava.com/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"ImageObject","@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#primaryimage","url":"https://howtodoinjava.com/wp-content/uploads/2015/12/Java-Concurrency.gif","width":451,"height":359,"caption":"Java Concurrency"},{"@type":"WebPage","@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#webpage","url":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/","inLanguage":"en-US","name":"Object level lock vs Class level lock in Java - HowToDoInJava","isPartOf":{"@id":"https://howtodoinjava.com/#website"},"primaryImageOfPage":{"@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#primaryimage"},"datePublished":"2013-03-08T01:42:17+00:00","dateModified":"2018-12-19T13:17:44+00:00","description":"Object level lock vs Class level lock in Java with example code. Learn different ways to achieve synchronization using locks at class and object level."},{"@type":"Article","@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#article","isPartOf":{"@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#webpage"},"author":{"@id":"https://howtodoinjava.com/#/schema/person/4976af58f6c3f73d00db5f58af2bde12"},"headline":"Object level lock vs Class level lock in Java","datePublished":"2013-03-08T01:42:17+00:00","dateModified":"2018-12-19T13:17:44+00:00","commentCount":"66","mainEntityOfPage":{"@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#webpage"},"publisher":{"@id":"https://howtodoinjava.com/#/schema/person/"},"image":{"@id":"https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#primaryimage"},"keywords":"Java,Java Concurrency","articleSection":"Java Concurrency"},{"@type":["Person"],"@id":"https://howtodoinjava.com/#/schema/person/4976af58f6c3f73d00db5f58af2bde12","name":"Lokesh Gupta","description":"A family guy with fun loving nature. Love computers, programming and solving everyday problems.  Find me on <a href=\"https://facebook.com/howtodoinjava\" rel=\"external\">Facebook</a> and <a href=\"https://twitter.com/howtodoinjava\" rel=\"external\">Twitter</a>.","sameAs":["http://www.facebook.com/HowToDoInJAVA","https://twitter.com/HowToDoInJAVA"]}]}</script> <link rel="amphtml" href="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/amp/"><meta name="generator" content="AMP for WP 1.0.15"><link rel="dns-prefetch" href="https://use.fontawesome.com/"><link rel="dns-prefetch" href="https://s.w.org/"><style id="scriptlesssocialsharing-inline-css" type="text/css">.scriptlesssocialsharing-buttons { width: auto }.scriptlesssocialsharing-buttons a.button { padding: 6px; width: 20%;; }@media only screen and (max-width: 767px) { .scriptlesssocialsharing .sss-name { position: absolute; clip: rect(1px, 1px, 1px, 1px); height: 1px; width: 1px; border: 0; overflow: hidden; } }</style><link rel="stylesheet" id="font-awesome-css" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/all.css" type="text/css" media="all"> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/jquery.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/jquery-migrate.min.js"></script> <script type="text/javascript">/*<![CDATA[*//*  */
var wpnmObject = {"button_html":"<div class=\"wpnm-button style-2\">\n                            <div class=\"wpnm-button-inner-left\"><\/div>\n                            <div class=\"wpnm-button-inner\"><\/div>\n                        <\/div>","default":"","server_time":"1580920607","turn_on_time":"","turn_off_time":""};
/*  *//*]]>*/</script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/wp-night-mode-public.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/responsive-menu.js"></script> <link rel="https://api.w.org/" href="https://howtodoinjava.com/wp-json/"><link rel="canonical" href="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/"><style type="text/css">.wp-night-mode-slider {
				background-color: ;
			}

			.wp-night-mode-button.active .wp-night-mode-slider {
				background-color: ;
			}

			body.wp-night-mode-on * {
				background: #020202;
			}

			body.wp-night-mode-on .customize-partial-edit-shortcut button,
			body.wp-night-mode-on .customize-partial-edit-shortcut button svg,
			body.wp-night-mode-on #adminbarsearch,
			body.wp-night-mode-on span.display-name,
			body.wp-night-mode-on span.ab-icon,
			body.wp-night-mode-on span.ab-label {
			    background: transparent;
			}

			body.wp-night-mode-on * {
				color: #c1c1c1;
			}

			body.wp-night-mode-on a {
				color: #c1c1c1;
			}

			body.wp-night-mode-on a:hover,
			body.wp-night-mode-on a:visited,
			body.wp-night-mode-on a:active {
				color: #c1c1c1;
			}
		}				@media (prefers-color-scheme: dark) {
					 
			.wp-night-mode-slider {
				background-color: ;
			}

			.wp-night-mode-button.active .wp-night-mode-slider {
				background-color: ;
			}

			body.wp-night-mode-on * {
				background: #020202;
			}

			body.wp-night-mode-on .customize-partial-edit-shortcut button,
			body.wp-night-mode-on .customize-partial-edit-shortcut button svg,
			body.wp-night-mode-on #adminbarsearch,
			body.wp-night-mode-on span.display-name,
			body.wp-night-mode-on span.ab-icon,
			body.wp-night-mode-on span.ab-label {
			    background: transparent;
			}

			body.wp-night-mode-on * {
				color: #c1c1c1;
			}

			body.wp-night-mode-on a {
				color: #c1c1c1;
			}

			body.wp-night-mode-on a:hover,
			body.wp-night-mode-on a:visited,
			body.wp-night-mode-on a:active {
				color: #c1c1c1;
			}
		}				}</style><style>#wpcomm .wc_new_comment{background:#00B38F;}
                #wpcomm .wc_new_reply{background:#00B38F;}
                #wpcomm .wc-form-wrapper{ background:none; } /* ->formBGColor */
                #wpcomm .wpdiscuz-front-actions{background:#F9F9F9;}
                #wpcomm .wpdiscuz-subscribe-bar{background:#F9F9F9;}
                #wpcomm select,
                #wpcomm input[type="text"],
                #wpcomm input[type="email"],
                #wpcomm input[type="url"],
                #wpcomm input[type="date"],
                #wpcomm input[type="color"]{border:#D9D9D9 1px solid;}
                #wpcomm .wc-comment .wc-comment-right{background:#FEFEFE;}
                #wpcomm .wc-reply .wc-comment-right{background:#F8F8F8;}
                #wpcomm .wc-comment-right .wc-comment-text, 
                #wpcomm .wc-comment-right .wc-comment-text *{
                    font-size:16px;
                }
                #wpcomm .wc-blog-administrator > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-administrator > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-administrator > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-editor > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-editor > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-editor > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-author > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-author > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-author > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-contributor > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-contributor > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-contributor > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-subscriber > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-subscriber > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-subscriber > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-bbp_keymaster > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-bbp_keymaster > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-bbp_keymaster > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-bbp_spectator > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-bbp_spectator > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-bbp_spectator > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-bbp_blocked > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-bbp_blocked > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-bbp_blocked > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-bbp_moderator > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-bbp_moderator > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-bbp_moderator > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-bbp_participant > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-bbp_participant > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-bbp_participant > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-wpseo_manager > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-wpseo_manager > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-wpseo_manager > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-wpseo_editor > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-wpseo_editor > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-wpseo_editor > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-post_author > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-post_author > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-post_author > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }#wpcomm .wc-blog-guest > .wc-comment-right .wc-comment-author, #wpcomm .wc-blog-guest > .wc-comment-right .wc-comment-author a{color:#00B38F;}#wpcomm .wc-blog-guest > .wc-comment-left .wc-comment-label{color:#00B38F; border:none; border-bottom: 1px solid #dddddd; }                #wpcomm .wc-comment .wc-comment-left .wc-comment-label{ background: #ffffff;}
                #wpcomm .wc-comment-left .wc-follow-user{color:#00B38F;}
                #wpcomm .wc-load-more-submit{border:1px solid #D9D9D9;}
                #wpcomm .wc-new-loaded-comment > .wc-comment-right{background:#FFFAD6;}
                #wpcomm .wpdiscuz-subscribe-bar{color:#777;}
                #wpcomm .wpdiscuz-front-actions .wpdiscuz-sbs-wrap span{color: #777;}
                #wpcomm .page-numbers{color:#555;border:#555 1px solid;}
                #wpcomm span.current{background:#555;}
                #wpcomm .wpdiscuz-readmore{cursor:pointer;color:#00B38F;}
                #wpcomm .wpdiscuz-textarea-wrap{border:#D9D9D9 1px solid;} .wpd-custom-field .wcf-pasiv-star, #wpcomm .wpdiscuz-item .wpdiscuz-rating > label {color: #DDDDDD;}
                #wpcomm .wpdiscuz-item .wpdiscuz-rating:not(:checked) > label:hover,.wpdiscuz-rating:not(:checked) > label:hover ~ label {   }#wpcomm .wpdiscuz-item .wpdiscuz-rating > input ~ label:hover, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:not(:checked) ~ label:hover ~ label, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:not(:checked) ~ label:hover ~ label{color: #FFED85;} 
                #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover, #wpcomm .wpdiscuz-item .wpdiscuz-rating > label:hover ~ input:checked ~ label, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:checked + label:hover ~ label, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label:hover ~ label, .wpd-custom-field .wcf-active-star, #wpcomm .wpdiscuz-item .wpdiscuz-rating > input:checked ~ label{ color:#FFD700;}
                #wpcomm .wc-comment-header{border-top: 1px solid #dedede;}
                #wpcomm .wc-reply .wc-comment-header{border-top: 1px solid #dedede;}
                /* Buttons */
                #wpcomm button, 
                #wpcomm input[type="button"], 
                #wpcomm input[type="reset"], 
                #wpcomm input[type="submit"]{ border: 1px solid #555555; color: #FFFFFF; background-color: #555555; }
                #wpcomm button:hover, 
                #wpcomm button:focus,
                #wpcomm input[type="button"]:hover, 
                #wpcomm input[type="button"]:focus, 
                #wpcomm input[type="reset"]:hover, 
                #wpcomm input[type="reset"]:focus, 
                #wpcomm input[type="submit"]:hover, 
                #wpcomm input[type="submit"]:focus{ border: 1px solid #333333; background-color: #333333;  }
                #wpcomm .wpdiscuz-sort-buttons{color:#777777;}
                #wpcomm .wpdiscuz-sort-button{color:#777777; cursor:pointer;}
                #wpcomm .wpdiscuz-sort-button:hover{color:#00B38F!important;cursor:pointer;}
                #wpcomm .wpdiscuz-sort-button-active{color:#00B38F!important;cursor:default!important;}
                #wpcomm .wc-cta-button, 
                #wpcomm .wc-cta-button-x{color:#777777; }
                #wpcomm .wc-vote-link.wc-up{color:#999999;}
                #wpcomm .wc-vote-link.wc-down{color:#999999;}
                #wpcomm .wc-vote-result{color:#999999;}
                #wpcomm .wpf-cta{color:#999999; }
                #wpcomm .wc-comment-link .wc-share-link .wpf-cta{color:#eeeeee;}
                #wpcomm .wc-footer-left .wc-reply-button{border:1px solid #00B38F!important; color: #00B38F;}
                #wpcomm .wpf-cta:hover{background:#00B38F!important; color:#FFFFFF;}
                #wpcomm .wc-footer-left .wc-reply-button.wc-cta-active, #wpcomm .wc-cta-active{background:#00B38F!important; color:#FFFFFF;}
                #wpcomm .wc-cta-button:hover{background:#00B38F!important; color:#FFFFFF;}
                #wpcomm .wc-footer-right .wc-toggle,
                #wpcomm .wc-footer-right .wc-toggle a,
                #wpcomm .wc-footer-right .wc-toggle i{color:#00B38F;}
                /* STICKY COMMENT HEADER */
                #wpcomm .wc-sticky-comment.wc-comment .wc-comment-header .wpd-sticky{background: #1ecea8; color: #ffffff; }
                #wpcomm .wc-closed-comment.wc-comment .wc-comment-header .wpd-closed{background: #aaaaaa; color: #ffffff;}
                /* PRIVATE COMMENT HEADER */
                #wpcomm .wc-private-comment.wc-comment .wc-comment-header .wpd-private{background: #999999; color: #ffffff;}
                /* FOLLOW LINK */

                #wpcomm .wc-follow{color:#777777;}
                #wpcomm .wc-follow-active{color:#ff7a00;}
                #wpcomm .wc-follow:hover i,
                #wpcomm .wc-unfollow:hover i,
                #wpcomm .wc-follow-active:hover i{color:#00B38F;}
                                .wpd-wrapper .wpd-list-item.wpd-active{border-top: 3px solid #00B38F;}
                                .comments-area{width:auto;}</style><meta name="google-site-verification" content="EV_Uq1MFIe3lcKLlf4xhcabIz-68zGeWx8pjwQH3pB8"><meta name="msvalidate.01" content="C71A4DAE3450D101003DA6DCE7D44ADE"> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/3094.js"></script><style type="text/css">#waldo-sticky-footer-wrapper {position: fixed; width: 100%; bottom: 0px; left: 0px; text-align: center; z-index: 9000;}#waldo-sticky-footer-wrapper > div {position: relative; display: inline-block}#waldo-sticky-footer-wrapper iframe, #waldo-sticky-footer-wrapper div {margin-left: auto;margin-right: auto;}.waldo-sticky-sidebar{position: fixed; top: 10px;z-index: 90}.waldo-sticky-css{position: sticky; top: 10px; z-index: 90}.waldo-overlay{position: fixed;height: 100%;width: 100%;top: 0;left: 0;z-index: 105;background: rgba(0,0,0,0.7);}#waldo-counter {position: absolute;bottom: 0;right: 0;color: #fff;font-size: 30px;padding: 15px;}.waldo-bfleft {position: fixed; left: 0; top: 10px;z-index:101;}.waldo-bfright {position: fixed; right: 0; top: 10px;z-index:101;}#waldo-tag-6038 {clear: both !important;}div[class^="app_gdpr-"] a {color: #41afbb !important; text-decoration: underline !important}#waldo-close-button {position: absolute; right: 0;top: -24px;}#waldo-close-button a {border: 1px solid rgba(0,0,0,.35);padding: 3px;font-size: 12px;color: #fff;font-weight: bold;background-color: #777;}</style><link rel="icon" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-32x32.png" sizes="32x32"><link rel="icon" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-256x256.png" sizes="192x192"><link rel="apple-touch-icon-precomposed" href="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon-256x256.png"><meta name="msapplication-TileImage" content="https://howtodoinjava.com/wp-content/uploads/2015/05/howtodoinjava_logo-55696c1cv1_site_icon.png"><link rel="stylesheet" type="text/css" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/shCore.css"><link rel="stylesheet" type="text/css" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/shThemeDefault.css"><link rel="preload" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/f(1).txt" as="script"><script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/f(1).txt"></script><link rel="preload" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/f(2).txt" as="script"><script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/f(2).txt"></script><script src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/pubads_impl_2020020307.js" async=""></script><script src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/cse_element__en.js" type="text/javascript"></script><link type="text/css" rel="stylesheet" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/default+en.css"><link type="text/css" rel="stylesheet" href="./Object level lock vs Class level lock in Java - HowToDoInJava_files/default.css"><style type="text/css">.gsc-control-cse{font-family:verdana, arial, sans-serif}.gsc-control-cse .gsc-table-result{font-family:verdana, arial, sans-serif}.gsc-refinementsGradient{background:linear-gradient(to left,rgba(255,255,255,1),rgba(255,255,255,0))}.gsc-control-cse{border-color:#FFFFFF;background-color:#FFFFFF}input.gsc-input,.gsc-input-box,.gsc-input-box-hover,.gsc-input-box-focus{border-color:#F9F9F9}.gsc-search-button-v2,.gsc-search-button-v2:hover,.gsc-search-button-v2:focus{border-color:#5890FF;background-color:#5890FF;background-image:none;filter:none}.gsc-search-button-v2 svg{fill:#FFFFFF}.gsc-tabHeader.gsc-tabhActive,.gsc-refinementHeader.gsc-refinementhActive{color:#CCCCCC;border-color:#CCCCCC;background-color:#FFFFFF}.gsc-tabHeader.gsc-tabhInactive,.gsc-refinementHeader.gsc-refinementhInactive{color:#CCCCCC;border-color:#CCCCCC;background-color:#FFFFFF}.gsc-webResult.gsc-result,.gsc-results .gsc-imageResult{border-color:#FFFFFF;background-color:#FFFFFF}.gsc-webResult.gsc-result:hover,.gsc-imageResult:hover{border-color:#FFFFFF;background-color:#FFFFFF}.gs-webResult.gs-result a.gs-title:link,.gs-webResult.gs-result a.gs-title:link b,.gs-imageResult a.gs-title:link,.gs-imageResult a.gs-title:link b{color:#3367D6}.gs-webResult.gs-result a.gs-title:visited,.gs-webResult.gs-result a.gs-title:visited b,.gs-imageResult a.gs-title:visited,.gs-imageResult a.gs-title:visited b{color:#3367D6}.gs-webResult.gs-result a.gs-title:hover,.gs-webResult.gs-result a.gs-title:hover b,.gs-imageResult a.gs-title:hover,.gs-imageResult a.gs-title:hover b{color:#0000CC}.gs-webResult.gs-result a.gs-title:active,.gs-webResult.gs-result a.gs-title:active b,.gs-imageResult a.gs-title:active,.gs-imageResult a.gs-title:active b{color:#3367D6}.gsc-cursor-page{color:#3367D6}a.gsc-trailing-more-results:link{color:#3367D6}.gs-webResult .gs-snippet,.gs-imageResult .gs-snippet,.gs-fileFormatType{color:#000000}.gs-webResult div.gs-visibleUrl,.gs-imageResult div.gs-visibleUrl{color:#999999}.gs-webResult div.gs-visibleUrl-short{color:#999999}.gs-webResult div.gs-visibleUrl-short{display:none}.gs-webResult div.gs-visibleUrl-long{display:block}.gs-promotion div.gs-visibleUrl-short{display:none}.gs-promotion div.gs-visibleUrl-long{display:block}.gsc-cursor-box{border-color:#FFFFFF}.gsc-results .gsc-cursor-box .gsc-cursor-page{border-color:#CCCCCC;background-color:#FFFFFF;color:#CCCCCC}.gsc-results .gsc-cursor-box .gsc-cursor-current-page{border-color:#CCCCCC;background-color:#FFFFFF;color:#CCCCCC}.gsc-webResult.gsc-result.gsc-promotion{border-color:#F3F3F3;background-color:#F3F3F3}.gsc-completion-title{color:#3367D6}.gsc-completion-snippet{color:#000000}.gs-promotion a.gs-title:link,.gs-promotion a.gs-title:link *,.gs-promotion .gs-snippet a:link{color:#3367D6}.gs-promotion a.gs-title:visited,.gs-promotion a.gs-title:visited *,.gs-promotion .gs-snippet a:visited{color:#3367D6}.gs-promotion a.gs-title:hover,.gs-promotion a.gs-title:hover *,.gs-promotion .gs-snippet a:hover{color:#0000CC}.gs-promotion a.gs-title:active,.gs-promotion a.gs-title:active *,.gs-promotion .gs-snippet a:active{color:#3367D6}.gs-promotion .gs-snippet,.gs-promotion .gs-title .gs-promotion-title-right,.gs-promotion .gs-title .gs-promotion-title-right *{color:#000000}.gs-promotion .gs-visibleUrl,.gs-promotion .gs-visibleUrl-short{color:#999999}.gcsc-find-more-on-google{color:#3367D6}.gcsc-find-more-on-google-magnifier{fill:#3367D6}</style><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><iframe src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/serve.html" id="bidt-sra" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="1" height="1"></iframe><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><img src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/notify"><img src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/notify(1)"></head><body data-rsssl="1" class="post-template-default single single-post postid-842 single-format-standard custom-header header-full-width sidebar-content-sidebar genesis-breadcrumbs-hidden genesis-footer-widgets-visible wpdiscuz_5.3.5"><div class="site-container"><header class="site-header"><div class="wrap"><div class="title-area"><p class="site-title"><a href="https://howtodoinjava.com/" title="HowToDoInJava">HowToDoInJava</a></p></div><nav class="nav-primary" aria-label="Main"><div class="wrap"><div class="responsive-menu-icon"></div><ul id="menu-category-menu" class="menu genesis-nav-menu menu-primary responsive-menu"><li id="menu-item-8094" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8094"><a href="https://howtodoinjava.com/java-8-tutorial/"><span>Java 8</span></a></li><li id="menu-item-11160" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11160"><a href="https://howtodoinjava.com/java-regular-expression-tutorials/"><span>Regex</span></a></li><li id="menu-item-11159" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11159"><a href="https://howtodoinjava.com/java-concurrency-tutorial/"><span>Concurrency</span></a></li><li id="menu-item-11158" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11158"><a href="https://howtodoinjava.com/java-best-practices/"><span>Best Practices</span></a></li><li id="menu-item-10224" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10224"><a href="https://howtodoinjava.com/spring-boot-tutorials/"><span>Spring Boot</span></a></li><li id="menu-item-11161" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11161"><a href="https://howtodoinjava.com/junit-5-tutorial/"><span>JUnit5</span></a></li><li id="menu-item-3631" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3631"><a title="Java Interview Questions" rel="ipt-icon-bubbles2" href="https://howtodoinjava.com/java-interview-questions/"><span>Interview Questions</span></a></li><li id="menu-item-13046" class="wp-night-mode menu-item menu-item-type-custom menu-item-object-custom menu-item-13046"><div class="wpnm-button style-2">
                            <div class="wpnm-button-inner-left"></div>
                            <div class="wpnm-button-inner"></div>
                        </div></li></ul></div></nav></div></header><div class="site-inner"><div class="wrap"><div class="content-sidebar-wrap"><main class="content"><article class="post-842 post type-post status-publish format-standard has-post-thumbnail category-multi-threading tag-java tag-java-concurrency entry"><header class="entry-header"><h1 class="entry-title">Object level lock vs Class level lock in Java</h1><p class="entry-meta">By <span class="entry-author"><span class="entry-author-name">Lokesh Gupta</span></span> | <span class="entry-categories">Filed Under: <a href="https://howtodoinjava.com/java/multi-threading/" rel="category tag">Java Concurrency</a></span></p></header><div class="entry-content"><p>In Java, a <strong>synchronized</strong> block of code can only be executed by one thread at a time. Also, java supports multiple threads to be executed concurrently. This may cause two or more threads to access the same fields or objects at same time.</p><p>Synchronization is the process which keeps all concurrent threads in execution to be in sync. Synchronization avoids memory consistence errors caused due to inconsistent view of shared memory. When a method is declared as <strong>synchronized</strong>; the thread holds the monitor or <strong><a href="https://howtodoinjava.com/java/multi-threading/how-to-use-locks-in-java-java-util-concurrent-locks-lock-tutorial-and-example/">lock</a> object</strong> for that method’s object. If another thread is executing the <em>synchronized</em> method, your thread is blocked until that thread releases the monitor.</p><style>.beloposttitle300250 { text-align: center; margin-top: 20px; margin-bottom: 20px;} @media (min-width:960px) { .beloposttitle300250 { display: none !important; } }</style><div class="beloposttitle300250"><div id="waldo-tag-3937" data-processed="true"><span id="_waldo-tag-3937-5-container"></span></div></div><p>Please note that we can use <code>synchronized</code> keyword in the class on defined methods or blocks. <code>synchronized</code> keyword can not be used with variables or attributes in class definition.</p><h2>1. Object level lock in Java</h2><p><strong>Object level lock</strong> is mechanism when we want to synchronize a <strong>non-static method</strong> or <strong>non-static code block</strong> such that only one thread will be able to execute the code block on given instance of the class. This should always be done <strong>to make instance level data thread safe</strong>.</p><p>Object level locking can be done as below :</p><div><div id="highlighter_82235" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><caption>Various ways for object level locking</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number2 index1 alt1"><code class="java plain">{</code></div><div class="line number3 index2 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">synchronized</code> <code class="java keyword">void</code> <code class="java plain">demoMethod(){}</code></div><div class="line number4 index3 alt1"><code class="java plain">}</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java plain">or</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number9 index8 alt2"><code class="java plain">{</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">demoMethod(){</code></div><div class="line number11 index10 alt2 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java plain">(</code><code class="java keyword">this</code><code class="java plain">)</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//other thread safe code</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number16 index15 alt1"><code class="java plain">}</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java plain">or</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number21 index20 alt2"><code class="java plain">{</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">Object lock = </code><code class="java keyword">new</code> <code class="java plain">Object();</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">demoMethod(){</code></div><div class="line number24 index23 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java plain">(lock)</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//other thread safe code</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number29 index28 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2>2. Class level lock in Java</h2><p><strong>Class level lock</strong> prevents multiple threads to enter in <code>synchronized</code> block in any of all available instances of the class on runtime. This means if in runtime there are 100 instances of <code>DemoClass</code>, then only one thread will be able to execute <code>demoMethod()</code> in any one of instance at a time, and all other instances will be locked for other threads.</p><style>.beloposttitle300250 { text-align: center; margin-top: 20px; margin-bottom: 20px;} @media (min-width:960px) { .beloposttitle300250 { display: none !important; } }</style><div class="beloposttitle300250"><div id="waldo-tag-3939" data-processed="true"><span id="_waldo-tag-3939-4-container"></span></div></div><p>Class level locking should always be done <strong>to make static data thread safe</strong>. As we know that <a href="https://howtodoinjava.com/java/basics/java-static-keyword/"><strong>static</strong></a> keyword associate data of methods to class level, so use locking at static fields or methods to make it on class level.</p><div><div id="highlighter_419281" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><caption>Various ways for class level locking</caption><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number2 index1 alt1"><code class="java plain">{</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Method is static</code></div><div class="line number4 index3 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">synchronized</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">demoMethod(){</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number7 index6 alt2"><code class="java plain">}</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java plain">or</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number12 index11 alt1"><code class="java plain">{</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">demoMethod()</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Acquire lock on .class reference</code></div><div class="line number16 index15 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java plain">(DemoClass.</code><code class="java keyword">class</code><code class="java plain">)</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//other thread safe code</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number21 index20 alt2"><code class="java plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java plain">or</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number26 index25 alt1"><code class="java plain">{</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java keyword">static</code> <code class="java plain">Object lock = </code><code class="java keyword">new</code> <code class="java plain">Object();</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">demoMethod()</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Lock object is static</code></div><div class="line number32 index31 alt1 highlighted"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java plain">(lock)</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//other thread safe code</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number37 index36 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2>3. Object level lock vs class level lock – Important notes</h2><ol><li>Synchronization in Java guarantees that no two threads can execute a synchronized method, which requires same lock, simultaneously or concurrently.</li><li><code>synchronized</code> keyword can be used only with methods and code blocks. These methods or blocks can be <em>static</em> or <em>non-static</em> both.</li><li>When ever a thread enters into Java <code>synchronized</code> method or block it acquires a lock and whenever it leaves synchronized method or block it releases the lock. Lock is released even if thread leaves synchronized method after completion or due to any Error or Exception.</li><li>Java <code>synchronized</code> keyword is <strong>re-entrant</strong> in nature it means if a synchronized method calls another synchronized method which requires same lock then current thread which is holding lock can enter into that method without acquiring lock.</li><li>Java synchronization will throw <code><a href="https://howtodoinjava.com/java/exception-handling/how-to-effectively-handle-nullpointerexception-in-java/">NullPointerException</a></code> if object used in synchronized block is null. For example, in above code sample if lock is initialized as null, the “<code>synchronized (lock)</code>” will throw <code>NullPointerException</code>.</li><li>Synchronized methods in Java put a performance cost on your application. So use synchronization when it is absolutely required. Also, consider using synchronized code blocks for synchronizing only critical section of your code.</li><li>It’s possible that both static synchronized and non static synchronized method can run simultaneously or concurrently because they lock on different object.</li><li>According to the Java language specification you can not use <code>synchronized</code> keyword with constructor. It is illegal and result in compilation error.</li><li>Do not synchronize on non final field on synchronized block in Java. because reference of non final field may change any time and then different thread might synchronizing on different objects i.e. no synchronization at all.</li><li>Do not use String literals because they might be referenced else where in the application and can cause deadlock. String objects created with <code>new</code> keyword can be used safely. But as a best practice, create a new <strong>private</strong> scoped <code>Object</code> instance OR lock on the shared variable itself which we want to protect. [Thanks to Anu to point this out in comments.]</li></ol><p>Let me know thoughts and queries on Object level lock vs Class level lock in Java.</p><p>Happy Learning !!</p><div class="bottomAdesense"><div id="waldo-tag-7253" data-processed="true"></div></div><div class="scriptlesssocialsharing"><div class="scriptlesssocialsharing-buttons"><a class="button twitter" target="_blank" href="https://twitter.com/intent/tweet?text=Object%20level%20lock%20vs%20Class%20level%20lock%20in%20Java&amp;url=https%3A%2F%2Fhowtodoinjava.com%2Fjava%2Fmulti-threading%2Fobject-vs-class-level-locking%2F&amp;via=howtodoinjava&amp;related=howtodoinjava" rel="noopener noreferrer nofollow"><span class="sss-name">Twitter</span></a><a class="button facebook" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fhowtodoinjava.com%2Fjava%2Fmulti-threading%2Fobject-vs-class-level-locking%2F" rel="noopener noreferrer nofollow"><span class="sss-name">Facebook</span></a><a class="button linkedin" target="_blank" href="https://www.linkedin.com/shareArticle?mini=1&amp;url=https%3A%2F%2Fhowtodoinjava.com%2Fjava%2Fmulti-threading%2Fobject-vs-class-level-locking%2F&amp;title=Object%20level%20lock%20vs%20Class%20level%20lock%20in%20Java&amp;source=https%3A%2F%2Fhowtodoinjava.com" rel="noopener noreferrer nofollow"><span class="sss-name">Linkedin</span></a><a class="button reddit" target="_blank" href="https://www.reddit.com/submit?url=https%3A%2F%2Fhowtodoinjava.com%2Fjava%2Fmulti-threading%2Fobject-vs-class-level-locking%2F" rel="noopener noreferrer nofollow"><span class="sss-name">Reddit</span></a><a class="button pocket" target="_blank" href="https://getpocket.com/save?url=https%3A%2F%2Fhowtodoinjava.com%2Fjava%2Fmulti-threading%2Fobject-vs-class-level-locking%2F&amp;title=Object%20level%20lock%20vs%20Class%20level%20lock%20in%20Java" rel="noopener noreferrer nofollow"><span class="sss-name">Pocket</span></a></div></div></div><footer class="entry-footer"></footer></article><section class="author-box"><h4 class="author-box-title">About <span itemprop="name">Lokesh Gupta</span></h4><div class="author-box-content" itemprop="description"><p>A family guy with fun loving nature. Love computers, programming and solving everyday problems.  Find me on <a href="https://facebook.com/howtodoinjava" rel="external">Facebook</a> and <a href="https://twitter.com/howtodoinjava" rel="external">Twitter</a>.</p></div></section><div class="wpdiscuz_top_clearing"></div><div id="comments" class="comments-area"><div id="respond" style="width: 0;height: 0;clear: both;margin: 0;padding: 0;"></div><h3 id="wc-comment-header"><div class="wpdiscuz-comment-count"><div class="wpd-cc-value">66</div><div class="wpd-cc-arrow"></div></div>
Leave a Reply</h3><div id="wpcomm" class="wpdiscuz_unauth wpd-default wpdiscuz_no_avatar"><div class="wpdiscuz-form-top-bar"><div class="wpdiscuz-ftb-left"><div id="wc_show_hide_loggedin_username"></div></div><div class="wpd-clear"></div></div><div class="wc_social_plugin_wrapper"></div><div class="wc-form-wrapper wc-main-form-wrapper" id="wc-main-form-wrapper-0_0"><div class="wpdiscuz-comment-message" style="display: block;"></div><form class="wc_comm_form wc_main_comm_form" method="post" enctype="multipart/form-data"><div class="wc-field-comment"><div class="wpdiscuz-item wc-field-textarea" style="margin-left: 0;"><div class="wpdiscuz-textarea-wrap "><textarea id="wc-textarea-0_0" placeholder="Join the discussion..." required="" name="wc_comment" class="wc_comment wpd-field"></textarea></div></div><div class="clearfix"></div></div><div class="wc-form-footer" style="display: none;"><div class="wpd-form-row"><div class="wpd-form-col-left"><div class="wpdiscuz-item wc_name-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-user"></i></div>
<input value="" required="required" class="wc_name wpd-field" type="text" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}" title=""></div><div class="wpdiscuz-item wc_email-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-at"></i></div>
<input value="" required="required" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*"></div><div class="wpdiscuz-item wc_website-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-link"></i></div>
<input value="" class="wc_website wpd-field" type="text" name="wc_website" placeholder="Website"></div></div><div class="wpd-form-col-right"><div class="wc-field-captcha wpdiscuz-item wc_captcha-wrapper"><div class="wc-bin-captcha">
<i class="fas fa-shield-alt"></i>This comment form is under antispam protection</div></div><div class="wc-field-submit">
<label class="wpd_label" title="Notify of new replies to this comment">
<input id="wc_notification_new_comment-0_0" class="wc_notification_new_comment-0_0 wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type">
<span class="wpd_label__text">
<span class="wpd_label__check">
<i class="fas fa-bell wpdicon wpdicon-on"></i>
<i class="fas fa-bell-slash wpdicon wpdicon-off"></i>
</span>
</span>
</label>
<input class="wc_comm_submit wc_not_clicked button alt" type="submit" name="submit" value="Post Comment"></div></div><div class="clearfix"></div></div></div><div class="clearfix"></div>
<input type="hidden" class="wpdiscuz_unique_id" value="0_0" name="wpdiscuz_unique_id"></form><div class="wpdiscuz-form-bottom-bar"><div class="wpdiscuz-fbb-left"><div class="wpdiscuz-stat wpd-stat-threads wpd-tooltip-left">
<i class="fas fa-align-left fa-rotate-180" data-fa-transform="rotate-180"></i><span class="wpd-stat-threads-count">26</span>
<wpdtip>Comment threads</wpdtip></div><div class="wpdiscuz-stat wpd-stat-replies wpd-tooltip-left">
<i class="far fa-comments"></i><span class="wpd-stat-replies-count">40</span>
<wpdtip>Thread replies</wpdtip></div><div class="wpdiscuz-stat wpd-stat-subscribers wpd-tooltip-left">
<i class="fas fa-rss"></i><span>0</span>
<wpdtip>Followers</wpdtip></div>&nbsp;<div class="wpdiscuz-stat wpd-stat-reacted wpd-tooltip">
<i class="fas fa-bolt"></i>
<wpdtip>Most reacted comment</wpdtip></div><div class="wpdiscuz-stat wpd-stat-hot wpd-tooltip">
<i class="fab fa-hotjar"></i>
<wpdtip>Hottest comment thread</wpdtip></div></div><div class="wpdiscuz-fbb-right"><div class="wpdiscuz-stat wpd-stat-users wpd-tooltip">
<i class="fas fa-user-circle"></i> <span class="wpd-stat-authors-count">40</span>
<wpdtip>Comment authors</wpdtip></div></div><div class="wpd-clear"></div></div></div><div id="wpdiscuz_hidden_secondary_form" style="display: none;"><div class="wc-form-wrapper wc-secondary-form-wrapper" id="wc-secondary-form-wrapper-wpdiscuzuniqueid" style="display: none;"><div class="wpdiscuz-comment-message" style="display: block;"></div><div class="wc-secondary-forms-social-content"></div><div class="clearfix"></div><form class="wc_comm_form wc-secondary-form-wrapper" method="post" enctype="multipart/form-data"><div class="wc-field-comment"><div class="wpdiscuz-item wc-field-textarea" style="margin-left: 0;"><div class="wpdiscuz-textarea-wrap "><textarea id="wc-textarea-wpdiscuzuniqueid" placeholder="Join the discussion..." required="" name="wc_comment" class="wc_comment wpd-field"></textarea></div></div><div class="clearfix"></div></div><div class="wc-form-footer" style="display: none;"><div class="wpd-form-row"><div class="wpd-form-col-left"><div class="wpdiscuz-item wc_name-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-user"></i></div>
<input value="" required="required" class="wc_name wpd-field" type="text" name="wc_name" placeholder="Name*" maxlength="50" pattern=".{3,50}" title=""></div><div class="wpdiscuz-item wc_email-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-at"></i></div>
<input value="" required="required" class="wc_email wpd-field" type="email" name="wc_email" placeholder="Email*"></div><div class="wpdiscuz-item wc_website-wrapper wpd-has-icon"><div class="wpd-field-icon"><i class="fas fa-link"></i></div>
<input value="" class="wc_website wpd-field" type="text" name="wc_website" placeholder="Website"></div></div><div class="wpd-form-col-right"><div class="wc-field-captcha wpdiscuz-item wc_captcha-wrapper"><div class="wc-bin-captcha">
<i class="fas fa-shield-alt"></i>This comment form is under antispam protection</div></div><div class="wc-field-submit">
<label class="wpd_label" title="Notify of new replies to this comment">
<input id="wc_notification_new_comment-wpdiscuzuniqueid" class="wc_notification_new_comment-wpdiscuzuniqueid wpd_label__checkbox" value="comment" type="checkbox" name="wpdiscuz_notification_type">
<span class="wpd_label__text">
<span class="wpd_label__check">
<i class="fas fa-bell wpdicon wpdicon-on"></i>
<i class="fas fa-bell-slash wpdicon wpdicon-off"></i>
</span>
</span>
</label>
<input class="wc_comm_submit wc_not_clicked button alt" type="submit" name="submit" value="Post Comment"></div></div><div class="clearfix"></div></div></div><div class="clearfix"></div>
<input type="hidden" class="wpdiscuz_unique_id" value="wpdiscuzuniqueid" name="wpdiscuz_unique_id"></form></div></div><div class="wpdiscuz-front-actions"><div class="wpdiscuz-sbs-wrap">
<span><i class="far fa-envelope" aria-hidden="true"></i>&nbsp; Subscribe &nbsp;<i class="fas fa-caret-down" aria-hidden="true"></i></span></div><div class="wpdiscuz-sort-buttons" style="font-size:14px; color: #777;">
<i class="fas fa-caret-up" aria-hidden="true"></i>
<span class="wpdiscuz-sort-button wpdiscuz-date-sort-desc wpdiscuz-sort-button-active">newest</span> <i class="fas fa-caret-up" aria-hidden="true"></i>
<span class="wpdiscuz-sort-button wpdiscuz-date-sort-asc ">oldest</span>
<i class="fas fa-caret-up" aria-hidden="true"></i> <span class="wpdiscuz-sort-button wpdiscuz-vote-sort-up ">most voted</span></div><div class="clearfix"></div></div><div class="wpdiscuz-subscribe-bar wpdiscuz-hidden"><form action="https://howtodoinjava.com/wp-admin/admin-ajax.php?action=addSubscription" method="post" id="wpdiscuz-subscribe-form"><div class="wpdiscuz-subscribe-form-intro">Notify of</div><div class="wpdiscuz-subscribe-form-option" style="width:40%;">
<select class="wpdiscuz_select" name="wpdiscuzSubscriptionType"><option value="post">new follow-up comments</option><option value="all_comment">new replies to my comments</option>
</select></div><div class="wpdiscuz-item wpdiscuz-subscribe-form-email">
<input class="email" type="email" name="wpdiscuzSubscriptionEmail" required="required" value="" placeholder="Email"></div><div class="wpdiscuz-subscribe-form-button">
<input id="wpdiscuz_subscription_button" type="submit" value="›" name="wpdiscuz_subscription_button"></div>
<input type="hidden" id="wpdiscuz_subscribe_form_nonce" name="wpdiscuz_subscribe_form_nonce" value="b94ae6c7ee"><input type="hidden" name="_wp_http_referer" value="/java/multi-threading/object-vs-class-level-locking/">                                                                <input type="hidden" value="842" name="wpdiscuzSubscriptionPostId"></form><div class="wpdiscuz_clear"></div></div><div id="wcThreadWrapper" class="wc-thread-wrapper"><div id="wc-comm-40197_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-40197" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Sanjay Dash</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-40197" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Thanks for the nice content.in the below section of your code snippet</p><div><div id="highlighter_306489" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">DemoClass</code></div><div class="line number2 index1 alt1"><code class="java plain">{</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">demoMethod()</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//Acquire lock on .class reference</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java plain">(DemoClass.</code><code class="java keyword">class</code><code class="java plain">)</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//other thread safe code</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number11 index10 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p>i think in this class level locking static is missing</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>9 months ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-40197_0" class="wpdiscuz_clear"></div><div id="wc-comm-40229_40197" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-40229" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-40229" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>We are taking lock on <code>.class</code> reference which is single for all instances of <code>DemoClass</code>.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>9 months ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-40229_40197" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-33113_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-33113" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Gunasekar</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-33113" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>What is the difference between the following codes:</p><p>public void increment()<br>
{<br>
synchronized(this)<br>
{<br>
}<br>
}</p><p>class MultiThreading<br>
{<br>
Object lock= new Object();</p><p>  public void increment()<br>
{<br>
synchronized(lock)<br>
{<br>
}<br>
}</p><p>}</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>11 months ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-33113_0" class="wpdiscuz_clear"></div><div id="wc-comm-33118_33113" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-33118" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-33118" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Not any major difference. Both helps in instance level locking. Just make sure you do not leak the reference to <code>lock</code> variable (so no other thread can acquire lock through it) and you do not accidentally reinitialize the variable (make it final).</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>11 months ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-33118_33113" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-26277_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-26277" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Prakriti</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-26277" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Well explained, i’ve a doubt in object lock that is what is the difference between synchronizing a method code block with “this” keyword and synchronizing by creating a lock object. For example how does it makes a difference from execution point of view if we write like</p><div><div id="highlighter_871597" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">someMethod(){</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code><code class="java plain">(</code><code class="java keyword">this</code><code class="java plain">){</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//some code</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number5 index4 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p>and</p><div><div id="highlighter_541862" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">someMethod(){</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Object lock = </code><code class="java keyword">new</code> <code class="java plain">Object();</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code><code class="java plain">(lock){</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//some code</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number6 index5 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-26277_0" class="wpdiscuz_clear"></div><div id="wc-comm-26278_26277" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-26278" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-26278" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Well, technically there is no difference. Both do the same thing.<br>
Real difference lies in possibility of misuse. In above code, “lock” variable in known to your class and even method only, so chance of any abuse. <code>this</code> represents the object instance which other classes can access and decide to take lock on. It’s highly unlikely, but not impossible. It can cause your class to perform poorly under concurrent usage because there are other threads as well using the lock object.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-26278_26277" class="wpdiscuz_clear"></div><div id="wc-comm-56687_26278" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-56687" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Sunil Suthar</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-56687" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>so this way(synchronized(lock)) you can just lock for one operation only, rest of the operations are accessible for the instance , another acquire lock on instance level</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 months ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-56687_26278" class="wpdiscuz_clear"></div></div></div></div><div id="wc-comm-23313_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-23313" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Joe</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23313" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Point number 9 says:<br>
“9. Do not synchronize on non final field on synchronized block in Java. because reference of non final field may change any time and then different thread might synchronizing on different objects i.e. no synchronization at all.<br>
Best is to use String class, which is already immutable and declared final.”</p><p>What do you mean by:<br>
“Best is to use String class, which is already immutable and declared final.”</p><p>Do mean this:</p><div><div id="highlighter_181020" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">private</code> <code class="java plain">String str = </code><code class="java string">"abc"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1"><code class="java keyword">synchronized</code><code class="java plain">(str){ </code></div><div class="line number3 index2 alt2"><code class="java comments">//code here...</code></div><div class="line number4 index3 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p>which is wrong i guess.</p><p>OR this:</p><div><div id="highlighter_728189" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">synchronized</code><code class="java plain">(String.</code><code class="java keyword">class</code><code class="java plain">){ </code></div><div class="line number2 index1 alt1"><code class="java comments">//code here...</code></div><div class="line number3 index2 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p>Which will work for any class, why only String?</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23313_0" class="wpdiscuz_clear"></div><div id="wc-comm-27719_23313" class="wc-comment wc-reply wc-blog-guest wc_comment_level-2"><div id="comment-27719" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Vish</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-27719" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Even I have the same doubt</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-27719_23313" class="wpdiscuz_clear"></div><div id="wc-comm-27725_27719" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-3"><div id="comment-27725" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-27725" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>I meant this –</p><div><div id="highlighter_745967" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">final</code> <code class="java keyword">class</code> <code class="java plain">String</code></div><div class="line number2 index1 alt1"><code class="java keyword">extends</code> <code class="java plain">Object</code></div><div class="line number3 index2 alt2"><code class="java keyword">implements</code> <code class="java plain">Serializable, Comparable&lt;String&gt;, CharSequence</code></div></div></td></tr></tbody></table></div></div></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-27725_27719" class="wpdiscuz_clear"></div><div id="wc-comm-29371_27725" class="wc-comment wc-reply wc-blog-guest wc_comment_level-4"><div id="comment-29371" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Eric</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-29371" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>this reply is not helpful and makes no sense.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-29371_27725" class="wpdiscuz_clear"></div><div id="wc-comm-29372_29371" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-5"><div id="comment-29372" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-29372" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>I replied to what it means. Seems that is not enough so to answer more, we should be using :</p><div><div id="highlighter_392754" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">private</code> <code class="java keyword">final</code> <code class="java plain">String str = </code><code class="java keyword">new</code> <code class="java plain">String(</code><code class="java string">"ABC"</code><code class="java plain">); </code><code class="java comments">//Edited</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">synchronized</code><code class="java plain">(str){ </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java comments">//code here...</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-29372_29371" class="wpdiscuz_clear"></div><div id="wc-comm-29947_29372" class="wc-comment wc-reply wc-blog-guest wc_comment_level-6"><div id="comment-29947" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">aru@gmail.com</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-29947" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>its wrong to use string for lock as it is possible same literal in string pool used somewhere else and it will having lock on this you can get lock for somewhere else, its not right design wise.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-29947_29372" class="wpdiscuz_clear"></div><div id="wc-comm-29990_29947" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-7"><div id="comment-29990" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-29990" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Anu, Thanks for sharing your thoughts. I agree with you String literals can create problems but String objects shall be safe to use. Your thoughts??</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>1 year ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-29990_29947" class="wpdiscuz_clear"></div><div id="wc-comm-67660_29990" class="wc-comment wc-reply wc-blog-guest wc_comment_level-8"><div id="comment-67660" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">varun vajpayee</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-67660" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>String s = new String(“Test”);</p><p>does not put the object in String pool , we need to call String.intern() method which is used to put them into String pool explicitly. its only when you create String object as String literal e.g. String s = “Test” Java automatically put that into String pool.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 months ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-67660_29990" class="wpdiscuz_clear"></div><div id="wc-comm-67827_67660" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-9"><div id="comment-67827" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-67827" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Varun, how you think the argument string “test” is handled by JVM? For me, it’s a string literal passed as argument to an string object. As soon as, runtime seems string literal, it put in in pool.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 months ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-67827_67660" class="wpdiscuz_clear"></div></div></div></div></div></div></div></div></div></div><div id="wc-comm-23307_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-23307" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">malkeet</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23307" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>“if in runtime there are 100 instances of  DemoClass, then only one thread will be able to execute demoMethod() in any one of instance at a time, and all other instances will be locked for other threads.”<br>
above statement is contradictory of waat point 7 says- “It’s possible that both static synchronized and non static synchronized method can run simultaneously or concurrently because they lock on different object”.<br>
please clear it.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23307_0" class="wpdiscuz_clear"></div><div id="wc-comm-23308_23307" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-23308" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23308" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Infact, they are not. First statement talk about class level locking. Second statement is talking a scenario where class and thread, BOTH level locking is used. If you think, I have not understood your question correctly, please elaborate more.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23308_23307" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-22901_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-22901" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">-sn5816</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-22901" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hello Lokesh,</p><p>I am having an object of a class having some state.<br>
This object has two methods (m1() and m2()), both are changing the state of obj.<br>
m1() is synchronized but m2 is not synchronized.</p><p>Now two threads, T1 and T2 approach obj<br>
-&gt;T1 calls m1() which is synchronized<br>
-&gt; T2 calls m2() which is not synchronized.</p><p>What is found with my test results that the m2() was executing happily even though m1() had a lock.  But I thought that if lock is acquired on the entire obj by putting sync on method then how any other method can be executed. It should wait.</p><p>Your opinion is highly appreciated.</p><p>Thanks &amp; Regards,<br>
sn5816</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-22901_0" class="wpdiscuz_clear"></div><div id="wc-comm-22902_22901" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-22902" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-22902" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Can you please share your testcode, that will make your question more clear.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-22902_22901" class="wpdiscuz_clear"></div><div id="wc-comm-23275_22902" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-23275" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">RAMAKRISHNA</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23275" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><div><div id="highlighter_665689" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">class</code> <code class="java plain">Customer </code><code class="java keyword">implements</code> <code class="java plain">Runnable {</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">account ac=</code><code class="java keyword">new</code> <code class="java plain">account();</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">run(){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">printWelcomeMessage();</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">makewithdrawl(</code><code class="java value">1210</code><code class="java plain">);</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp; <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">printWelcomeMessage()</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"Welcome "</code><code class="java plain">+Thread.currentThread().getName());</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp;&nbsp;&nbsp; <code class="java keyword">void</code> <code class="java plain">makewithdrawl(</code><code class="java keyword">int</code> <code class="java plain">amount)</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code><code class="java plain">(Customer.</code><code class="java keyword">class</code><code class="java plain">)</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(Thread.currentThread().getName());</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"Available balance -------------- "</code><code class="java plain">+account.getbalance());</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"&nbsp; withdrawing the amoutn"</code><code class="java plain">);</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">account.withdraw(amount);</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">" completed "</code><code class="java plain">+</code><code class="java string">"Available balance is "</code><code class="java plain">+account.balance);</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}&nbsp;&nbsp; </code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><p>IN the above program consider that thread n is making a transaction and it is in middle.  If (n+1) thread appears it have to wait for welcome method  until the transaction  of (n)is completed.  Is there a way that we lock only the particular function during synchronization.???<br>
Thanks!! for examplanation .@sn5816.  If there are any errors in my code please be with patience.  I am new to java. 🙂</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23275_22902" class="wpdiscuz_clear"></div><div id="wc-comm-23277_23275" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-4"><div id="comment-23277" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23277" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>If you want to synchronize the method only, then use synchronized keyword on method signature.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23277_23275" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-23321_22902" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-23321" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Malkeet Singh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-23321" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Sorry, I got it now. Thanks for the quick reply.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>2 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-23321_22902" class="wpdiscuz_clear"></div></div></div></div><div id="wc-comm-22198_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-22198" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Chetan G</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-22198" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>I did not understand point 9. Can somebody help ?</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-22198_0" class="wpdiscuz_clear"></div><div id="wc-comm-22199_22198" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-22199" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-22199" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>This <a href="https://stackoverflow.com/questions/6910807/synchronization-of-non-final-field" target="_blank" rel="nofollow">SO thread</a> has good example.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>3 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-22199_22198" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-17411_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-17411" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">viraj</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-17411" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Excellent Explanation…!!!</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>4 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-17411_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-15393_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-15393" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Suda</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-15393" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Thanks</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>4 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-15393_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-13332_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-13332" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Amreesh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-13332" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>===================================How to lock Object===================================<br>
class A<br>
{<br>
synchronized void test1()<br>
{<br>
for(int i=0;i&lt;100;i++)<br>
{<br>
System.out.println(i);<br>
}<br>
}<br>
synchronized void test2()<br>
{<br>
for(int i=200;i&lt;300;i++)<br>
{<br>
System.out.println(i);<br>
}<br>
}<br>
}<br>
class B extends Thread<br>
{<br>
A a1;<br>
B(A a1)<br>
{<br>
this.a1=a1;<br>
}<br>
public void run()<br>
{<br>
a1.test1();<br>
}<br>
}<br>
class C extends Thread<br>
{<br>
A a1;<br>
C(A a1)<br>
{<br>
this.a1=a1;<br>
}<br>
public void run()<br>
{<br>
a1.test2();<br>
}<br>
}<br>
public class Manager1<br>
{<br>
public static void main(String[] args)<br>
{<br>
A a1=new A();<br>
//A a2=new A();<br>
B b1=new B(a1);<br>
C c1=new C(a1);  //Here is chance to currpt the data because same references<br>
b1.start();      //If not same ref then no chance to currpt data<br>
System.out.println("============");<br>
c1.start();<br>
}<br>
}</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-13332_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-13328_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-13328" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Amreesh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-13328" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>I  have confusion in Thread,What is different b/w Class level lock and Object level lock???<br>
Thanks..</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-13328_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-6358_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-6358" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Prahald sahu</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-6358" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Mind blowing Lokesh..</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-6358_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-5937_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-5937" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">krishna Kankal</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5937" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Nice article Lokesh</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5937_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-5343_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-5343" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Prateek</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5343" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,<br>
I have always seen class level locking in my coding  but never have i come across a requirement where i require an object level lock.Can you please tell me any real life scenario where we can use Object Level locking?</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5343_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-3877_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-3877" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Rohit</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-3877" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Sir,<br>
Really nice article, but i have doubt over one point can u pls elaborate it with example…<br>
7. It’s possible that both static synchronized and non static synchronized method can run simultaneously or concurrently because they lock on different object.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-3877_0" class="wpdiscuz_clear"></div><div id="wc-comm-5108_3877" class="wc-comment wc-reply wc-blog-guest wc_comment_level-2"><div id="comment-5108" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Ankit</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5108" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi,<br>
I would like to elaborate on you 7th point. As far as static synchronized methods are concerned, we are not taking any object into consideration as all static methods are class methods and can only be invoked by class variables. So, we can only have class lock on static methods.</p><p>Now, for non static synchronized methods, we are talking about object only as these methods invoke on object. So, here we can have class locks as well as objects locks.</p><p>So, two methods one is static and other is non static can take lock on object and class. In this way both the methods can run simultaneously.<br>
Hope this thing is clear to you.</p><p>Thanks</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5108_3877" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-3563_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-3563" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Nishant Sharma</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-3563" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>Thanks for the article on synchronization. I liked it ..But I have query in my mind that . you said Synchronization method will allow lock on OBJECT level and by adding static synchronization it add the functionality to allow lock on CLASS level..</p><p>But in the below code i have created 2 OBJECTS of same class but still i am not getting the desired effect of synchronization block .. but when i applied static to it hen it was working.. Please explain..</p><p>Thanks in advance…</p><div><div id="highlighter_453241" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Thread3 </code><code class="java keyword">extends</code> <code class="java plain">Thread </code></div><div class="line number2 index1 alt1"><code class="java plain">{</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//synchronized public void testsync()</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">synchronized</code> <code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">testsync()</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(</code><code class="java keyword">int</code> <code class="java plain">i = </code><code class="java value">0</code><code class="java plain">; i &amp;lt;= </code><code class="java value">5</code><code class="java plain">; i++) {</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(i);</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">try</code> <code class="java plain">{</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Thread.sleep(</code><code class="java value">500</code><code class="java plain">);</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">} </code><code class="java keyword">catch</code> <code class="java plain">(Exception e) {</code></div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(e);</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">run() {</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">testsync();</code></div><div class="line number18 index17 alt1"><code class="java plain">}</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String[] args) {</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Thread3 obj = </code><code class="java keyword">new</code> <code class="java plain">Thread3();</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Thread3 obj2 = </code><code class="java keyword">new</code> <code class="java plain">Thread3();</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">obj.start();</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">obj2.start();</code></div><div class="line number25 index24 alt2"><code class="java plain">}</code></div><div class="line number26 index25 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-3563_0" class="wpdiscuz_clear"></div><div id="wc-comm-3567_3563" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-3567" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-3567" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>I executed the above program. Below are the outputs:<br>
When method is static: 0 1 2 3 4 5 0 1 2 3 4 5<br>
When method is non-static: 0 0 1 1 2 2 3 3 4 4 5 5</p><p>When method is static: class level lock i.e. both instances of Thread3 are locked by first obj and then obj2. They execute the method in sequence.<br>
When method is non-static: Both instances execute the method independently in their instances.</p><p>In fact, in non-static mode they do not share any shared resource/method. So if you drop the synchronized keyword itself, it doesn’t make any difference.<br>
synchronized keyword should be used to protect some shared resource which will be accesses simultaneously by multiple threads. Here testSync() method does not do anything like that.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-3567_3563" class="wpdiscuz_clear"></div><div id="wc-comm-5202_3567" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-5202" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://en.gravatar.com/muppanashiva" rel="nofollow" target="_blank">muppanashiva</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5202" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>hii lokesh sir.. i have a general doubt as. can we lock object except synchronization concept..<br>
i mean am creating object like ,<br>
Test t=new Test();<br>
now i want to lock t object with out using sync concept..<br>
is it possible</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5202_3567" class="wpdiscuz_clear"></div><div id="wc-comm-5206_5202" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-4"><div id="comment-5206" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5206" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>You can use Lock implementations of <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/Lock.html" rel="nofollow ugc">https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/Lock.html</a></p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5206_5202" class="wpdiscuz_clear"></div><div id="wc-comm-5208_5206" class="wc-comment wc-reply wc-blog-guest wc_comment_level-5"><div id="comment-5208" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://en.gravatar.com/muppanashiva" rel="nofollow" target="_blank">muppanashiva</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5208" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>thank u sir.. i have already referred these docs.. but i didnt get anything..<br>
that is y am asking u</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5208_5206" class="wpdiscuz_clear"></div><div id="wc-comm-5210_5208" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-6"><div id="comment-5210" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5210" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>So basically you want a simple tutorial on how to use these lock objects, right? I will post one for you soon.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5210_5208" class="wpdiscuz_clear"></div><div id="wc-comm-5213_5210" class="wc-comment wc-reply wc-blog-guest wc_comment_level-7"><div id="comment-5213" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://en.gravatar.com/muppanashiva" rel="nofollow" target="_blank">muppanashiva</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5213" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>thanks in advance</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5213_5210" class="wpdiscuz_clear"></div></div></div></div></div></div><div id="wc-comm-5356_3567" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-5356" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Mit</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-5356" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>What changes should i make so that the output when the method is non static is equal to the output using static method. I don’t want to use static keyword. I just want to know how can we achieve this for non static methods.</p><p>And one more thing. Can you please explain what object should we keep in synchronized public void testsync(‘object’) between the brackets. How do we decide what to keep here. I saw on most websites that thy keep a variable of the class here, even if that variable is not used anywhere in the method. Thanks in advance</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-5356_3567" class="wpdiscuz_clear"></div></div></div></div><div id="wc-comm-2883_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-2883" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Kamal</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2883" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>Thanks for you articles, they are great!!</p><p>I would like to mention one thing though that your explanation on Class Level Lock is bit misleading:</p><p>“Class level locking prevents multiple threads to enter in synchronized block in any of all available instances on runtime. This means if in runtime there are 100 instances of  DemoClass, then only one thread will be able to execute demoMethod() in any one of instance at a time, and all other instances will be locked for other threads. This should always be done to make static data thread safe.”</p><p>Static code doesn’t belong to any instance, so it has no relation with instances at all. Yes out of 100 threads contending only one thread having managed to acquire the class level lock will be able to execute the static block of code.<br>
This should be enough, as code block belongs to instances (non-static methods) can still be executed in different thread at the same time even if they are guarded with Object level lock.</p><p>Thanks,<br>
Kamal</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2883_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-2530_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-2530" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Dave</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2530" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Excellent tutorial.. Thank you..</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2530_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-2086_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-2086" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">suma</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2086" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>In one of the interview, I have asked a question. Synchronized means, thread will get lock on object/instance. what happened in case of static synchorized?I said that thread will get lockon class.then interviewer asked where/how does class exists? I stuck over here.Can you plz explain, how a thread get lock on class?where does the class(template) exists</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2086_0" class="wpdiscuz_clear"></div><div id="wc-comm-2087_2086" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-2087" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2087" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>plz search more on semaphores. or wait one week. I am out of town on vacations.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2087_2086" class="wpdiscuz_clear"></div><div id="wc-comm-15838_2087" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-15838" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Govind</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-15838" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>Can i get this answer plzz?</p><p>Thanks</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>4 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-15838_2087" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-19747_2086" class="wc-comment wc-reply wc-blog-guest wc_comment_level-2"><div id="comment-19747" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Sujit</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-19747" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>What I could make out, in this question the interviewer switched from Thread to JVM internals for holding class &amp; object. May be to confuse you for a while or to check the continuity of your knowledge.</p><p>If that’s the case, then we all know that for object instances the memory area is called “Heap”.</p><p>But for classes, there is another area called “Non-Heap” space is present in Permgen space of JVM. This has a segment called “Method Area”. This segment specifically houses the Class information e.g., code copy of all the methods of the class, irrespective of whether they are static or non-static, along with a host of other details pertaining to the member variables and access details.</p><p>For more details you can refer to – <a href="http://blog.jamesdbloom.com/JVMInternals.html" rel="nofollow ugc">http://blog.jamesdbloom.com/JVMInternals.html</a></p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>4 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-19747_2086" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-2051_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-2051" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="http://www.techproceed.com/" rel="nofollow" target="_blank">Snehal Masne</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2051" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Wonderful notes Lokesh, clarified most of my doubts. Thanks and Keep it up 🙂</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2051_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-1930_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-1930" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://plus.google.com/100719283338729500979" rel="nofollow" target="_blank">Josh Molina</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-1930" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh, very nicely done.  Good job!</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-1930_0" class="wpdiscuz_clear"></div></div><div id="wc-comm-663_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-663" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Shreedhar</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-663" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi, Lokesh , I want to ask you that does it mean that if we synchronize a block of code or method , we are are assured that it will always and successfully execute ?</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-663_0" class="wpdiscuz_clear"></div><div id="wc-comm-664_663" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-664" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-664" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Method will execute anyway. Synchronization means method will be executed in a multi-threaded environment like it is running in single thread. It means multiple threads will not have effect of one another in their execution path.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-664_663" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-658_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-658" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">dowla</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-658" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi lokesh i need to know when the synchronized block will get executed.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-658_0" class="wpdiscuz_clear"></div><div id="wc-comm-659_658" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-659" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-659" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>There is nothing special in when synchronization block gets executed. It’s all about only one thread at a time.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-659_658" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-656_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-656" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Bhumik</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-656" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh, could you please explain the reason behind: “According to the Java language specification you can not use java synchronized keyword with constructor it’s illegal and result in compilation error”</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-656_0" class="wpdiscuz_clear"></div><div id="wc-comm-657_656" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-657" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-657" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Usually it is considered bad style to “give out” your not-yet-constructed object, so a synchronized constructor is not necessary.<br>
JLS actually says: “There is no practical need for a constructor to be synchronized, because it would lock the object under construction, which is <strong><em>normally</em></strong> not made available to other threads until all constructors for the object have completed their work.”</p><p>But sometimes construction process is long enough to violate this rule so you can use synchronized block inside constructor. This is allowed.</p><p><code>public class Test {<br>
public Test() {<br>
final Test me = this;<br>
synchronized(this) {<br>
new Thread() {<br>
@Override<br>
public void run() {<br>
// ... Reference 'me,' the object being constructed<br>
synchronized(me) {<br>
// do something dangerous with 'me'.<br>
}<br>
}<br>
}.start();<br>
// do something dangerous with this<br>
}<br>
}<br>
}</code></p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-657_656" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-654_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-654" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Ramana</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-654" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>HI Lokesh, You asked<br>
me same questions in interview</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-654_0" class="wpdiscuz_clear"></div><div id="wc-comm-655_654" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-655" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-655" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Sorry Ramana, I  really don’t remember but I hope you answered well… 🙂</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-655_654" class="wpdiscuz_clear"></div></div><div id="wc-comm-2098_654" class="wc-comment wc-reply wc-blog-guest wc_comment_level-2"><div id="comment-2098" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://en.gravatar.com/radhedubey" rel="nofollow" target="_blank">Radhe</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-2098" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Ramana, Whenever a class gets loaded by JVM, JVM creates an object which is called class.<br>
Say for example MyTest.java, where MyTest is class. So when MyTest gets loaded ‘MyTest.class’ object gets created.<br>
if MyTest class having any static syncronized method then lock would be on MyTest.class object.</p><p>For more detail please visit  <a href="https://radhedubey.wordpress.com/2013/12/10/thread-synchronization-object-level-locking-and-class-level-locking/" rel="nofollow ugc">https://radhedubey.wordpress.com/2013/12/10/thread-synchronization-object-level-locking-and-class-level-locking/</a></p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>5 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-2098_654" class="wpdiscuz_clear"></div></div></div><div id="wc-comm-650_0" class="wc-comment wc-blog-guest wc_comment_level-1"><div id="comment-650" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">H Singh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-650" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>At RUNTIME, is it possible that two threads can access same synchronized block, object ?</p><p>It seems that it can not happen, then how “Static Synchronized” and “Synchronized” declaration for any block or method behaves differently at run time.</p><p>Say I have a data bean class that gets current USD to INR rate. For this it has a method that calls RBI webService to get current rate. Now please provide your view on difference in following conditions:</p><p>1) If I declare – static synchronized getCurrentRate()<br>
2) If I declare – synchronized getCurrentRate()</p><p>Also putting “Static Synchronized” in declaration of any method or code block, will impact performance more as compare to “Synchronized”</p><p>I just want to make clear that exactly what is the difference between Class level and Object level Synchronization, in terms of performance and data inconsistency.</p><p>Thanks.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-650_0" class="wpdiscuz_clear"></div><div id="wc-comm-651_650" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-2"><div id="comment-651" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-651" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Please again read class level locking description in post:</p><p>“if in runtime there are 100 instances of  DemoClass, then only one thread will be able to execute demoMethod() in any one of instance at a time, and all other instances will be locked for other threads. This should always be done to make static data thread safe.”</p><p>Taking your example: (Let’s say getCurrentRate() method is defined in CurrencyConverter.java and there are 10 instances of this class)</p><p>1) If I declare – synchronized getCurrentRate() : In this case, 10 seperate threads will be able to access this method in all 10 different instances. In simple words, 1 thread per instance. By the time, any thread is executing this method in any of instances, 11th thread must wait.</p><p>2) If I declare – static synchronized getCurrentRate() : In this case, if one thread got access to instance one, then all other nine instances will also be locked and rest nine threads will be in waiting state. Once thread one finishes it’s job and release the lock, one of nine threads again will get access and rest eight will be in wait state.</p><p>I will not try to compare the performance of both blocks because they are entirely different functionalities.</p><p>As far as data consistency is concerned, non-static synchronized blocks are used to thread-safe instance level data, while   static synchronized blocks are used to safe static data.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-651_650" class="wpdiscuz_clear"></div><div id="wc-comm-652_651" class="wc-comment wc-reply wc-blog-guest wc_comment_level-3"><div id="comment-652" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">H Singh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-652" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>Thanks for responding.</p><p>Your explanation For synchronized getCurrentRate() : Seems that in this case , local variables are safe but not global and Static variables. In this case Local variables will not be accessed and updated by more than one thread. But in this case more than one thread can change values for Static and global variables.</p><p>Can you provide a real World example for making it more clear.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-652_651" class="wpdiscuz_clear"></div><div id="wc-comm-653_652" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-4"><div id="comment-653" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-653" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>What you re-iterated is completely true. It is essentially the way synchronization block works.</p><p>I really never used static synchronized block as far i can remember (apart from tutorials). I will really appreciate if you update this conversation with your past experience if you have any.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-653_652" class="wpdiscuz_clear"></div><div id="wc-comm-660_653" class="wc-comment wc-reply wc-blog-guest wc_comment_level-5"><div id="comment-660" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author ">Satheesh</div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-660" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Hi Lokesh,</p><p>I have been reading some of your post and it is really informative and easy to follow.</p><p>I just wanted to clarify one thing in this post, you mentioned that “static synchronized blocks are used to safe guard static data”.</p><p>But my understanding is that the static data are inherently thread-safe as they are initialized during class loading which is guaranteed to be thread-safe by the JVM.</p><p>Also it is my believe that no need to make the local variable thread-safe as each thread will have its own call stack so no issue of race condition.</p><p>Regards,<br>
Satheesh</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"><i class="fas fa-chevron-up" title="Hide Replies"></i></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-660_653" class="wpdiscuz_clear"></div><div id="wc-comm-661_660" class="wc-comment wc-reply wc-blog-user wc-blog-post_author wc_comment_level-6"><div id="comment-661" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://howtodoinjava.com/" rel="nofollow" target="_blank">Lokesh Gupta</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-661" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Thanks for sharing your views. I appreciate this. Synchronization is there to prevent the data from being corrupt when it is simultaneously accessed by two (or more) threads. You are right that at initialization time, data will be safe most of the time (not all the time if object creation process is long enough, in this case JVM may return the reference of not fully-prepared object). Still static data needs synchronization in other phases of application. Reason is that most JVM operations are multi-step (non-atomic) and there is high chances of data manipulation by two threads such that resulting data override each other’s changes.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-661_660" class="wpdiscuz_clear"></div></div></div></div></div></div><div id="wc-comm-662_650" class="wc-comment wc-reply wc-blog-guest wc_comment_level-2"><div id="comment-662" class="wc-comment-right wc-hide-avatar"><div class="wc-comment-header"><div class="wc-comment-author "><a href="https://en.gravatar.com/radhedubey" rel="nofollow" target="_blank">radhedubeyradhe</a></div><div class="wc-comment-link"><span class="wc-comment-img-link-wrap"><i class="fas fa-link wc-comment-img-link wpf-cta" data-comment-url="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/#comment-662" aria-hidden="true"></i></span></div><div class="wpdiscuz_clear"></div></div><div class="wc-comment-text"><p>Just want to clear few things, synchronization means synchronizing state changes of Object and that we can achieve it via synchronizing block in any java class. Now suppose there are 100 threads which trying to work with same object say obj1, which has some synchronized block, and all 100 threads trying to enter in that block.That point of time only one thread gets lock &amp; will execute synchronized block.</p><p>Now suppose all 100 threads trying to enter in synchronized block of java class with different- different Object instances say obj1, obj2……. obj100, Then all 100 threads can get entered in block because lock is on current obj.</p><p> Suppose you have static synchronized block, locking get applied for javaclass.class object which is created during class loading.</p></div><div class="wc-comment-footer"><div class="wc-footer-left"><span class="wc-vote-link wc-up wc_vote wc_not_clicked"><i class="fas fa-plus wc-vote-img-up"></i><span>Vote Up</span></span><span class="wc-vote-result">0</span><span class="wc-vote-link wc-down wc_vote wc_not_clicked"><i class="fas fa-minus wc-vote-img-down"></i><span>Vote Down</span></span>&nbsp;<span class="wc-reply-button wc-cta-button" title="Reply"><i class="far fa-comments" aria-hidden="true"></i> Reply</span></div><div class="wc-footer-right"><div class="wc-comment-date"><i class="far fa-clock" aria-hidden="true"></i>6 years ago</div><div class="wc-toggle"></div></div><div class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-message"></div><div id="wpdiscuz_form_anchor-662_650" class="wpdiscuz_clear"></div></div></div><div class="wpdiscuz-comment-pagination"></div></div><div class="wpdiscuz_clear"></div></div></div><div id="wpdiscuz-loading-bar" class="wpdiscuz-loading-bar wpdiscuz-loading-bar-unauth"></div>
</main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar"><section id="text-37" class="widget widget_text"><div class="widget-wrap"><h4 class="widget-title widgettitle">Search Tutorials</h4><div class="textwidget"><form action="https://howtodoinjava.com/search-results">
<input class="search-input" name="q" placeholder="Type and Press ENTER..." size="35" type="text"></form></div></div></section>
<section id="text-43" class="widget widget_text"><div class="widget-wrap"><div class="textwidget"><div style="margin-top: 10px; margin-bottom: 6px; width: 300px;"><div id="waldo-tag-3099" data-processed="true"><div id="_waldo-tag-3099-5-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3099-5" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="300" height="250" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/render.html">
    </iframe></div></div></div></div></div></section>
<section id="text-46" class="widget widget_text"><div class="widget-wrap"><div class="textwidget"><div style="margin-bottom: 6px;"><div id="waldo-tag-3095" data-processed="true"><span id="_waldo-tag-3095-3-container" style="margin: auto; text-align: center;"></span></div></div><div style="margin-bottom: 6px;"><div id="waldo-tag-3097" data-processed="true"><span id="_waldo-tag-3097-2-container" style="margin: auto; text-align: center;"></span></div></div></div></div></section>
</aside></div><aside class="sidebar sidebar-secondary widget-area" role="complementary" aria-label="Secondary Sidebar"><section id="nav_menu-41" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Java Concurrency Tutorial</h4><div class="menu-java-concurrency-1-container"><ul id="menu-java-concurrency-1" class="menu"><li id="menu-item-8069" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-8069"><a href="https://howtodoinjava.com/java-concurrency-tutorial/">Java Concurrency – Introduction</a></li><li id="menu-item-5617" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5617"><a href="https://howtodoinjava.com/java/multi-threading/java-multi-threading-evolution-and-topics/">Concurrency Evolution</a></li><li id="menu-item-5622" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5622"><a href="https://howtodoinjava.com/java/multi-threading/what-is-thread-safety/">Thread Safety</a></li><li id="menu-item-5615" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5615"><a href="https://howtodoinjava.com/java/multi-threading/concurrency-vs-parallelism/">Concurrency vs. Parallelism</a></li><li id="menu-item-5625" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5625"><a href="https://howtodoinjava.com/java/multi-threading/compare-and-swap-cas-algorithm/">Compare and Swap [CAS]</a></li><li id="menu-item-12100" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-12100"><a href="https://howtodoinjava.com/java/multi-threading/java-synchronized/">synchronized keyword</a></li><li id="menu-item-5623" class="menu-item menu-item-type-post_type menu-item-object-post current-menu-item menu-item-5623"><a href="https://howtodoinjava.com/java/multi-threading/object-vs-class-level-locking/" aria-current="page">Object vs. Class Level Locking</a></li><li id="menu-item-5630" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5630"><a href="https://howtodoinjava.com/java/multi-threading/java-runnable-vs-thread/">Runnable vs. Thread</a></li><li id="menu-item-5626" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5626"><a href="https://howtodoinjava.com/java/multi-threading/wait-notify-and-notifyall-methods/">wait(), notify() and notifyAll()</a></li><li id="menu-item-5628" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5628"><a href="https://howtodoinjava.com/java/multi-threading/difference-between-yield-and-join-in-threads-in-java/">Yield() vs. Join()</a></li><li id="menu-item-5629" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5629"><a href="https://howtodoinjava.com/java/multi-threading/sleep-vs-wait/">Sleep() vs. Wait()</a></li><li id="menu-item-5627" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5627"><a href="https://howtodoinjava.com/java/multi-threading/multithreading-difference-between-lock-and-monitor/">Lock vs. Monitor</a></li><li id="menu-item-5618" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5618"><a href="https://howtodoinjava.com/java/multi-threading/java-callable-future-example/">Callable + Future</a></li><li id="menu-item-5638" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5638"><a href="https://howtodoinjava.com/java/multi-threading/how-to-restart-thread-using-uncaughtexceptionhandler/">UncaughtExceptionHandler</a></li><li id="menu-item-5634" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5634"><a href="https://howtodoinjava.com/java/multi-threading/throttling-task-submission-rate-using-threadpoolexecutor-and-semaphore/">Throttling Task Submission</a></li><li id="menu-item-5635" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5635"><a href="https://howtodoinjava.com/java/multi-threading/executor-framework-tutorial/">Executor Best Practices</a></li><li id="menu-item-5641" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5641"><a href="https://howtodoinjava.com/java/multi-threading/inter-thread-communication-using-piped-streams-in-java/">Inter-thread Communication</a></li><li id="menu-item-5643" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5643"><a href="https://howtodoinjava.com/java/multi-threading/writing-a-deadlock-and-resolving-in-java/">Write and Resolve Deadlock</a></li></ul></div></div></section>
<section id="nav_menu-63" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Java Concurrency Utilities</h4><div class="menu-java-concurrency-2-container"><ul id="menu-java-concurrency-2" class="menu"><li id="menu-item-12466" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-12466"><a href="https://howtodoinjava.com/java/multi-threading/atomicinteger-example/">AtomicInteger</a></li><li id="menu-item-8058" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8058"><a href="https://howtodoinjava.com/java/multi-threading/how-to-use-locks-in-java-java-util-concurrent-locks-lock-tutorial-and-example/">Lock</a></li><li id="menu-item-8057" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8057"><a href="https://howtodoinjava.com/java/multi-threading/creating-threads-using-java-util-concurrent-threadfactory/">ThreadFactory</a></li><li id="menu-item-8059" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8059"><a href="https://howtodoinjava.com/java/multi-threading/when-and-how-to-use-thread-local-variables/">ThreadLocal</a></li><li id="menu-item-12571" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-12571"><a href="https://howtodoinjava.com/java/multi-threading/executor-service-example/">ExecutorService</a></li><li id="menu-item-8061" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8061"><a href="https://howtodoinjava.com/java/multi-threading/java-thread-pool-executor-example/">ThreadPoolExecutor</a></li><li id="menu-item-8060" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8060"><a href="https://howtodoinjava.com/java/multi-threading/java-fixed-size-thread-pool-executor-example/">FixedSizeThreadPoolExecutor</a></li><li id="menu-item-8062" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8062"><a href="https://howtodoinjava.com/java/multi-threading/task-scheduling-with-executors-scheduledthreadpoolexecutor-example/">ScheduledThreadPoolExecutor</a></li><li id="menu-item-8068" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8068"><a href="https://howtodoinjava.com/java/multi-threading/control-concurrent-access-to-multiple-copies-of-a-resource-using-semaphore/">Semaphore</a></li><li id="menu-item-8063" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8063"><a href="https://howtodoinjava.com/java/multi-threading/binary-semaphore-tutorial-and-example/">Binary Semaphore</a></li><li id="menu-item-8064" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8064"><a href="https://howtodoinjava.com/java/multi-threading/how-to-use-blockingqueue-and-threadpoolexecutor-in-java/">BlockingQueue</a></li><li id="menu-item-12589" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-12589"><a href="https://howtodoinjava.com/java/multi-threading/java-delayqueue/">DelayQueue</a></li><li id="menu-item-8065" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8065"><a href="https://howtodoinjava.com/java/multi-threading/non-blocking-thread-safe-list-concurrentlinkeddeque-example/">ConcurrentLinkedDeque</a></li><li id="menu-item-8066" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8066"><a href="https://howtodoinjava.com/java/multi-threading/when-to-use-countdownlatch-java-concurrency-example-tutorial/">CountDownLatch</a></li><li id="menu-item-8067" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-8067"><a href="https://howtodoinjava.com/java7/forkjoin-framework-tutorial-forkjoinpool-example/">ForkJoinPool</a></li></ul></div></div></section>
<section id="nav_menu-103" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Popular Tutorials</h4><div class="menu-popular-tutorials-container"><ul id="menu-popular-tutorials" class="menu"><li id="menu-item-12031" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12031"><a href="https://howtodoinjava.com/java-8-tutorial/">Java 8 Tutorial</a></li><li id="menu-item-10311" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-10311"><a href="https://howtodoinjava.com/java/basics/what-is-java-programming-language/">Core Java Tutorial</a></li><li id="menu-item-12032" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12032"><a href="https://howtodoinjava.com/java-collections/">Collections in Java</a></li><li id="menu-item-12033" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12033"><a href="https://howtodoinjava.com/java-concurrency-tutorial/">Java Concurrency</a></li><li id="menu-item-11314" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11314"><a href="https://howtodoinjava.com/spring-boot-tutorials/">Spring Boot Tutorial</a></li><li id="menu-item-10318" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10318"><a href="https://howtodoinjava.com/spring-aop-tutorial/">Spring AOP Tutorial</a></li><li id="menu-item-10308" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10308"><a href="https://howtodoinjava.com/spring-mvc-tutorial/">Spring MVC Tutorial</a></li><li id="menu-item-10309" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10309"><a href="https://howtodoinjava.com/spring-security-tutorial/">Spring Security Tutorial</a></li><li id="menu-item-10292" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10292"><a href="https://howtodoinjava.com/hibernate-tutorials/">Hibernate Tutorial</a></li><li id="menu-item-13063" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-13063"><a href="https://howtodoinjava.com/python-tutorial/">Python Tutorial</a></li><li id="menu-item-10303" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10303"><a href="https://howtodoinjava.com/jersey-jax-rs-tutorials/">Jersey Tutorial</a></li><li id="menu-item-10306" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10306"><a href="https://howtodoinjava.com/maven/">Maven Tutorial</a></li><li id="menu-item-10305" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-10305"><a href="https://howtodoinjava.com/log4j2/">Log4j Tutorial</a></li><li id="menu-item-12034" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-12034"><a href="https://howtodoinjava.com/java-regular-expression-tutorials/">Regex Tutorial</a></li></ul></div></div></section>
</aside></div></div><div class="before-footer"><div class="wrap"><section id="text-45" class="widget widget_text"><div class="widget-wrap"><div class="textwidget"><style>.hideOnMobile { display: block; } @media (max-width:960px) { .hideOnMobile { display: none; } }</style><div class="hideOnMobile" style="margin: 10px auto; text-align: center; width: 728px;"><div id="waldo-tag-3101" data-processed="true"><div id="_waldo-tag-3101-4-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3101-4" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="728" height="90" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/render(1).html">
    </iframe></div></div></div></div></div></section></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="nav_menu-6" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Meta Links</h4><div class="menu-meta-links-container"><ul id="menu-meta-links" class="menu"><li id="menu-item-3574" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3574"><a href="https://howtodoinjava.com/advertise/">Advertise</a></li><li id="menu-item-3570" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3570"><a href="https://howtodoinjava.com/contact/">Contact Us</a></li><li id="menu-item-3568" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3568"><a href="https://howtodoinjava.com/privacy-policy/">Privacy policy</a></li><li id="menu-item-3571" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3571"><a href="https://howtodoinjava.com/about/">About Me</a></li></ul></div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="nav_menu-118" class="widget widget_nav_menu"><div class="widget-wrap"><h4 class="widget-title widgettitle">Recommended Reading</h4><div class="menu-recommended-reading-container"><ul id="menu-recommended-reading" class="menu"><li id="menu-item-5713" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5713"><a title="10 Life Lessions" href="https://howtodoinjava.com/resources/10-life-lessons-i-have-learned-in-last-few-years/">10 Life Lessons</a></li><li id="menu-item-5724" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5724"><a href="https://howtodoinjava.com/security/how-to-generate-secure-password-hash-md5-sha-pbkdf2-bcrypt-examples/">Secure Hash Algorithms</a></li><li id="menu-item-5714" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5714"><a href="https://howtodoinjava.com/tomcat/a-birds-eye-view-on-how-web-servers-work/">How Web Servers work?</a></li><li id="menu-item-5717" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5717"><a href="https://howtodoinjava.com/java/io/how-java-io-works-internally-at-lower-level/">How Java I/O Works Internally?</a></li><li id="menu-item-5722" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-5722"><a href="https://howtodoinjava.com/resources/best-way-to-learn-java/">Best Way to Learn Java</a></li><li id="menu-item-5733" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-5733"><a href="https://howtodoinjava.com/java-best-practices/">Java Best Practices Guide</a></li><li id="menu-item-9622" class="menu-item menu-item-type-post_type menu-item-object-post menu-item-9622"><a href="https://howtodoinjava.com/microservices/microservices-definition-principles-benefits/">Microservices Tutorial</a></li><li id="menu-item-6405" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6405"><a title="REST API Tutorial" target="_blank" rel="nofollow" href="http://restfulapi.net/">REST API Tutorial</a></li><li id="menu-item-9519" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-9519"><a href="https://howtodoinjava.com/start-new-blog/">How to Start New Blog</a></li></ul></div></div></section></div></div></div><footer class="site-footer"><div class="wrap"><p style="margin: 20px auto;max-width: 800px;">Copyright © 2016 · HowToDoInjava.com · All Rights Reserved. | <a href="https://howtodoinjava.com/sitemap.xml">Sitemap</a></p></div></footer></div><a id="wpdUserContentInfoAnchor" style="display:none;" rel="#wpdUserContentInfo" data-wpd-lity="">wpDiscuz</a><div id="wpdUserContentInfo" style="overflow:auto;background:#FDFDF6;padding:20px;width:600px;max-width:100%;border-radius:6px;" class="lity-hide"></div><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-40697607-1', 'auto');
  ga('set', 'dimension1', 'Test');
  ga('send', 'pageview');</script> <script>(function() {
    var cx = '000292789241211868774:cvclu5feha4';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
        '//cse.google.com/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();</script><script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/shCore.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/shBrushJava.js"></script> <script type="text/javascript">(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.head.appendChild( corecss );
		var themecssurl = "https://howtodoinjava.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.head.appendChild( themecss );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

	// Infinite scroll support
	if ( typeof( jQuery ) !== 'undefined' ) {
		jQuery( function( $ ) {
			$( document.body ).on( 'post-load', function() {
				SyntaxHighlighter.highlight();
			} );
		} );
	}</script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/wpdcc.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/jquery.autogrowtextarea.min.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/jquery.form.min.js"></script> <script type="text/javascript">/*<![CDATA[*//*  */
var wpdiscuzAjaxObj = {"url":"https:\/\/howtodoinjava.com\/wp-admin\/admin-ajax.php","customAjaxUrl":"https:\/\/howtodoinjava.com\/wp-content\/plugins\/wpdiscuz\/utils\/ajax\/wpdiscuz-ajax.php","wpdiscuz_options":{"wc_hide_replies_text":"Hide Replies","wc_show_replies_text":"View Replies","wc_msg_required_fields":"Please fill out required fields","wc_invalid_field":"Some of field value is invalid","wc_error_empty_text":"please fill out this field to comment","wc_error_url_text":"url is invalid","wc_error_email_text":"email address is invalid","wc_invalid_captcha":"Invalid Captcha Code","wc_login_to_vote":"You Must Be Logged In To Vote","wc_deny_voting_from_same_ip":"You are not allowed to vote for this comment","wc_self_vote":"You cannot vote for your comment","wc_vote_only_one_time":"You've already voted for this comment","wc_voting_error":"Voting Error","wc_held_for_moderate":"Comment awaiting moderation","wc_comment_edit_not_possible":"Sorry, this comment no longer possible to edit","wc_comment_not_updated":"Sorry, the comment was not updated","wc_comment_not_edited":"You've not made any changes","wc_new_comment_button_text":"new comment","wc_new_comments_button_text":"new comments","wc_new_reply_button_text":"new reply on your comment","wc_new_replies_button_text":"new replies on your comments","wc_msg_input_min_length":"Input is too short","wc_msg_input_max_length":"Input is too long","wc_follow_user":"Follow this user","wc_unfollow_user":"Unfollow this user","wc_follow_success":"You started following this comment author","wc_follow_canceled":"You stopped following this comment author.","wc_follow_email_confirm":"Please check your email and confirm the user following request.","wc_follow_email_confirm_fail":"Sorry, we couldn't send confirmation email.","wc_follow_login_to_follow":"Please login to follow users.","wc_follow_impossible":"We are sorry, but you can't follow this user.","wc_follow_not_added":"Following failed. Please try again later.","is_user_logged_in":false,"commentListLoadType":"0","commentListUpdateType":"0","commentListUpdateTimer":"30","liveUpdateGuests":"1","wc_comment_bg_color":"#FEFEFE","wc_reply_bg_color":"#F8F8F8","wpdiscuzCommentsOrder":"desc","wpdiscuzCommentOrderBy":"comment_date_gmt","commentsVoteOrder":false,"wordpressThreadCommentsDepth":"10","wordpressIsPaginate":"","commentTextMaxLength":null,"storeCommenterData":100000,"isCaptchaInSession":true,"isGoodbyeCaptchaActive":false,"socialLoginAgreementCheckbox":0,"enableFbLogin":0,"enableFbShare":0,"facebookAppID":"","facebookUseOAuth2":0,"enableGoogleLogin":0,"googleAppID":"","cookiehash":"1aece0b34da653945745203e18ec6df7","isLoadOnlyParentComments":0,"ahk":"av6#4%v(x-9c%p&s0@x$e&zp8hgd#$=#","enableDropAnimation":1,"isNativeAjaxEnabled":1,"cookieCommentsSorting":"wpdiscuz_comments_sorting","enableLastVisitCookie":0,"version":"5.3.5","wc_post_id":842,"loadLastCommentId":0,"lastVisitKey":"wpdiscuz_last_visit","isCookiesEnabled":true,"wc_captcha_show_for_guest":"0","wc_captcha_show_for_members":"0","is_email_field_required":"1"}};
/*  *//*]]>*/</script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/wpdiscuz.js"></script> <script type="text/javascript">/*  */
var wpdiscuzUCObj = {"msgConfirmDeleteComment":"Are you sure you want to delete this comment?","msgConfirmCancelSubscription":"Are you sure you want to cancel this subscription?","msgConfirmCancelFollow":"Are you sure you want to cancel this follow?"};
/*  */</script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/wpdiscuz-user-content.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/lity.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/comment-reply.min.js"></script> <script type="text/javascript" src="./Object level lock vs Class level lock in Java - HowToDoInJava_files/collapsable.js"></script> </body></html>