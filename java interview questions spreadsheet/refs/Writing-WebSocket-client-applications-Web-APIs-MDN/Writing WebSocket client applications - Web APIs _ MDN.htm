<!DOCTYPE html>
<!-- saved from url=(0101)https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications -->
<html lang="en" dir="ltr" class=""><head prefix="og: http://ogp.me/ns#"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
  <script>(function(d) { d.className = d.className.replace(/\bno-js/, ''); })(document.documentElement);</script>
  <title>Writing WebSocket client applications - Web APIs | MDN</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="index, follow">

  
<link rel="preload" href="https://developer.mozilla.org/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2" as="font" type="font/woff2" crossorigin="">
<link rel="preload" href="https://developer.mozilla.org/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2" as="font" type="font/woff2" crossorigin="">

  <link rel="home" href="https://developer.mozilla.org/en-US/">
  <link rel="license" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#license">

  <link href="./Writing WebSocket client applications - Web APIs _ MDN_files/react-header.35f24f5aa50c.css" rel="stylesheet" type="text/css">

<link href="./Writing WebSocket client applications - Web APIs _ MDN_files/react-mdn.0d64fea91b0c.css" rel="stylesheet" type="text/css">

  <link href="./Writing WebSocket client applications - Web APIs _ MDN_files/prism.a6f275e5032b.css" rel="stylesheet" type="text/css">

  
<style>
    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Regular.subset.0357f12613a7.woff) format('woff');
        font-weight: normal;
        font-style: normal;
    }

    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Bold.subset.da0ccde4ca4a.woff) format('woff');
        font-weight: bold;
        font-style: normal;
    }
</style>


  
<script>
    // Mozilla DNT Helper
    /* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. */ if(typeof Mozilla==='undefined'){var Mozilla={}}Mozilla.dntEnabled=function(dnt,ua){'use strict';var dntStatus=dnt||navigator.doNotTrack||window.doNotTrack||navigator.msDoNotTrack;var userAgent=ua||navigator.userAgent;var anomalousWinVersions=['Windows NT 6.1','Windows NT 6.2','Windows NT 6.3'];var fxMatch=userAgent.match(/Firefox\/(\d+)/);var ieRegEx=/MSIE|Trident/i;var isIE=ieRegEx.test(userAgent);var platform=userAgent.match(/Windows.+?(?=;)/g);if(isIE&&typeof Array.prototype.indexOf!=='function'){return false}else if(fxMatch&&parseInt(fxMatch[1],10)<32){dntStatus='Unspecified'}else if(isIE&&platform&&anomalousWinVersions.indexOf(platform.toString())!==-1){dntStatus='Unspecified'}else{dntStatus={'0':'Disabled','1':'Enabled'}[dntStatus]||'Unspecified'}return dntStatus==='Enabled'?true:false};
    // only load GA if DNT is not enabled
    if (Mozilla && !Mozilla.dntEnabled()) {
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-36116321-5', 'mozilla.org');
        ga('set', 'anonymizeIp', true);
    }
</script>
<script async="" src="./Writing WebSocket client applications - Web APIs _ MDN_files/analytics.js"></script>


  <script>
LUX=(function(){var a=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMarks)?LUX.gaMarks:[]);var d=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMeasures)?LUX.gaMeasures:[]);var j="LUX_start";var k=window.performance;var l=("undefined"!==typeof(LUX)&&LUX.ns?LUX.ns:(Date.now?Date.now():+(new Date())));if(k&&k.timing&&k.timing.navigationStart){l=k.timing.navigationStart}function f(){if(k&&k.now){return k.now()}var o=Date.now?Date.now():+(new Date());return o-l}function b(n){if(k){if(k.mark){return k.mark(n)}else{if(k.webkitMark){return k.webkitMark(n)}}}a.push({name:n,entryType:"mark",startTime:f(),duration:0});return}function m(p,t,n){if("undefined"===typeof(t)&&h(j)){t=j}if(k){if(k.measure){if(t){if(n){return k.measure(p,t,n)}else{return k.measure(p,t)}}else{return k.measure(p)}}else{if(k.webkitMeasure){return k.webkitMeasure(p,t,n)}}}var r=0,o=f();if(t){var s=h(t);if(s){r=s.startTime}else{if(k&&k.timing&&k.timing[t]){r=k.timing[t]-k.timing.navigationStart}else{return}}}if(n){var q=h(n);if(q){o=q.startTime}else{if(k&&k.timing&&k.timing[n]){o=k.timing[n]-k.timing.navigationStart}else{return}}}d.push({name:p,entryType:"measure",startTime:r,duration:(o-r)});return}function h(n){return c(n,g())}function c(p,o){for(i=o.length-1;i>=0;i--){var n=o[i];if(p===n.name){return n}}return undefined}function g(){if(k){if(k.getEntriesByType){return k.getEntriesByType("mark")}else{if(k.webkitGetEntriesByType){return k.webkitGetEntriesByType("mark")}}}return a}return{mark:b,measure:m,gaMarks:a,gaMeasures:d}})();LUX.ns=(Date.now?Date.now():+(new Date()));LUX.ac=[];LUX.cmd=function(a){LUX.ac.push(a)};LUX.init=function(){LUX.cmd(["init"])};LUX.send=function(){LUX.cmd(["send"])};LUX.addData=function(a,b){LUX.cmd(["addData",a,b])};LUX_ae=[];window.addEventListener("error",function(a){LUX_ae.push(a)});LUX_al=[];if("function"===typeof(PerformanceObserver)){var LongTaskObserver=new PerformanceObserver(function(c){var b=c.getEntries();for(var a=0;a<b.length;a++){var d=b[a];LUX_al.push(d)}});try{LongTaskObserver.observe({entryTypes:["longtask"],buffered:true})}catch(e){}};
</script>
<script src="./Writing WebSocket client applications - Web APIs _ MDN_files/lux.js" async="" defer="" crossorigin="anonymous"></script>


  <script>
  window.fetch || document.write('<script src="/static/build/js/fetch-polyfill.63fdc379c7eb.js"><\/script>');
</script>
<script>
  // Only include the fat polyfill for browsers that seem to not have
  // certain JS features. E.g. Firefox 38.
  Array.prototype.includes || document.write('<script src="/static/build/js/js-polyfill.6f2e22100487.js"><\/script>');
</script>

  <script async="" type="text/javascript" src="./Writing WebSocket client applications - Web APIs _ MDN_files/perf.654b849a6fd9.js" charset="utf-8"></script>

  <!-- common social tags -->
  
  <meta property="og:type" content="website">
  <meta property="og:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta property="og:site_name" content="MDN Web Docs">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta name="twitter:site" content="@MozDevNet">
  <meta name="twitter:creator" content="@MozDevNet">
  <link rel="search" type="application/opensearchdescription+xml" href="https://developer.mozilla.org/en-US/search/xml" title="MDN Web Docs">

  <!-- third-generation iPad with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://developer.mozilla.org/static/img/favicon144.e7e21ca263ca.png">
  <!-- iPhone with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://developer.mozilla.org/static/img/favicon114.d526f38b09c5.png">
  <!-- first- and second-generation iPad: -->
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://developer.mozilla.org/static/img/favicon72.cc65d1d762a0.png">
  <!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
  <link rel="apple-touch-icon-precomposed" href="https://developer.mozilla.org/static/img/favicon57.de33179910ae.png">
  <!-- basic favicon -->
  <link rel="shortcut icon" href="https://developer.mozilla.org/static/img/favicon32.7f3da72dcea1.png">

  

  <link rel="preconnect" href="https://interactive-examples.mdn.mozilla.net/" pr="0.75">

  <link rel="canonical" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications">

  
  <link rel="alternate" hreflang="en" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Writing WebSocket client applications">
  
    <link rel="alternate" hreflang="es" href="https://developer.mozilla.org/es/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Escribiendo aplicaciones con WebSockets">
  
    <link rel="alternate" hreflang="fr" href="https://developer.mozilla.org/fr/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Ecrire des applications client WebSocket">
  
    <link rel="alternate" hreflang="hu" href="https://developer.mozilla.org/hu/docs/WebSockets/Writing_WebSocket_client_applications" title="Writing WebSocket client applications">
  
    <link rel="alternate" hreflang="it" href="https://developer.mozilla.org/it/docs/WebSockets/Writing_WebSocket_client_applications" title="Writing WebSocket client applications">
  
    <link rel="alternate" hreflang="ja" href="https://developer.mozilla.org/ja/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="WebSocket クライアントアプリケーションの記述">
  
    <link rel="alternate" hreflang="ko" href="https://developer.mozilla.org/ko/docs/WebSockets/Writing_WebSocket_client_applications" title="WebSocket을 이용하여 클라이언트 애플리케이션 작성하기">
  
    <link rel="alternate" hreflang="pt" href="https://developer.mozilla.org/pt-BR/docs/WebSockets/Escrevendo_aplicacoes_cliente_WebSocket" title="Escrevendo aplicações cliente WebSocket">
  
    <link rel="alternate" hreflang="ru" href="https://developer.mozilla.org/ru/docs/WebSockets/Writing_WebSocket_client_applications" title="Написание клиентских приложений с помощью вебсокетов">
  
    <link rel="alternate" hreflang="zh" href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="编写WebSocket客户端应用">
  
    <link rel="alternate" hreflang="zh-TW" href="https://developer.mozilla.org/zh-TW/docs/WebSockets/Writing_WebSocket_client_applications" title="製作 WebSocket 客戶端應用程式">
  

  <!-- document-specific social tags -->
  <meta property="og:title" content="Writing WebSocket client applications">
  <meta property="og:url" content="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications">
  <meta name="twitter:url" content="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications">
  <meta name="twitter:title" content="Writing WebSocket client applications">
  
  <meta property="og:description" content="WebSocket client applications use the WebSocket API to communicate with WebSocket servers using the WebSocket protocol.">
  <meta name="description" content="WebSocket client applications use the WebSocket API to communicate with WebSocket servers using the WebSocket protocol.">
  <meta name="twitter:description" content="WebSocket client applications use the WebSocket API to communicate with WebSocket servers using the WebSocket protocol.">
  

  
    <link href="./Writing WebSocket client applications - Web APIs _ MDN_files/print.ca192a439743.css" rel="stylesheet" type="text/css" media="print">
  
</head>
<body>
  <script>
    // make sure global mdn object exists
    var mdn = window.mdn || {};

    (function(win) {
        'use strict';

        win.mdn.features = {};
        win.mdn.siteUrl = 'https://developer.mozilla.org';
        win.mdn.wikiSiteUrl = 'https://wiki.developer.mozilla.org';
        win.mdn.staticPath = '/static/';
        win.mdn.wiki = {
            autosuggestTitleUrl: '/en-US/docs/get-documents'
        };

        win.mdn.notifications = [];

        

        // interactive editor config
        win.mdn.interactiveEditor = {
            siteUrl: "https://developer.mozilla.org",
            editorUrl: "https://interactive-examples.mdn.mozilla.net"
        };
        win.mdn.langCookieName = "django_language";
        win.mdn.multiAuthEnabled = false;

    })(this);
</script>

  

  <div id="react-container" data-component-name="SPA"><div class="loading-bar"></div><ul id="nav-access"><li><a id="skip-main" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#content">Skip to main content</a></li><li><a id="skip-language" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#language">Select language</a></li><li><a id="skip-search" href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#main-q">Skip to search</a></li></ul><header class="page-header"><a href="https://developer.mozilla.org/en-US/" class="logo" aria-label="MDN Web Docs"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 219 48" role="img"><path d="M49.752 30.824h59.917v17.132H49.75zm57.23 12.3c-.103.03-.21.048-.316.05-.338 0-.514-.15-.514-.582v-3.256c0-1.71-1.352-2.543-2.976-2.543a7.206 7.206 0 0 0-3.21.676l-.29 1.724 1.71.182.245-.842a2.338 2.338 0 0 1 1.147-.216c1.214 0 1.23.913 1.23 1.69v.234c-.407-.048-.818-.07-1.23-.068-1.71 0-3.49.433-3.49 2.276 0 1.563 1.23 2.144 2.31 2.144a2.7 2.7 0 0 0 2.41-1.494c.018.88.77 1.563 1.648 1.494a2.89 2.89 0 0 0 1.353-.338zm-4.604-.05a.787.787 0 0 1-.88-.867c0-.815.677-1.015 1.432-1.015.36.008.722.04 1.078.098-.05 1.235-.852 1.783-1.63 1.783zM97.388 33l-3.24 11.433h2.11L99.5 33.002zm-4.353 0l-3.24 11.433h2.11L95.145 33zm-6.89 6.645h2.243V36.94h-2.242zm0 4.802h2.243v-2.706h-2.242zm-3.617-1.64H80.1l4.156-4.736-.166-1.13h-6.58l-.268 2.63 1.546.164.338-1.163h2.343l-4.123 4.734.216 1.13h6.544l.467-2.63-1.69-.164zM72.143 36.79c-2.706 0-4.02 1.812-4.02 4.004 0 2.394 1.595 3.804 3.905 3.804 2.394 0 4.122-1.51 4.122-3.905-.003-2.093-1.32-3.906-4.01-3.906zm-.054 6.154c-1.165 0-1.763-.997-1.763-2.292 0-1.414.676-2.23 1.778-2.23 1.015 0 1.83.677 1.83 2.196 0 1.438-.73 2.327-1.846 2.327zm-5.906-3.564c0-1.78-1.224-2.594-2.577-2.594a2.51 2.51 0 0 0-2.44 1.612c-.367-1.1-1.364-1.613-2.443-1.613a2.48 2.48 0 0 0-2.276 1.278v-1.13h-3.14v1.63h.996v4.24h-.997v1.63h4.572v-1.63h-1.432V40.2c0-1.048.433-1.78 1.448-1.78.845 0 1.278.502 1.278 1.797v4.224h3.14v-1.63h-.996v-2.612c0-1.048.433-1.78 1.447-1.78.846 0 1.278.502 1.278 1.797v4.214h3.142V42.8h-.998zm78.791-22.39h-6.29c.23-1.935 1.16-3.558 3.274-3.558 2.245 0 3.2 1.857 3.016 3.558zM218.952 0v29.137h-169.2V0zM71.706 6.885h-3.85L61.51 20.01h-.104L54.882 6.884h-3.84v1.65h2.19V21.98H51.12v1.65h5.927v-1.65h-2.012V11.24h.1l5.75 11.553H61.9l5.62-11.474h.105v10.66h-1.962v1.65h5.942v-1.65h-2.09V8.536h2.19zm9.993 16.76c5.285 0 8.484-3.48 8.484-8.42 0-4.847-3.094-8.353-8.56-8.353H74.12v1.623h2.114v13.527H74.12v1.623zm27.05-16.76h-6.426v1.65h2.526v11.268h-.1L95.21 6.885H91.6v1.65h2.22V21.98h-1.935v1.65h6.385v-1.65h-2.655V10.444h.1l9.724 13.202h1.21V8.535h2.09zm26.71 5.29h-5.156v1.467h1.83l-1.857 7.247h-.128l-3.586-8.716h-1.21l-3.423 8.718h-.127l-2.14-7.247h1.933v-1.47h-5.41v1.467h1.522l3.25 10.003h1.352l3.432-8.766h.13l3.496 8.765h1.393l3.122-10.003h1.573zm6.704 11.727c2.837 0 4.514-1.583 4.83-3.568l-1.523-.338c-.36 1.42-1.365 2.347-3.17 2.347-2.283 0-3.53-1.468-3.636-4.02h8.058c.1-.445.153-.898.156-1.354-.024-2.71-1.728-5.03-4.873-5.03-3.246 0-5.26 2.58-5.26 6.14 0 3.712 2.162 5.825 5.412 5.825zm13.408 0c3.663 0 5.134-3.25 5.134-6.294 0-3.642-2.063-5.67-4.924-5.67-2.19 0-3.402 1.186-4.1 2.603V5.905h-3.53v1.47h1.692v12.923a22.8 22.8 0 0 1-.338 3.35h1.805a44.05 44.05 0 0 0 .235-1.906c.747 1.39 2.242 2.165 4.02 2.165zm26.198-1.728h-1.985V5.904h-4.6v1.47h2.798v6.653c-.748-1.342-2.15-2.09-3.842-2.09-3.74 0-5.183 3.2-5.183 6.267 0 3.584 1.958 5.698 4.924 5.698 2.087 0 3.352-1.224 4.1-2.577v2.323h3.784zm6.963 1.728c3.53 0 5.75-2.526 5.742-6.006 0-3.25-1.934-5.982-5.647-5.982s-5.67 2.735-5.67 6.087c0 3.457 2.09 5.905 5.568 5.905zm12.942 0c3.172 0 4.538-2.114 4.866-4.112l-1.548-.34c-.334 1.885-1.315 2.917-3.094 2.917-2.27 0-3.507-1.637-3.507-4.397 0-2.475.982-4.487 3.43-4.487a4.4 4.4 0 0 1 2.45.646l.42 1.936 1.496-.18-.44-2.758c-1.16-.876-2.397-1.187-3.92-1.187-3.556 0-5.362 2.966-5.362 6.14 0 3.685 2.036 5.825 5.208 5.825zm11.166 0c2.76 0 4.874-1.34 4.847-3.595 0-4.565-7.1-2.195-7.1-5.184 0-1.177 1.03-1.69 2.474-1.69.826-.015 1.64.18 2.368.567l.267 1.864 1.495-.18-.284-2.68a8.135 8.135 0 0 0-3.997-1.06c-2.088 0-4.255.903-4.255 3.328 0 4.46 7.193 2.063 7.193 5.208 0 1.315-1.495 1.934-3.095 1.934a5.812 5.812 0 0 1-2.553-.568l.078-1.522-1.444-.156-.362 2.604c.977.643 2.736 1.133 4.36 1.133zm-54.042-6.11c0 2.373-1.058 4.564-3.584 4.564a3.455 3.455 0 0 1-3.534-3.456v-1.728c.05-1.7 1.444-3.686 3.635-3.686 1.948 0 3.48 1.444 3.483 4.305zm19.18-1.06v1.833c-.076 1.73-1.57 3.79-3.634 3.79-1.985 0-3.48-1.47-3.48-4.28 0-2.425 1.133-4.59 3.686-4.59a3.36 3.36 0 0 1 3.43 3.248zm14.597 1.133c0 2.58-1.34 4.488-3.79 4.488-2.453 0-3.74-1.958-3.74-4.46 0-2.55 1.34-4.434 3.74-4.434 2.397 0 3.79 1.778 3.79 4.405zm-104.39-2.593c0 4.16-2.32 6.763-6.574 6.763h-3.478V8.508h3.466c4.254 0 6.574 2.71 6.587 6.764zM.116 0h47.956v47.956H.116zM42.01 22.02c-.036-.723-.12-1.448-.17-2.166a1.74 1.74 0 0 0-.395-.98 2.465 2.465 0 0 0-1.026-.74c-.808-.314-1.622-.664-2.435-.975a21.509 21.509 0 0 1-3.342-1.472 2.626 2.626 0 0 1-1.296-1.972 2.954 2.954 0 0 0-1.47-2.228 4.062 4.062 0 0 0-2.958-.35c-.734.176-1.5.165-2.23-.033l-1.112-.34-.302-.09-.873-.26c-1.57-.468-2.228-.713-4.773-.278a14.678 14.678 0 0 0-7.09 3.897l-6.37 6.76h5.72l-3.504 3.71h6.026l-3.503 3.71h4.844l-1.548 4.06c5.93 6.07 12.25 7.295 12.25 7.295 0-1.673.38-8.24.826-9.34a5.25 5.25 0 0 1 .762-1.54 4.211 4.211 0 0 1 3.393-1.547c1.303 0 2.597.238 3.815.702.74.31 1.577.264 2.277-.122a38.42 38.42 0 0 0 1.498-.94.839.839 0 0 1 .556-.18c.54.06 1.054-.237 1.27-.734.16-.33.35-.64.524-.97.472-.884.69-1.88.633-2.88z"></path></svg></a><nav class="main-nav" role="navigation"><ul><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">Technologies<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web">Technologies Overview</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/HTML">HTML</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Graphics">Graphics</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/API">APIs / DOM</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions">Browser Extensions</a></li><li data-item="Technologies" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/MathML">MathML</a></li></ul></li><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">References &amp; Guides<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Learn">Learn web development</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/Tutorials">Tutorials</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/Reference">References</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/Guide">Developer Guides</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility">Accessibility</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Games">Game development</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/Web">...more docs</a></li></ul></li><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">Feedback<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="Feedback" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/MDN/Feedback">Send Feedback</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://support.mozilla.org/">Get Firefox help<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://stackoverflow.com/">Get web development help<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a href="https://developer.mozilla.org/en-US/docs/MDN/Community">Join the MDN community</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/sprints/issues/new?template=issue-template.md&amp;projects=mdn/sprints/2&amp;labels=user-report&amp;title=%2Fen-US%2Fdocs%2FWeb%2FAPI%2FWebSockets_API%2FWriting_WebSocket_client_applications">Report a content problem<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/kuma/issues/new">Report an issue<!-- --> 🌐</a></li></ul></li></ul></nav><form class="header-search" id="nav-main-search" action="https://developer.mozilla.org/en-US/search" method="get" role="search"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 28" aria-hidden="true" class="search-icon"><path d="M18 13c0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7 7-3.141 7-7zm8 13c0 1.094-.906 2-2 2a1.96 1.96 0 0 1-1.406-.594l-5.359-5.344a10.971 10.971 0 0 1-6.234 1.937c-6.078 0-11-4.922-11-11s4.922-11 11-11 11 4.922 11 11c0 2.219-.672 4.406-1.937 6.234l5.359 5.359c.359.359.578.875.578 1.406z"></path></svg><label for="main-q" class="visually-hidden">Search MDN</label><input type="search" class="search-input-field" id="main-q" name="q" placeholder="Search MDN" pattern="(.|\s)*\S(.|\s)*" required=""></form><a href="https://developer.mozilla.org/users/github/login?next=/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" data-service="GitHub" rel="nofollow" class="signin-link">Sign in</a></header><main role="main"><div class="titlebar-container"><div class="titlebar"><h1 class="title">Writing WebSocket client applications</h1></div></div><div class="full-width-row-container"><div class="max-content-width-container"><nav class="breadcrumbs" role="navigation"><ol typeof="BreadcrumbList" vocab="https://schema.org/" aria-label="breadcrumbs"><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/en-US/docs/Web" class="breadcrumb-chevron" property="item" typeof="WebPage"><span property="name">Web technology for developers</span></a><meta property="position" content="1"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/en-US/docs/Web/API" class="breadcrumb-chevron" property="item" typeof="WebPage"><span property="name">Web APIs</span></a><meta property="position" content="2"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API" class="breadcrumb-chevron" property="item" typeof="WebPage"><span property="name">The WebSocket API (WebSockets)</span></a><meta property="position" content="3"></li><li property="itemListElement" typeof="ListItem"><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" class="crumb-current-page" property="item" typeof="WebPage"><span property="name" aria-current="page">Writing WebSocket client applications</span></a><meta property="position" content="4"></li></ol></nav><div class="dropdown-container"><button id="header-language-menu" type="button" class="dropdown-menu-label" aria-haspopup="true" aria-owns="language-menu" aria-label="Current language is English. Choose your preferred language.">English<span class="dropdown-arrow-down" aria-hidden="true">▼</span></button><ul id="language-menu" class="dropdown-menu-items right" role="menu"><li lang="es" role="menuitem"><a href="https://developer.mozilla.org/es/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Spanish"><bdi>Español</bdi></a></li><li lang="fr" role="menuitem"><a href="https://developer.mozilla.org/fr/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="French"><bdi>Français</bdi></a></li><li lang="hu" role="menuitem"><a href="https://developer.mozilla.org/hu/docs/WebSockets/Writing_WebSocket_client_applications" title="Hungarian"><bdi>magyar</bdi></a></li><li lang="it" role="menuitem"><a href="https://developer.mozilla.org/it/docs/WebSockets/Writing_WebSocket_client_applications" title="Italian"><bdi>Italiano</bdi></a></li><li lang="ja" role="menuitem"><a href="https://developer.mozilla.org/ja/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Japanese"><bdi>日本語</bdi></a></li><li lang="ko" role="menuitem"><a href="https://developer.mozilla.org/ko/docs/WebSockets/Writing_WebSocket_client_applications" title="Korean"><bdi>한국어</bdi></a></li><li lang="pt-BR" role="menuitem"><a href="https://developer.mozilla.org/pt-BR/docs/WebSockets/Escrevendo_aplicacoes_cliente_WebSocket" title="Portuguese (Brazilian)"><bdi>Português (do&nbsp;Brasil)</bdi></a></li><li lang="ru" role="menuitem"><a href="https://developer.mozilla.org/ru/docs/WebSockets/Writing_WebSocket_client_applications" title="Russian"><bdi>Русский</bdi></a></li><li lang="zh-CN" role="menuitem"><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" title="Chinese (Simplified)"><bdi>中文 (简体)</bdi></a></li><li lang="zh-TW" role="menuitem"><a href="https://developer.mozilla.org/zh-TW/docs/WebSockets/Writing_WebSocket_client_applications" title="Chinese (Traditional)"><bdi>正體中文 (繁體)</bdi></a></li><li><a href="https://wiki.developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications$locales" rel="nofollow" id="translations-add">Add a translation</a></li></ul></div></div></div><div class="wiki-left-present content-layout"><aside class="document-toc-container"><section class="document-toc"><header><h2>On this Page</h2></header><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Creating_a_WebSocket_object" rel="internal">Creating a WebSocket object</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Sending_data_to_the_server" rel="internal">Sending data to the server</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Receiving_messages_from_the_server" rel="internal">Receiving messages from the server</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Closing_the_connection" rel="internal">Closing the connection</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Security_considerations" rel="internal">Security considerations</a></li></ul></section></aside><div id="content" class="article text-content"><article id="wikiArticle">

<p>WebSocket client applications use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Websockets_API">WebSocket API</a> to communicate with <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers">WebSocket servers</a> using the WebSocket protocol.</p>

<div class="blockIndicator note"><strong>Note:</strong>&nbsp;This feature is available in <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API">Web Workers</a>.</div>

<div class="note">
<p><strong>Note:</strong> The example snippets in this article are taken from our WebSocket chat client/server sample. <a class="external" href="https://github.com/mdn/samples-server/tree/master/s/websocket-chat" rel="noopener">See the code</a>, then <a class="external" href="https://mdn-samples.mozilla.org/s/websocket-chat" rel="noopener">try out the example for yourself</a>.</p>
</div>

<h2 id="Creating_a_WebSocket_object">Creating a WebSocket object</h2>

<p>In order to communicate using the WebSocket protocol, you need to create a <a href="https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket" title="en/WebSockets/WebSockets reference/WebSocket"><code>WebSocket</code></a> object; this will automatically attempt to open the connection to the server.</p>

<p>The WebSocket constructor accepts one required and one optional parameter:</p>

<pre class="syntaxbox"><em>webSocket</em> = new WebSocket(<em>url</em>, <em>protocols</em>);
</pre>

<dl>
 <dt><code>url</code></dt>
 <dd>The URL&nbsp;to which to connect; this should be the URL&nbsp;to which the WebSocket server will respond. This should use the URL scheme <code>wss://</code>, although some software may allow you to use the insecure <code>ws://</code> for local connections.</dd>
 <dt><code>protocols</code> <span class="inlineIndicator optional optionalInline">Optional</span></dt>
 <dd>Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified <code>protocol</code>). If you don't specify a protocol string, an empty string is assumed.</dd>
</dl>

<p>The constructor will throw a <code>SecurityError</code> if the destination doesn't allow access. This may happen if you attempt to use an insecure connection (most <a class="glossaryLink" href="https://developer.mozilla.org/en-US/docs/Glossary/user_agent" title="user agents: A user agent is a computer program representing a person, for example, a browser in a Web context.">user agents</a> now require a secure link for all WebSocket connections unless they're on the same device or possibly on the same network).</p>

<dl>
</dl>

<h3 id="Connection_errors">Connection errors</h3>

<p>If an error occurs while attempting to connect, first a simple event with the name <code>error</code> is sent to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket" title="The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection."><code>WebSocket</code></a> object (thereby invoking its <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/onerror" title="The WebSocket interface&#39;s onerror event handler property is a function which gets called when an error occurs on the WebSocket."><code>onerror</code></a> handler), and then the <a href="https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent" title="A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object&#39;s onclose attribute."><code>CloseEvent</code></a> is sent to the <code>WebSocket</code> object (thereby invoking its <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/onclose" title="The WebSocket.onclose property is an EventHandler that is called when the WebSocket connection&#39;s readyState changes to CLOSED. It is called with a CloseEvent."><code>onclose</code></a> handler) to indicate the reason for the connection's closing.</p>

<p>The browser may also output to its console a more descriptive error message as well as a closing code as defined in <a class="external" href="http://tools.ietf.org/html/rfc6455#section-7.4" rel="noopener" title="RFC 6455 Section 7.4">RFC 6455, Section 7.4</a> through the <a href="https://developer.mozilla.org/en/WebSockets/WebSockets_reference/CloseEvent" title="CloseEvent"><code>CloseEvent</code></a>.</p>

<h3 id="Examples">Examples</h3>

<p>This simple example creates a new WebSocket, connecting to the server at <code><span class="nowiki">wss://www.example.com/socketserver</span></code>. A custom protocol of "protocolOne" is named in the request for the socket in this example, though this can be omitted.</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js"><span class="token keyword">var</span> exampleSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"wss://www.example.com/socketserver"</span><span class="token punctuation">,</span> <span class="token string">"protocolOne"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>On return, <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/readyState" title="The WebSocket.readyState read-only property returns the current state of the WebSocket connection."><code>exampleSocket.readyState</code></a> is <code>CONNECTING</code>. The <code>readyState</code> will become <code>OPEN</code>&nbsp;once the connection is ready to transfer data.</p>

<p>If you want to open a connection and are flexible about the protocols you support, you can specify an array of protocols:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js"><span class="token keyword">var</span> exampleSocket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"wss://www.example.com/socketserver"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"protocolOne"</span><span class="token punctuation">,</span> <span class="token string">"protocolTwo"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Once the connection is established (that is, <code>readyState</code> is <code>OPEN</code>), <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/protocol" title="The WebSocket.protocol read-only property returns the name of the sub-protocol the server selected; this will be one of the strings specified in the protocols parameter when creating the WebSocket object, or the empty string if no connection is established."><code>exampleSocket.protocol</code></a> will tell you which protocol the server selected.</p>

<p>Establishing a WebSocket relies on the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism">HTTP Upgrade mechanism</a>, so the request for the protocol upgrade is implicit when we address the web server as <code><span class="nowiki">ws://www.example.com</span></code> or <code><span class="nowiki">wss://www.example.com</span></code>.</p>

<h2 id="Sending_data_to_the_server">Sending data to the server</h2>

<p>Once you've opened your connection, you can begin transmitting data to the server. To do this, simply call the <code>WebSocket</code> object's <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send" title="The WebSocket.send() method enqueues the specified data to be transmitted to the server over the WebSocket connection, increasing the value of bufferedAmount by the number of bytes needed to contain the data. If the data can&#39;t be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically."><code>send()</code></a> method for each message you want to send:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js">exampleSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Here's some text that the server is urgently awaiting!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>You can send data as a string, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" title="A Blob object represents a file-like object of immutable, raw data. Blobs represent data that isn&#39;t necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user&#39;s system."><code>Blob</code></a>, or <a href="https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer" title="The documentation about this has not yet been written; please consider contributing!"><code>ArrayBuffer</code></a>.</p>

<p>As establishing a connection is asynchronous and prone to failure there is no guarantee that calling the <code>send()</code> method immediately after creating a WebSocket object will be successful. We can at least be sure that attempting to send data only takes place once a connection is established by defining an <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/onopen" title="The WebSocket.onopen property is an EventHandler that is called when the WebSocket connection&#39;s readyState changes to OPEN; this indicates that the connection is ready to send and receive data. It is called with an Event."><code>onopen</code></a> event handler to do the work:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js">exampleSocket<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  exampleSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"Here's some text that the server is urgently awaiting!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="Using_JSON_to_transmit_objects">Using JSON to transmit objects</h3>

<p>One handy thing you can do is use <a href="https://developer.mozilla.org/en/JSON" title="en/JSON">JSON</a>&nbsp;to send reasonably complex data to the server. For example, a chat program can interact with a server using a protocol implemented using packets of JSON-encapsulated data:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js"><span class="token comment">// Send text to all users through the server</span>
<span class="token keyword">function</span> <span class="token function">sendText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Construct a msg object containing the data the server needs to process the message from the chat client.</span>
  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token punctuation">{</span>
    type<span class="token punctuation">:</span> <span class="token string">"message"</span><span class="token punctuation">,</span>
    text<span class="token punctuation">:</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    id<span class="token punctuation">:</span>   clientID<span class="token punctuation">,</span>
    date<span class="token punctuation">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// Send the msg object as a JSON-formatted string.</span>
  exampleSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// Blank the text input element, ready to receive the next line of text from the user.</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Receiving_messages_from_the_server">Receiving messages from the server</h2>

<p>WebSockets is an event-driven API; when messages are received, a <code>message</code> event is sent to the <code>WebSocket</code> object. To handle it, add an event listener for the <code>message</code> event, or use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/onmessage" title="The WebSocket.onmessage property is an EventHandler that is called when a message is received from the server. It is called with a MessageEvent."><code>onmessage</code></a> event handler. To begin listening for incoming data, you can do something like this:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js">exampleSocket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="Receiving_and_interpreting_JSON_objects">Receiving and interpreting JSON objects</h3>

<p>Let's consider the chat client application first alluded to in <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications#Using_JSON_to_transmit_objects">Using JSON to transmit objects</a>. There are assorted types of data packets the client might receive, such as:</p>

<ul>
 <li>Login handshake</li>
 <li>Message text</li>
 <li>User list updates</li>
</ul>

<p>The code that interprets these incoming messages might look like this:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js">exampleSocket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> f <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"chatbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentDocument<span class="token punctuation">;</span>
  <span class="token keyword">var</span> text <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> timeStr <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">switch</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">"id"</span><span class="token punctuation">:</span>
      clientID <span class="token operator">=</span> msg<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
      <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">"username"</span><span class="token punctuation">:</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b&gt;User &lt;em&gt;"</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"&lt;/em&gt; signed in at "</span> <span class="token operator">+</span> timeStr <span class="token operator">+</span> <span class="token string">"&lt;/b&gt;&lt;br&gt;"</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">"message"</span><span class="token punctuation">:</span>
      text <span class="token operator">=</span> <span class="token string">"("</span> <span class="token operator">+</span> timeStr <span class="token operator">+</span> <span class="token string">") &lt;b&gt;"</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"&lt;/b&gt;: "</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">"&lt;br&gt;"</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">"rejectusername"</span><span class="token punctuation">:</span>
      text <span class="token operator">=</span> <span class="token string">"&lt;b&gt;Your username has been set to &lt;em&gt;"</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"&lt;/em&gt; because the name you chose is in use.&lt;/b&gt;&lt;br&gt;"</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">"userlist"</span><span class="token punctuation">:</span>
      <span class="token keyword">var</span> ul <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> msg<span class="token punctuation">.</span>users<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ul <span class="token operator">+=</span> msg<span class="token punctuation">.</span>users<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&lt;br&gt;"</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"userlistbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> ul<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">if</span> <span class="token punctuation">(</span>text<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"chatbox"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span><span class="token function">scrollByPages</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Here we use <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/parse" title="en/JavaScript/Reference/Global Objects/JSON/parse"><code>JSON.parse()</code></a>&nbsp;to convert the JSON&nbsp;object back into the original object, then examine and act upon its contents.</p>

<h3 id="Text_data_format">Text data format</h3>

<p>Text received over a WebSocket connection is in UTF-8 format.</p>

<h2 id="Closing_the_connection">Closing the connection</h2>

<p>When you've finished using the WebSocket connection, call the WebSocket method <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close" title="The WebSocket.close() method closes the WebSocket connection or connection attempt, if any. If the connection is already CLOSED, this method does nothing."><code>close()</code></a>:</p>

<pre class="brush: js line-numbers  language-js"><code class="  language-js">exampleSocket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>It may be helpful to examine the socket's <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/bufferedAmount" title="The WebSocket.bufferedAmount read-only property returns the number of bytes of data that have been queued using calls to send() but not yet transmitted to the network. This value resets to zero once all queued data has been sent. This value does not reset to zero when the connection is closed; if you keep calling send(), this will continue to climb."><code>bufferedAmount</code></a> attribute before attempting to close the connection to determine if any data has yet to be transmitted on the network. If this value isn't 0, there's pending data still, so you may wish to wait before closing the connection.</p>

<h2 id="Security_considerations">Security considerations</h2>

<p>WebSockets should not be used in a mixed content environment; that is, you shouldn't open a non-secure WebSocket connection from a page loaded using HTTPS or vice-versa. Most browsers now only allow secure WebSocket connections, and no longer support using them in insecure contexts.</p></article><div class="metadata"><section class="document-meta"><header class="visually-hidden"><h4>Metadata</h4></header> <ul><li class="last-modified"><b>Last modified:</b> <time datetime="2019-08-19T22:57:55.941248">Aug 19, 2019</time>,<!-- --> <a href="https://wiki.developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications$history" rel="nofollow">by MDN contributors</a></li></ul></section></div></div><div class="sidebar"><div class="quick-links"><div class="quick-links-head sidebar-heading">Related Topics</div><div><ol><li><strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/Websockets_API">Websockets API</a></strong></li><li><strong><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API"><code>WebSockets_API</code></a></strong></li><li class="toggle"><details open=""><summary>Related pages for Websockets API</summary><ol><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent"><code>CloseEvent</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent"><code>MessageEvent</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket"><code>WebSocket</code></a></li></ol></details></li></ol></div></div></div></div></main><section class="newsletter-container"><div id="newsletter-form-container" class="newsletter"><form class="newsletter-form nodisable" name="newsletter-form"><section class="newsletter-head"><h2 class="newsletter-teaser">Learn the best of web development</h2><p class="newsletter-description">Get the latest and greatest from MDN delivered straight to your inbox.</p><p class="hidden" aria-hidden="true">The newsletter is offered in English only at the moment.</p></section><fieldset class="newsletter-fields"><input type="hidden" name="fmt" value="H"><input type="hidden" name="newsletters" value="app-dev"><div class="form-group newsletter-group-email"><label for="newsletter-email-input" class="form-label offscreen">E-mail</label><input type="email" id="newsletter-email-input" name="email" class="form-input newsletter-input-email" placeholder="you@example.com" required=""></div><div id="newsletter-privacy" class="hidden" aria-hidden="true"><input type="checkbox" id="newsletter-privacy-input" name="privacy" required=""><label for="newsletter-privacy-input">I’m okay with Mozilla handling my info as explained in this <a href="https://www.mozilla.org/privacy/">Privacy Policy</a>.</label></div><div class="newsletter-group-submit"><button id="newsletter-submit" type="submit" class="button neutral newsletter-submit">Sign up now</button></div></fieldset></form><button type="button" class="only-icon newsletter-hide" aria-controls="newsletter-form-container"><span>Hide Newsletter Sign-up</span><svg class="icon icon-close" xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 28"><path d="M20.281 20.656c0 .391-.156.781-.438 1.062l-2.125 2.125c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438L11 19.249l-4.594 4.594c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438l-2.125-2.125c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062L6.751 15l-4.594-4.594c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062l2.125-2.125c.281-.281.672-.438 1.062-.438s.781.156 1.062.438L11 10.751l4.594-4.594c.281-.281.672-.438 1.062-.438s.781.156 1.062.438l2.125 2.125c.281.281.438.672.438 1.062s-.156.781-.438 1.062L15.249 15l4.594 4.594c.281.281.438.672.438 1.062z"></path></svg></button></div></section><footer id="nav-footer" class="nav-footer"><div class="center"><a href="https://developer.mozilla.org/en-US/" class="nav-footer-logo">MDN Web Docs</a><div class="footer-group footer-group-mdn"><h2 class="footer-title">MDN</h2><ul class="footer-list"><li><a href="https://developer.mozilla.org/en-US/docs/Web">Web Technologies</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Learn">Learn Web Development</a></li><li><a href="https://developer.mozilla.org/en-US/docs/MDN/About">About MDN</a></li><li><a href="https://developer.mozilla.org/en-US/docs/MDN/Feedback">Feedback</a></li><li class="footer-social"><a href="https://twitter.com/mozdevnet"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" width="26" height="28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 0 1-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 0 1-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 0 1-4.047-4.953v-.063a5.093 5.093 0 0 0 2.281.641 5.044 5.044 0 0 1-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0 0 10.406 5.281 5.708 5.708 0 0 1-.125-1.156 5.045 5.045 0 0 1 5.047-5.047 5.03 5.03 0 0 1 3.687 1.594 9.943 9.943 0 0 0 3.203-1.219 5.032 5.032 0 0 1-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li class="footer-social"><a href="https://github.com/mdn/"><svg class="icon icon-github" xmlns="http://www.w3.org/2000/svg" width="24" height="28" aria-label="GitHub" role="img" focusable="false"><path d="M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-.609.109-.828-.266-.828-.578 0-.391.016-1.687.016-3.297 0-1.125-.375-1.844-.812-2.219 2.672-.297 5.484-1.313 5.484-5.922 0-1.313-.469-2.375-1.234-3.219.125-.313.531-1.531-.125-3.187-1-.313-3.297 1.234-3.297 1.234a11.28 11.28 0 0 0-6 0S6.704 6.656 5.704 6.969c-.656 1.656-.25 2.875-.125 3.187-.766.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-.344.313-.656.844-.766 1.609-.688.313-2.438.844-3.484-1-.656-1.141-1.844-1.234-1.844-1.234-1.172-.016-.078.734-.078.734.781.359 1.328 1.75 1.328 1.75.703 2.141 4.047 1.422 4.047 1.422 0 1 .016 1.937.016 2.234 0 .313-.219.688-.828.578C3.439 23.796.002 19.296.002 13.999c0-6.625 5.375-12 12-12zM4.547 19.234c.031-.063-.016-.141-.109-.187-.094-.031-.172-.016-.203.031-.031.063.016.141.109.187.078.047.172.031.203-.031zm.484.532c.063-.047.047-.156-.031-.25-.078-.078-.187-.109-.25-.047-.063.047-.047.156.031.25.078.078.187.109.25.047zm.469.703c.078-.063.078-.187 0-.297-.063-.109-.187-.156-.266-.094-.078.047-.078.172 0 .281s.203.156.266.109zm.656.656c.063-.063.031-.203-.063-.297-.109-.109-.25-.125-.313-.047-.078.063-.047.203.063.297.109.109.25.125.313.047zm.891.391c.031-.094-.063-.203-.203-.25-.125-.031-.266.016-.297.109s.063.203.203.234c.125.047.266 0 .297-.094zm.984.078c0-.109-.125-.187-.266-.172-.141 0-.25.078-.25.172 0 .109.109.187.266.172.141 0 .25-.078.25-.172zm.906-.156c-.016-.094-.141-.156-.281-.141-.141.031-.234.125-.219.234.016.094.141.156.281.125s.234-.125.219-.219z"></path></svg></a></li></ul></div><a href="https://mozilla.org/" class="nav-footer-mozilla">Mozilla</a><div class="footer-group footer-group-mozilla"><h2 class="footer-title">Mozilla</h2><ul class="footer-list"><li><a href="https://www.mozilla.org/about/">About</a></li><li><a href="https://www.mozilla.org/contact/">Contact Us</a></li><li><a href="https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&amp;utm_campaign=footer&amp;utm_medium=referral">Firefox</a></li><li class="footer-social"><a href="https://twitter.com/mozilla"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" width="26" height="28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 0 1-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 0 1-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 0 1-4.047-4.953v-.063a5.093 5.093 0 0 0 2.281.641 5.044 5.044 0 0 1-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0 0 10.406 5.281 5.708 5.708 0 0 1-.125-1.156 5.045 5.045 0 0 1 5.047-5.047 5.03 5.03 0 0 1 3.687 1.594 9.943 9.943 0 0 0 3.203-1.219 5.032 5.032 0 0 1-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li class="footer-social"><a href="https://www.instagram.com/mozillagram/"><svg class="icon icon-instagram" xmlns="http://www.w3.org/2000/svg" width="24" height="28" aria-label="Instagram" role="img" focusable="false"><path d="M16 14c0-2.203-1.797-4-4-4s-4 1.797-4 4 1.797 4 4 4 4-1.797 4-4zm2.156 0c0 3.406-2.75 6.156-6.156 6.156S5.844 17.406 5.844 14 8.594 7.844 12 7.844s6.156 2.75 6.156 6.156zm1.688-6.406c0 .797-.641 1.437-1.437 1.437S16.97 8.39 16.97 7.594s.641-1.437 1.437-1.437 1.437.641 1.437 1.437zM12 4.156c-1.75 0-5.5-.141-7.078.484-.547.219-.953.484-1.375.906s-.688.828-.906 1.375c-.625 1.578-.484 5.328-.484 7.078s-.141 5.5.484 7.078c.219.547.484.953.906 1.375s.828.688 1.375.906c1.578.625 5.328.484 7.078.484s5.5.141 7.078-.484c.547-.219.953-.484 1.375-.906s.688-.828.906-1.375c.625-1.578.484-5.328.484-7.078s.141-5.5-.484-7.078c-.219-.547-.484-.953-.906-1.375s-.828-.688-1.375-.906C17.5 4.015 13.75 4.156 12 4.156zM24 14c0 1.656.016 3.297-.078 4.953-.094 1.922-.531 3.625-1.937 5.031s-3.109 1.844-5.031 1.937c-1.656.094-3.297.078-4.953.078s-3.297.016-4.953-.078c-1.922-.094-3.625-.531-5.031-1.937S.173 20.875.08 18.953C-.014 17.297.002 15.656.002 14s-.016-3.297.078-4.953c.094-1.922.531-3.625 1.937-5.031s3.109-1.844 5.031-1.937c1.656-.094 3.297-.078 4.953-.078s3.297-.016 4.953.078c1.922.094 3.625.531 5.031 1.937s1.844 3.109 1.937 5.031C24.016 10.703 24 12.344 24 14z"></path></svg></a></li></ul></div><ul class="footer-tos"><li><a href="https://www.mozilla.org/about/legal/terms/mozilla">Terms</a></li><li><a href="https://www.mozilla.org/privacy/websites/">Privacy</a></li><li><a href="https://www.mozilla.org/privacy/websites/#cookies">Cookies</a></li></ul><div id="license" class="contentinfo"><p>© 2005-<!-- -->2020<!-- --> Mozilla and individual contributors.</p><p>Content is available under<!-- --> <a href="https://developer.mozilla.org/docs/MDN/About#Copyrights_and_licenses">these licenses</a>.</p></div></div></footer></div>
<script>window._react_data = JSON.parse("{\"locale\":\"en-US\",\"stringCatalog\":{},\"pluralExpression\":null,\"url\":\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"documentData\":{\"locale\":\"en-US\",\"slug\":\"Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"enSlug\":\"Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"id\":27,\"title\":\"Writing WebSocket client applications\",\"summary\":\"WebSocket client applications use the <a href=\\\"/en-US/docs/Web/API/Websockets_API\\\">WebSocket API</a> to communicate with <a href=\\\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\\\">WebSocket servers</a> using the WebSocket protocol.\",\"language\":\"English (US)\",\"hrefLang\":\"en\",\"absoluteURL\":\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"wikiURL\":\"https://wiki.developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"translateURL\":\"https://wiki.developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications$locales\",\"translationStatus\":null,\"bodyHTML\":\"\\n\\n<p>WebSocket client applications use the <a href=\\\"/en-US/docs/Web/API/Websockets_API\\\">WebSocket API</a> to communicate with <a href=\\\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\\\">WebSocket servers</a> using the WebSocket protocol.</p>\\n\\n<div class=\\\"blockIndicator note\\\"><strong>Note:</strong>\u00A0This feature is available in <a href=\\\"/en-US/docs/Web/API/Web_Workers_API\\\">Web Workers</a>.</div>\\n\\n<div class=\\\"note\\\">\\n<p><strong>Note:</strong> The example snippets in this article are taken from our WebSocket chat client/server sample. <a class=\\\"external\\\" href=\\\"https://github.com/mdn/samples-server/tree/master/s/websocket-chat\\\" rel=\\\"noopener\\\">See the code</a>, then <a class=\\\"external\\\" href=\\\"https://mdn-samples.mozilla.org/s/websocket-chat\\\" rel=\\\"noopener\\\">try out the example for yourself</a>.</p>\\n</div>\\n\\n<h2 id=\\\"Creating_a_WebSocket_object\\\">Creating a WebSocket object</h2>\\n\\n<p>In order to communicate using the WebSocket protocol, you need to create a <a href=\\\"/en/WebSockets/WebSockets_reference/WebSocket\\\" title=\\\"en/WebSockets/WebSockets reference/WebSocket\\\"><code>WebSocket</code></a> object; this will automatically attempt to open the connection to the server.</p>\\n\\n<p>The WebSocket constructor accepts one required and one optional parameter:</p>\\n\\n<pre class=\\\"syntaxbox\\\"><em>webSocket</em> = new WebSocket(<em>url</em>, <em>protocols</em>);\\n</pre>\\n\\n<dl>\\n <dt><code>url</code></dt>\\n <dd>The URL\u00A0to which to connect; this should be the URL\u00A0to which the WebSocket server will respond. This should use the URL scheme <code>wss://</code>, although some software may allow you to use the insecure <code>ws://</code> for local connections.</dd>\\n <dt><code>protocols</code> <span class=\\\"inlineIndicator optional optionalInline\\\">Optional</span></dt>\\n <dd>Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified <code>protocol</code>). If you don't specify a protocol string, an empty string is assumed.</dd>\\n</dl>\\n\\n<p>The constructor will throw a <code>SecurityError</code> if the destination doesn't allow access. This may happen if you attempt to use an insecure connection (most <a class=\\\"glossaryLink\\\" href=\\\"/en-US/docs/Glossary/user_agent\\\" title=\\\"user agents: A user agent is a computer program representing a person, for example, a browser in a Web context.\\\">user agents</a> now require a secure link for all WebSocket connections unless they're on the same device or possibly on the same network).</p>\\n\\n<dl>\\n</dl>\\n\\n<h3 id=\\\"Connection_errors\\\">Connection errors</h3>\\n\\n<p>If an error occurs while attempting to connect, first a simple event with the name <code>error</code> is sent to the <a href=\\\"/en-US/docs/Web/API/WebSocket\\\" title=\\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"><code>WebSocket</code></a> object (thereby invoking its <a href=\\\"/en-US/docs/Web/API/WebSocket/onerror\\\" title=\\\"The WebSocket interface's onerror event handler property is a function which gets called when\u00A0an error occurs on the WebSocket.\\\"><code>onerror</code></a> handler), and then the <a href=\\\"/en-US/docs/Web/API/CloseEvent\\\" title=\\\"A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute.\\\"><code>CloseEvent</code></a> is sent to the <code>WebSocket</code> object (thereby invoking its <a href=\\\"/en-US/docs/Web/API/WebSocket/onclose\\\" title=\\\"The WebSocket.onclose property is an\u00A0EventHandler that is called\u00A0when the WebSocket connection's readyState changes to\u00A0CLOSED.\u00A0It is\u00A0called with\u00A0a CloseEvent.\\\"><code>onclose</code></a> handler) to indicate the reason for the connection's closing.</p>\\n\\n<p>The browser may also output to its console a more descriptive error message as well as a closing code as defined in <a class=\\\"external\\\" href=\\\"http://tools.ietf.org/html/rfc6455#section-7.4\\\" rel=\\\"noopener\\\" title=\\\"RFC 6455 Section 7.4\\\">RFC 6455, Section 7.4</a> through the <a href=\\\"/en/WebSockets/WebSockets_reference/CloseEvent\\\" title=\\\"CloseEvent\\\"><code>CloseEvent</code></a>.</p>\\n\\n<h3 id=\\\"Examples\\\">Examples</h3>\\n\\n<p>This simple example creates a new WebSocket, connecting to the server at <code><span class=\\\"nowiki\\\">wss://www.example.com/socketserver</span></code>. A custom protocol of \\\"protocolOne\\\" is named in the request for the socket in this example, though this can be omitted.</p>\\n\\n<pre class=\\\"brush: js\\\">var exampleSocket = new WebSocket(\\\"wss://www.example.com/socketserver\\\", \\\"protocolOne\\\");\\n</pre>\\n\\n<p>On return, <a href=\\\"/en-US/docs/Web/API/WebSocket/readyState\\\" title=\\\"The WebSocket.readyState read-only property returns the current state of the WebSocket connection.\\\"><code>exampleSocket.readyState</code></a> is <code>CONNECTING</code>. The <code>readyState</code> will become <code>OPEN</code>\u00A0once the connection is ready to transfer data.</p>\\n\\n<p>If you want to open a connection and are flexible about the protocols you support, you can specify an array of protocols:</p>\\n\\n<pre class=\\\"brush: js\\\">var exampleSocket = new WebSocket(\\\"wss://www.example.com/socketserver\\\", [\\\"protocolOne\\\", \\\"protocolTwo\\\"]);\\n</pre>\\n\\n<p>Once the connection is established (that is, <code>readyState</code> is <code>OPEN</code>), <a href=\\\"/en-US/docs/Web/API/WebSocket/protocol\\\" title=\\\"The WebSocket.protocol read-only property returns the name of the sub-protocol the server selected; this will be one of the strings specified in the protocols parameter when creating the WebSocket object, or the empty string if no connection is established.\\\"><code>exampleSocket.protocol</code></a> will tell you which protocol the server selected.</p>\\n\\n<p>Establishing a WebSocket relies on the <a href=\\\"/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\\\">HTTP Upgrade mechanism</a>, so the request for the protocol upgrade is implicit when we address the web server as <code><span class=\\\"nowiki\\\">ws://www.example.com</span></code> or <code><span class=\\\"nowiki\\\">wss://www.example.com</span></code>.</p>\\n\\n<h2 id=\\\"Sending_data_to_the_server\\\">Sending data to the server</h2>\\n\\n<p>Once you've opened your connection, you can begin transmitting data to the server. To do this, simply call the <code>WebSocket</code> object's <a href=\\\"/en-US/docs/Web/API/WebSocket/send\\\" title=\\\"The WebSocket.send() method enqueues the specified data to be transmitted to the server over the WebSocket connection, increasing the value of bufferedAmount by the number of bytes needed to contain the data. If the data can't be sent (for example, because it needs to be buffered but the buffer is full), the socket is closed automatically.\\\"><code>send()</code></a> method for each message you want to send:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.send(\\\"Here's some text that the server is urgently awaiting!\\\"); \\n</pre>\\n\\n<p>You can send data as a string, <a href=\\\"/en-US/docs/Web/API/Blob\\\" title=\\\"A Blob object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\\\"><code>Blob</code></a>, or <a href=\\\"/en-US/docs/Web/API/ArrayBuffer\\\" title=\\\"The documentation about this has not yet been written; please consider contributing!\\\"><code>ArrayBuffer</code></a>.</p>\\n\\n<p>As establishing a connection is asynchronous and prone to failure there is no guarantee that calling the <code>send()</code> method immediately after creating a WebSocket object will be successful. We can at least be sure that attempting to send data only takes place once a connection is established by defining an <a href=\\\"/en-US/docs/Web/API/WebSocket/onopen\\\" title=\\\"The WebSocket.onopen property is an EventHandler that is called when the WebSocket connection's readyState changes to\u00A0OPEN;\u00A0this indicates that the connection is ready to send and receive data. It is\u00A0called with\u00A0an Event.\\\"><code>onopen</code></a> event handler to do the work:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onopen = function (event) {\\n\u00A0 exampleSocket.send(\\\"Here's some text that the server is urgently awaiting!\\\"); \\n};\\n</pre>\\n\\n<h3 id=\\\"Using_JSON_to_transmit_objects\\\">Using JSON to transmit objects</h3>\\n\\n<p>One handy thing you can do is use <a href=\\\"/en/JSON\\\" title=\\\"en/JSON\\\">JSON</a>\u00A0to send reasonably complex data to the server. For example, a chat program can interact with a server using a protocol implemented using packets of JSON-encapsulated data:</p>\\n\\n<pre class=\\\"brush: js\\\">// Send text to all users through the server\\nfunction sendText() {\\n  // Construct a msg object containing the data the server needs to process the message from the chat client.\\n\u00A0 var msg = {\\n\u00A0\u00A0\u00A0 type: \\\"message\\\",\\n\u00A0\u00A0\u00A0 text: document.getElementById(\\\"text\\\").value,\\n\u00A0\u00A0\u00A0 id:   clientID,\\n\u00A0\u00A0\u00A0 date: Date.now()\\n\u00A0 };\\n\\n\u00A0 // Send the msg object as a JSON-formatted string.\\n\u00A0 exampleSocket.send(JSON.stringify(msg));\\n\u00A0 \\n\u00A0 // Blank the text input element, ready to receive the next line of text from the user.\\n\u00A0 document.getElementById(\\\"text\\\").value = \\\"\\\";\\n} \\n</pre>\\n\\n<h2 id=\\\"Receiving_messages_from_the_server\\\">Receiving messages from the server</h2>\\n\\n<p>WebSockets is an event-driven API; when messages are received, a <code>message</code> event is sent to the <code>WebSocket</code> object. To handle it, add an event listener for the <code>message</code> event, or use the <a href=\\\"/en-US/docs/Web/API/WebSocket/onmessage\\\" title=\\\"The WebSocket.onmessage property is an EventHandler that is called when a message is received from the server. It is called with a MessageEvent.\\\"><code>onmessage</code></a> event handler. To begin listening for incoming data, you can do something like this:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onmessage = function (event)\u00A0{\\n\u00A0 console.log(event.data);\\n}\\n</pre>\\n\\n<h3 id=\\\"Receiving_and_interpreting_JSON_objects\\\">Receiving and interpreting JSON objects</h3>\\n\\n<p>Let's consider the chat client application first alluded to in <a href=\\\"#Using_JSON_to_transmit_objects\\\">Using JSON to transmit objects</a>. There are assorted types of data packets the client might receive, such as:</p>\\n\\n<ul>\\n <li>Login handshake</li>\\n <li>Message text</li>\\n <li>User list updates</li>\\n</ul>\\n\\n<p>The code that interprets these incoming messages might look like this:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onmessage = function(event) {\\n  var f = document.getElementById(\\\"chatbox\\\").contentDocument;\\n  var text = \\\"\\\";\\n  var msg = JSON.parse(event.data);\\n  var time = new Date(msg.date);\\n  var timeStr = time.toLocaleTimeString();\\n  \\n  switch(msg.type) {\\n    case \\\"id\\\":\\n      clientID = msg.id;\\n      setUsername();\\n      break;\\n    case \\\"username\\\":\\n      text = \\\"&lt;b&gt;User &lt;em&gt;\\\" + msg.name + \\\"&lt;/em&gt; signed in at \\\" + timeStr + \\\"&lt;/b&gt;&lt;br&gt;\\\";\\n      break;\\n    case \\\"message\\\":\\n      text = \\\"(\\\" + timeStr + \\\") &lt;b&gt;\\\" + msg.name + \\\"&lt;/b&gt;: \\\" + msg.text + \\\"&lt;br&gt;\\\";\\n      break;\\n    case \\\"rejectusername\\\":\\n      text = \\\"&lt;b&gt;Your username has been set to &lt;em&gt;\\\" + msg.name + \\\"&lt;/em&gt; because the name you chose is in use.&lt;/b&gt;&lt;br&gt;\\\"\\n      break;\\n    case \\\"userlist\\\":\\n      var ul = \\\"\\\";\\n      for (i=0; i &lt; msg.users.length; i++) {\\n        ul += msg.users[i] + \\\"&lt;br&gt;\\\";\\n      }\\n      document.getElementById(\\\"userlistbox\\\").innerHTML = ul;\\n      break;\\n  }\\n  \\n  if (text.length) {\\n    f.write(text);\\n    document.getElementById(\\\"chatbox\\\").contentWindow.scrollByPages(1);\\n  }\\n};\\n</pre>\\n\\n<p>Here we use <a href=\\\"/en/JavaScript/Reference/Global_Objects/JSON/parse\\\" title=\\\"en/JavaScript/Reference/Global Objects/JSON/parse\\\"><code>JSON.parse()</code></a>\u00A0to convert the JSON\u00A0object back into the original object, then examine and act upon its contents.</p>\\n\\n<h3 id=\\\"Text_data_format\\\">Text data format</h3>\\n\\n<p>Text received over a WebSocket connection is in UTF-8 format.</p>\\n\\n<h2 id=\\\"Closing_the_connection\\\">Closing the connection</h2>\\n\\n<p>When you've finished using the WebSocket connection, call the WebSocket method <a href=\\\"/en-US/docs/Web/API/WebSocket/close\\\" title=\\\"The WebSocket.close() method closes the WebSocket connection or connection attempt, if any. If the connection is already CLOSED, this method does nothing.\\\"><code>close()</code></a>:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.close();\\n</pre>\\n\\n<p>It may be helpful to examine the socket's <a href=\\\"/en-US/docs/Web/API/WebSocket/bufferedAmount\\\" title=\\\"The WebSocket.bufferedAmount read-only property returns the number of bytes of data that have been queued using calls to send() but not yet transmitted to the network. This value resets to zero once all queued data has been sent. This value does not reset to zero when the connection is closed; if you keep calling send(), this will continue to climb.\\\"><code>bufferedAmount</code></a> attribute before attempting to close the connection to determine if any data has yet to be transmitted on the network. If this value isn't 0, there's pending data still, so you may wish to wait before closing the connection.</p>\\n\\n<h2 id=\\\"Security_considerations\\\">Security considerations</h2>\\n\\n<p>WebSockets should not be used in a mixed content environment; that is, you shouldn't open a non-secure WebSocket connection from a page loaded using HTTPS or vice-versa. Most browsers now only allow secure WebSocket connections, and no longer support using them in insecure contexts.</p>\",\"quickLinksHTML\":\"<ol><li><strong><a href=\\\"/en-US/docs/Web/API/Websockets_API\\\">Websockets API</a></strong></li><li><strong><a href=\\\"/en-US/docs/Web/API/WebSockets_API\\\"><code>WebSockets_API</code></a></strong></li><li class=\\\"toggle\\\"><details open><summary>Related pages for Websockets API</summary><ol><li><a href=\\\"/en-US/docs/Web/API/CloseEvent\\\"><code>CloseEvent</code></a></li><li><a href=\\\"/en-US/docs/Web/API/MessageEvent\\\"><code>MessageEvent</code></a></li><li><a href=\\\"/en-US/docs/Web/API/WebSocket\\\"><code>WebSocket</code></a></li></ol></details></li></ol>\",\"tocHTML\":\"<li><a href=\\\"#Creating_a_WebSocket_object\\\" rel=\\\"internal\\\">Creating a WebSocket object</a><li><a href=\\\"#Sending_data_to_the_server\\\" rel=\\\"internal\\\">Sending data to the server</a><li><a href=\\\"#Receiving_messages_from_the_server\\\" rel=\\\"internal\\\">Receiving messages from the server</a><li><a href=\\\"#Closing_the_connection\\\" rel=\\\"internal\\\">Closing the connection</a><li><a href=\\\"#Security_considerations\\\" rel=\\\"internal\\\">Security considerations</a>\",\"raw\":\"<p>{{APIRef(\\\"Websockets API\\\")}}</p>\\n\\n<p>WebSocket client applications use the <a href=\\\"/en-US/docs/Web/API/Websockets_API\\\">WebSocket API</a> to communicate with <a href=\\\"/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers\\\">WebSocket servers</a> using the WebSocket protocol.</p>\\n\\n<p>{{AvailableInWorkers}}</p>\\n\\n<div class=\\\"note\\\">\\n<p><strong>Note:</strong> The example snippets in this article are taken from our WebSocket chat client/server sample. <a href=\\\"https://github.com/mdn/samples-server/tree/master/s/websocket-chat\\\">See the code</a>, then <a href=\\\"https://mdn-samples.mozilla.org/s/websocket-chat\\\">try out the example for yourself</a>.</p>\\n</div>\\n\\n<h2 id=\\\"Creating_a_WebSocket_object\\\">Creating a WebSocket object</h2>\\n\\n<p>In order to communicate using the WebSocket protocol, you need to create a <a href=\\\"/en/WebSockets/WebSockets_reference/WebSocket\\\" title=\\\"en/WebSockets/WebSockets reference/WebSocket\\\"><code>WebSocket</code></a> object; this will automatically attempt to open the connection to the server.</p>\\n\\n<p>The WebSocket constructor accepts one required and one optional parameter:</p>\\n\\n<pre class=\\\"syntaxbox\\\"><em>webSocket</em> = new WebSocket(<em>url</em>, <em>protocols</em>);\\n</pre>\\n\\n<dl>\\n <dt><code>url</code></dt>\\n <dd>The URL\u00A0to which to connect; this should be the URL\u00A0to which the WebSocket server will respond. This should use the URL scheme <code>wss://</code>, although some software may allow you to use the insecure <code>ws://</code> for local connections.</dd>\\n <dt><code>protocols</code> {{ optional_inline() }}</dt>\\n <dd>Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified <code>protocol</code>). If you don't specify a protocol string, an empty string is assumed.</dd>\\n</dl>\\n\\n<p>The constructor will throw a <code>SecurityError</code> if the destination doesn't allow access. This may happen if you attempt to use an insecure connection (most {{Glossary(\\\"user agent\\\", \\\"user agents\\\")}} now require a secure link for all WebSocket connections unless they're on the same device or possibly on the same network).</p>\\n\\n<dl>\\n</dl>\\n\\n<h3 id=\\\"Connection_errors\\\">Connection errors</h3>\\n\\n<p>If an error occurs while attempting to connect, first a simple event with the name <code>error</code> is sent to the {{domxref(\\\"WebSocket\\\")}} object (thereby invoking its {{domxref(\\\"WebSocket.onerror\\\", \\\"onerror\\\")}} handler), and then the {{domxref(\\\"CloseEvent\\\")}} is sent to the <code>WebSocket</code> object (thereby invoking its {{domxref(\\\"WebSocket.onclose\\\", \\\"onclose\\\")}} handler) to indicate the reason for the connection's closing.</p>\\n\\n<p>The browser may also output to its console a more descriptive error message as well as a closing code as defined in <a class=\\\"external\\\" href=\\\"http://tools.ietf.org/html/rfc6455#section-7.4\\\" title=\\\"RFC 6455 Section 7.4\\\">RFC 6455, Section 7.4</a> through the <a href=\\\"/en/WebSockets/WebSockets_reference/CloseEvent\\\" title=\\\"CloseEvent\\\"><code>CloseEvent</code></a>.</p>\\n\\n<h3 id=\\\"Examples\\\">Examples</h3>\\n\\n<p>This simple example creates a new WebSocket, connecting to the server at <code><span class=\\\"nowiki\\\">wss://www.example.com/socketserver</span></code>. A custom protocol of \\\"protocolOne\\\" is named in the request for the socket in this example, though this can be omitted.</p>\\n\\n<pre class=\\\"brush: js\\\">var exampleSocket = new WebSocket(\\\"wss://www.example.com/socketserver\\\", \\\"protocolOne\\\");\\n</pre>\\n\\n<p>On return, {{domxref(\\\"WebSocket.readyState\\\", \\\"exampleSocket.readyState\\\")}} is <code>CONNECTING</code>. The <code>readyState</code> will become <code>OPEN</code>\u00A0once the connection is ready to transfer data.</p>\\n\\n<p>If you want to open a connection and are flexible about the protocols you support, you can specify an array of protocols:</p>\\n\\n<pre class=\\\"brush: js\\\">var exampleSocket = new WebSocket(\\\"wss://www.example.com/socketserver\\\", [\\\"protocolOne\\\", \\\"protocolTwo\\\"]);\\n</pre>\\n\\n<p>Once the connection is established (that is, <code>readyState</code> is <code>OPEN</code>), {{domxref(\\\"WebSocket.protocol\\\", \\\"exampleSocket.protocol\\\")}} will tell you which protocol the server selected.</p>\\n\\n<p>Establishing a WebSocket relies on the <a href=\\\"/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\\\">HTTP Upgrade mechanism</a>, so the request for the protocol upgrade is implicit when we address the web server as <code><span class=\\\"nowiki\\\">ws://www.example.com</span></code> or <code><span class=\\\"nowiki\\\">wss://www.example.com</span></code>.</p>\\n\\n<h2 id=\\\"Sending_data_to_the_server\\\">Sending data to the server</h2>\\n\\n<p>Once you've opened your connection, you can begin transmitting data to the server. To do this, simply call the <code>WebSocket</code> object's {{domxref(\\\"WebSocket.send\\\", \\\"send()\\\")}} method for each message you want to send:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.send(\\\"Here's some text that the server is urgently awaiting!\\\"); \\n</pre>\\n\\n<p>You can send data as a string, {{ domxref(\\\"Blob\\\") }}, or {{domxref(\\\"ArrayBuffer\\\")}}.</p>\\n\\n<p>As establishing a connection is asynchronous and prone to failure there is no guarantee that calling the <code>send()</code> method immediately after creating a WebSocket object will be successful. We can at least be sure that attempting to send data only takes place once a connection is established by defining an {{domxref(\\\"WebSocket.onopen\\\", \\\"onopen\\\")}} event handler to do the work:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onopen = function (event) {\\n\u00A0 exampleSocket.send(\\\"Here's some text that the server is urgently awaiting!\\\"); \\n};\\n</pre>\\n\\n<h3 id=\\\"Using_JSON_to_transmit_objects\\\">Using JSON to transmit objects</h3>\\n\\n<p>One handy thing you can do is use <a href=\\\"/en/JSON\\\" title=\\\"en/JSON\\\">JSON</a>\u00A0to send reasonably complex data to the server. For example, a chat program can interact with a server using a protocol implemented using packets of JSON-encapsulated data:</p>\\n\\n<pre class=\\\"brush: js\\\">// Send text to all users through the server\\nfunction sendText() {\\n  // Construct a msg object containing the data the server needs to process the message from the chat client.\\n\u00A0 var msg = {\\n\u00A0\u00A0\u00A0 type: \\\"message\\\",\\n\u00A0\u00A0\u00A0 text: document.getElementById(\\\"text\\\").value,\\n\u00A0\u00A0\u00A0 id:   clientID,\\n\u00A0\u00A0\u00A0 date: Date.now()\\n\u00A0 };\\n\\n\u00A0 // Send the msg object as a JSON-formatted string.\\n\u00A0 exampleSocket.send(JSON.stringify(msg));\\n\u00A0 \\n\u00A0 // Blank the text input element, ready to receive the next line of text from the user.\\n\u00A0 document.getElementById(\\\"text\\\").value = \\\"\\\";\\n} \\n</pre>\\n\\n<h2 id=\\\"Receiving_messages_from_the_server\\\">Receiving messages from the server</h2>\\n\\n<p>WebSockets is an event-driven API; when messages are received, a <code>message</code> event is sent to the <code>WebSocket</code> object. To handle it, add an event listener for the <code>message</code> event, or use the {{domxref(\\\"WebSocket.onmessage\\\", \\\"onmessage\\\")}} event handler. To begin listening for incoming data, you can do something like this:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onmessage = function (event)\u00A0{\\n\u00A0 console.log(event.data);\\n}\\n</pre>\\n\\n<h3 id=\\\"Receiving_and_interpreting_JSON_objects\\\">Receiving and interpreting JSON objects</h3>\\n\\n<p>Let's consider the chat client application first alluded to in {{ anch(\\\"Using JSON to transmit objects\\\") }}. There are assorted types of data packets the client might receive, such as:</p>\\n\\n<ul>\\n <li>Login handshake</li>\\n <li>Message text</li>\\n <li>User list updates</li>\\n</ul>\\n\\n<p>The code that interprets these incoming messages might look like this:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.onmessage = function(event) {\\n  var f = document.getElementById(\\\"chatbox\\\").contentDocument;\\n  var text = \\\"\\\";\\n  var msg = JSON.parse(event.data);\\n  var time = new Date(msg.date);\\n  var timeStr = time.toLocaleTimeString();\\n  \\n  switch(msg.type) {\\n    case \\\"id\\\":\\n      clientID = msg.id;\\n      setUsername();\\n      break;\\n    case \\\"username\\\":\\n      text = \\\"&lt;b&gt;User &lt;em&gt;\\\" + msg.name + \\\"&lt;/em&gt; signed in at \\\" + timeStr + \\\"&lt;/b&gt;&lt;br&gt;\\\";\\n      break;\\n    case \\\"message\\\":\\n      text = \\\"(\\\" + timeStr + \\\") &lt;b&gt;\\\" + msg.name + \\\"&lt;/b&gt;: \\\" + msg.text + \\\"&lt;br&gt;\\\";\\n      break;\\n    case \\\"rejectusername\\\":\\n      text = \\\"&lt;b&gt;Your username has been set to &lt;em&gt;\\\" + msg.name + \\\"&lt;/em&gt; because the name you chose is in use.&lt;/b&gt;&lt;br&gt;\\\"\\n      break;\\n    case \\\"userlist\\\":\\n      var ul = \\\"\\\";\\n      for (i=0; i &lt; msg.users.length; i++) {\\n        ul += msg.users[i] + \\\"&lt;br&gt;\\\";\\n      }\\n      document.getElementById(\\\"userlistbox\\\").innerHTML = ul;\\n      break;\\n  }\\n  \\n  if (text.length) {\\n    f.write(text);\\n    document.getElementById(\\\"chatbox\\\").contentWindow.scrollByPages(1);\\n  }\\n};\\n</pre>\\n\\n<p>Here we use <a href=\\\"/en/JavaScript/Reference/Global_Objects/JSON/parse\\\" title=\\\"en/JavaScript/Reference/Global Objects/JSON/parse\\\"><code>JSON.parse()</code></a>\u00A0to convert the JSON\u00A0object back into the original object, then examine and act upon its contents.</p>\\n\\n<h3 id=\\\"Text_data_format\\\">Text data format</h3>\\n\\n<p>Text received over a WebSocket connection is in UTF-8 format.</p>\\n\\n<h2 id=\\\"Closing_the_connection\\\">Closing the connection</h2>\\n\\n<p>When you've finished using the WebSocket connection, call the WebSocket method {{domxref(\\\"WebSocket.close\\\", \\\"close()\\\")}}:</p>\\n\\n<pre class=\\\"brush: js\\\">exampleSocket.close();\\n</pre>\\n\\n<p>It may be helpful to examine the socket's {{domxref(\\\"WebSocket.bufferedAmount\\\", \\\"bufferedAmount\\\")}} attribute before attempting to close the connection to determine if any data has yet to be transmitted on the network. If this value isn't 0, there's pending data still, so you may wish to wait before closing the connection.</p>\\n\\n<h2 id=\\\"Security_considerations\\\">Security considerations</h2>\\n\\n<p>WebSockets should not be used in a mixed content environment; that is, you shouldn't open a non-secure WebSocket connection from a page loaded using HTTPS or vice-versa. Most browsers now only allow secure WebSocket connections, and no longer support using them in insecure contexts.</p>\",\"parents\":[{\"url\":\"/en-US/docs/Web\",\"title\":\"Web technology for developers\"},{\"url\":\"/en-US/docs/Web/API\",\"title\":\"Web APIs\"},{\"url\":\"/en-US/docs/Web/API/WebSockets_API\",\"title\":\"The WebSocket API (WebSockets)\"}],\"translations\":[{\"language\":\"Espa\u00F1ol\",\"hrefLang\":\"es\",\"localizedLanguage\":\"Spanish\",\"locale\":\"es\",\"url\":\"/es/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"title\":\"Escribiendo aplicaciones con WebSockets\"},{\"language\":\"Fran\u00E7ais\",\"hrefLang\":\"fr\",\"localizedLanguage\":\"French\",\"locale\":\"fr\",\"url\":\"/fr/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"title\":\"Ecrire des applications client WebSocket\"},{\"language\":\"magyar\",\"hrefLang\":\"hu\",\"localizedLanguage\":\"Hungarian\",\"locale\":\"hu\",\"url\":\"/hu/docs/WebSockets/Writing_WebSocket_client_applications\",\"title\":\"Writing WebSocket client applications\"},{\"language\":\"Italiano\",\"hrefLang\":\"it\",\"localizedLanguage\":\"Italian\",\"locale\":\"it\",\"url\":\"/it/docs/WebSockets/Writing_WebSocket_client_applications\",\"title\":\"Writing WebSocket client applications\"},{\"language\":\"\u65E5\u672C\u8A9E\",\"hrefLang\":\"ja\",\"localizedLanguage\":\"Japanese\",\"locale\":\"ja\",\"url\":\"/ja/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"title\":\"WebSocket \u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u306E\u8A18\u8FF0\"},{\"language\":\"\uD55C\uAD6D\uC5B4\",\"hrefLang\":\"ko\",\"localizedLanguage\":\"Korean\",\"locale\":\"ko\",\"url\":\"/ko/docs/WebSockets/Writing_WebSocket_client_applications\",\"title\":\"WebSocket\uC744 \uC774\uC6A9\uD558\uC5EC \uD074\uB77C\uC774\uC5B8\uD2B8 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC791\uC131\uD558\uAE30\"},{\"language\":\"Portugu\u00EAs (do\u00A0Brasil)\",\"hrefLang\":\"pt\",\"localizedLanguage\":\"Portuguese (Brazilian)\",\"locale\":\"pt-BR\",\"url\":\"/pt-BR/docs/WebSockets/Escrevendo_aplicacoes_cliente_WebSocket\",\"title\":\"Escrevendo aplica\u00E7\u00F5es cliente WebSocket\"},{\"language\":\"\u0420\u0443\u0441\u0441\u043A\u0438\u0439\",\"hrefLang\":\"ru\",\"localizedLanguage\":\"Russian\",\"locale\":\"ru\",\"url\":\"/ru/docs/WebSockets/Writing_WebSocket_client_applications\",\"title\":\"\u041D\u0430\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043A\u043B\u0438\u0435\u043D\u0442\u0441\u043A\u0438\u0445 \u043F\u0440\u0438\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0432\u0435\u0431\u0441\u043E\u043A\u0435\u0442\u043E\u0432\"},{\"language\":\"\u4E2D\u6587 (\u7B80\u4F53)\",\"hrefLang\":\"zh\",\"localizedLanguage\":\"Chinese (Simplified)\",\"locale\":\"zh-CN\",\"url\":\"/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\",\"title\":\"\u7F16\u5199WebSocket\u5BA2\u6237\u7AEF\u5E94\u7528\"},{\"language\":\"\u6B63\u9AD4\u4E2D\u6587 (\u7E41\u9AD4)\",\"hrefLang\":\"zh-TW\",\"localizedLanguage\":\"Chinese (Traditional)\",\"locale\":\"zh-TW\",\"url\":\"/zh-TW/docs/WebSockets/Writing_WebSocket_client_applications\",\"title\":\"\u88FD\u4F5C WebSocket \u5BA2\u6236\u7AEF\u61C9\u7528\u7A0B\u5F0F\"}],\"lastModified\":\"2019-08-19T22:57:55.941248\"}}");</script>


  
    
  

  <!-- site js -->
  <script defer="" type="text/javascript" src="./Writing WebSocket client applications - Web APIs _ MDN_files/react-main.48270c4e4f6e.js" charset="utf-8"></script>
  
  
    <script defer="" type="text/javascript" src="./Writing WebSocket client applications - Web APIs _ MDN_files/react-bcd-signal.5243efe96f7c.js" charset="utf-8"></script>
  

</body></html>