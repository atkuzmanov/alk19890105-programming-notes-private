<!DOCTYPE html>
<!-- saved from url=(0062)https://www.vogella.com/tutorials/JavaServerFaces/article.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge"><![endif]--><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="Asciidoctor 2.0.10"><meta name="author" content="Lars Vogel, (c) 2008, 2019 vogella GmbH"><title>JSF (JavaServer Faces) - Tutorial</title><script src="./JSF (JavaServer Faces) - Tutorial_files/pubads_impl_rendering_2020021802.js"></script><script async="" type="text/javascript" src="./JSF (JavaServer Faces) - Tutorial_files/gpt.js"></script><script type="text/javascript" async="" src="./JSF (JavaServer Faces) - Tutorial_files/ga.js"></script><script>window.mod_pagespeed_start = Number(new Date());</script><link rel="stylesheet" href="./JSF (JavaServer Faces) - Tutorial_files/tutorials,_JavaServerFaces,_asciidoctor.css+css,_articles.css,qv==2.0+css,_header.css.pagespeed.cc.drsSatA-Ba.css">

<link href="./JSF (JavaServer Faces) - Tutorial_files/icon" rel="stylesheet">
<link rel="stylesheet" href="./JSF (JavaServer Faces) - Tutorial_files/css">
<link rel="stylesheet" href="./JSF (JavaServer Faces) - Tutorial_files/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

<!-- Google analytics -->

<script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-3967758-1']);_gaq.push(['_setDomainName','vogella.com']);_gaq.push(['_setAllowLinker',true]);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script>

<!-- Lake Quincy Ads Responsive -->
<script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script>

<script type="text/javascript">googletag.cmd.push(function(){var mapping=googletag.sizeMapping().addSize([0,0],[300,250]).addSize([750,250],[300,250]).addSize([1170,200],[728,90]).build();googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/right',[160,600],'ad-left').addService(googletag.pubads()).setTargeting('left');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/beforetoc',[[300,250],[728,90]],'ad-beforeTOC').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('beforetoc');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inbetween01',[[300,250],[728,90]],'ad-inBetween01').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inbetween01');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inbetween02',[[300,250],[728,90]],'ad-inBetween02').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inbetween02');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/inbetween03',[[300,250],[728,90]],'ad-inBetween03').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('inbetween03');googletag.defineSlot('/6839/lqm.javaeclipseandroid.site/afterresources',[[300,250],[728,90]],'ad-afterResources').defineSizeMapping(mapping).addService(googletag.pubads()).setTargeting('afterresources');googletag.pubads().enableSingleRequest();googletag.enableServices();});</script>

<!-- Begin Cookie Consent plugin by Silktide - http://silktide.com/cookieconsent -->
<script type="text/javascript">window.cookieconsent_options={"message":"We use cookies to personalise ads and to analyse our traffic. We also share information about your use of our site with our advertising and analytics partners. By using this site you agree to our cookie use.","dismiss":"Got it!","learnMore":"See details","link":"https://www.vogella.com/privacy.html","theme":"dark-bottom"};</script>

<script type="text/javascript" src="./JSF (JavaServer Faces) - Tutorial_files/cookieconsent.min.js"></script>
<!-- End Cookie Consent plugin -->

<script>function openCloseNav(){if(document.getElementById("mobileTopnav").style.width==="150px"){document.getElementById("mobileTopnav").style.width="0";document.body.style.marginLeft="8px";}else{document.getElementById("mobileTopnav").style.width="150px";document.body.style.marginLeft="160px";}}</script>

<link rel="preload" href="./JSF (JavaServer Faces) - Tutorial_files/f.txt" as="script"><script type="text/javascript" src="./JSF (JavaServer Faces) - Tutorial_files/f.txt"></script><link rel="preload" href="./JSF (JavaServer Faces) - Tutorial_files/f(1).txt" as="script"><script type="text/javascript" src="./JSF (JavaServer Faces) - Tutorial_files/f(1).txt"></script><script src="./JSF (JavaServer Faces) - Tutorial_files/pubads_impl_2020021802.js" async=""></script><link rel="prefetch" href="https://tpc.googlesyndication.com/safeframe/1-0-37/html/container.html"></head><body class="article toc2 toc-right"><div id="mobileHeaderpart">
    <span onclick="openCloseNav()"><img src="./JSF (JavaServer Faces) - Tutorial_files/burger.svg" alt=""> </span>
    <div id="mobileLogo">
        <a title="vogella.com" href="https://www.vogella.com/">
            <img src="./JSF (JavaServer Faces) - Tutorial_files/index_logo.svg" alt="vogella.com">
        </a>
    </div>
</div>

<div id="mobileTopnav" class="sidenav">
    <a href="https://www.vogella.com/">Home</a>
    <a class="currentpage" href="https://www.vogella.com/tutorials/">Tutorials</a>
    <a href="https://www.vogella.com/training/">Training</a>
    <a href="https://www.vogella.com/consulting/">Consulting</a>
    <a href="https://www.vogella.com/products/">Products</a>
    <a href="https://www.vogella.com/books/">Books</a>
    <a href="https://www.vogella.com/company/">Company</a>
    <a href="https://www.vogella.com/support.html">Donate</a>
    <a style="margin-bottom:60px" href="https://www.vogella.com/contact.html">Contact us</a></div>

<div id="headerpart">

	<div id="logo">
		<a title="vogella.com" href="https://www.vogella.com/">
			<img src="./JSF (JavaServer Faces) - Tutorial_files/xindex_logo.png.pagespeed.ic.tIT74pGTDx.webp" alt="vogella.com">
		</a>
	</div> <!-- logo -->

	<div id="topnav">
		<ul id="home" class="topnav">
			<li id="home-icon"><a href="https://www.vogella.com/"></a></li>
			<li class="currentpage"> <a href="https://www.vogella.com/tutorials/">Tutorials</a>
				<ul>
					<li><a href="https://www.vogella.com/tutorials/eclipseide.html">Eclipse IDE</a></li>
					<li><a href="https://www.vogella.com/tutorials/eclipse.html">Eclipse RCP</a></li>
					<li><a href="https://www.vogella.com/tutorials/eclipseplatform.html">Eclipse IDE Extensions</a></li>
					<li><a href="https://www.vogella.com/tutorials/android.html">Android Programming</a></li>
					<li><a href="https://www.vogella.com/tutorials/web.html">Web</a></li>
					<li><a href="https://www.vogella.com/tutorials/java.html">Java</a></li>
					<li><a href="https://www.vogella.com/tutorials/technology.html">Technology</a></li>
					<li><a href="https://www.vogella.com/tutorials/algorithms.html">Software design</a></li>
					<li><a href="https://www.vogella.com/code/index.html">Source Code</a></li>
				</ul>
			</li>
			<li><a href="https://www.vogella.com/training/">Training</a>
				<ul>
					<li><a href="https://www.vogella.com/training/eclipse/eclipsercp.html">Eclipse RCP Training</a></li>
					<li><a href="https://www.vogella.com/training/appdevelopment/flutter.html">Cross Mobile App Dev. Training</a></li>
					<li><a href="https://www.vogella.com/training/git/index.html">Git and Gerrit Training</a></li>
					<li><a href="https://learn.vogella.com/">Self-study Portal</a></li>
					<li><a href="https://www.vogella.com/training/onsite/index.html">Other Onsite Training</a></li>
				</ul>
			</li>

			<li><a href="https://www.vogella.com/consulting/">Consulting</a></li>

			<li><a href="https://www.vogella.com/company/">Company</a>
				<ul>
					<li><a href="https://www.vogella.com/jobs/">Jobs</a></li>
					<li><a href="https://www.vogella.com/people/index.html">People</a></li>
					<li><a href="https://www.vogella.com/customers.html" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Customers&#39;, &#39;clicked&#39;, &#39;Header&#39;]);">Customers</a></li>
					<li><a href="http://blog.vogella.com/">Blog</a></li>
					<li><a href="https://www.vogella.com/books/">Books</a>
						<ul>
							<li><a href="https://www.vogella.com/books/eclipsercp.html">Eclipse RCP</a></li>
							<li><a href="https://www.vogella.com/books/eclipseide.html">Eclipse IDE</a></li>
							<li><a href="https://www.vogella.com/books/eclipsecontribution.html">Contributing to the Eclipse Project</a></li>
							<li><a href="https://www.vogella.com/books/git.html">Git</a></li>
						</ul>
					</li>
					<li><a href="https://www.vogella.com/research.html">Research Projects</a>
					</li><li><a href="https://www.vogella.com/support.html">Donate</a></li>
				</ul>
			</li>

			<li><a href="https://www.vogella.com/contact.html">Contact us</a></li>
		</ul>
	</div><!-- topnav -->

	<div id="searchfixed">
		<form action="https://www.vogella.com/search.html" id="cse-search-box">
			<div id="searchwrapper">
				<input type="hidden" name="cx" value="partner-pub-3851443674951530:3991491935">
				<input type="hidden" name="cof" value="FORID:10">
				<input type="hidden" name="ie" value="UTF-8">
				<input type="text" placeholder="Search" id="search_field" name="q" size="55">
				<input type="image" src="./JSF (JavaServer Faces) - Tutorial_files/xsrch.png.pagespeed.ic.HggiOWN_Tm.webp" id="search_button" name="sa" alt="Search">
			</div>
		</form>
	</div> <!-- searchfixed -->

</div> <!-- headerpart -->

<div id="leftcol">

	<br>
	<br>

	<script async="async" src="./JSF (JavaServer Faces) - Tutorial_files/f(2).txt"></script>
	<!-- LeftColumn -->
	<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-3851443674951530" data-ad-slot="6294971031"></ins>
	<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>

	<br>
	<br>
	<br>
	<br>
	<br>

	<!-- Responsive Lake Quincy Ads -->
	<div id="ad-left" style="">
		<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-left');});</script>
	<div id="google_ads_iframe_/6839/lqm.javaeclipseandroid.site/right_0__container__" style="border: 0pt none; width: 160px; height: 600px;"></div></div>
</div> <!-- leftcolumn -->

<div id="rightcol_tutorial">
	<br>
	<br>
	<!-- vogellas own advertising for training and books -->
	<div class="vogella_ads">
		<h1>Get more...</h1>
			<ul><li>
				<a href="https://learn.vogella.com/" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;vogella Services&#39;, &#39;clicked&#39;, &#39;Learn more...&#39;]);">Read Premium Content ...</a>
				</li><li><a href="https://www.vogella.com/training/onsite/index.html" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;vogella Services&#39;, &#39;clicked&#39;, &#39;training&#39;]);">Book Onsite Training</a></li>
				<li><a href="https://www.vogella.com/consulting/" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;vogella Services&#39;, &#39;clicked&#39;, &#39;consulting&#39;]);">Consulting</a></li>
			</ul>
		<h1>Training Events</h1>
			<ul>
				<li><a href="https://www.vogella.com/training/appdevelopment/flutter.html" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;vogella Services&#39;, &#39;clicked&#39;, &#39;next Flutter training&#39;]);">Cross Mobile App Dev. Schulung in Hamburg</a></li>
				<li><a href="https://www.vogella.com/training/eclipse/eclipsercp.html" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;vogella Services&#39;, &#39;clicked&#39;, &#39;next RCP training&#39;]);">Eclipse RCP Dev. Schulung in Hamburg</a></li>
			</ul>
	</div>
</div> <!--rightcol--><div id="header"><h1>JSF (JavaServer Faces) - Tutorial</h1><div class="details"><span id="author"><a href="https://twitter.com/vogella"><icon class="fab fa-twitter-square twitter" aria-label="link to the twitter account of the author"></icon></a>Lars Vogel, (c) 2008, 2019 vogella GmbH</span><br><span id="revnumber">Version 1.5,</span><span id="revdate">26.10.2016</span></div><div id="toc" class="toc2"><div id="toctitle">Table of Contents</div><ul class="sectlevel1 "><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf">1. JavaServer Faces - JSF</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_overview">1.1. What is JSF</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_application">1.2. A JSF application</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_valuebinding">1.3. Value and Method Binding</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_prerequisites">1.4. Prerequisites to use JSF</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_mainfeatures">1.5. JSF Main features</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_jsp">1.6. JSP and JSF</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig">2. JSF configuration files</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_overview">2.1. Overview</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_webxml">2.2. web.xml</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_facesconfigxml">2.3. faces-config.xml</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation">3. Installation</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_eclipse">3.1. Eclipse</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_jsf">3.2. JSF library</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_jslt">3.3. JSLT library</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf">4. Your first JSF project</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_project">4.1. Create JSF Project</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_review">4.2. Review the generated project</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_model">4.3. Domain Model</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_managedbean">4.4. Define managed bean</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_jsp">4.5. Create JSP</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_run">4.6. Run your webapplication</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_css">4.7. Layout via css</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf">5. Your second JSF application</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_project">5.1. Create JSF Project</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_model">5.2. Domain model</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_managedbeans">5.3. Register your managed beans</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_validators">5.4. Validators</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_resourcebundle">5.5. Resource bundle for messages</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_firstjsp">5.6. JavaServer Page with JSF components</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#navigationrule">5.7. Navigation Rule</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_run">5.8. Run your webapplication</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf">6. JSF application with a controller</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_project">6.1. Create JSF Project</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_model">6.2. Domain model</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_controller">6.3. Controller</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_managedbeans">6.4. Register your managed beans- Dependency injection</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_resourcebundle">6.5. Resource bundle for messages</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_firstjsp">6.6. JavaServer Page with JSF components</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_run">6.7. Run your webapplication</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf">7. A Todo JSF application</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_project">7.1. Create JSF Project</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_model">7.2. Domain model</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_controller">7.3. Controller</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_managedbeans">7.4. Register your managed beans</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_css">7.5. Create css</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_firstjsp">7.6. JavaServer Page with JSF components</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_run">7.7. Run your webapplication</a></li></ul></li><li><icon class="toc_expand fas fa-chevron-down" role="button" aria-expanded="false" tabindex="0"></icon><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources">8. Links and Literature</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources_articles">8.1. Tutorials and Websites</a></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources_jsf">8.2. JSF component libraries</a></li></ul></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#vogella-training-and-consulting-support">9. vogella training and consulting support</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"></ul></li><li><a href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#copyright-license-and-source-code">Appendix A: Copyright, License and Source code</a><div id="toctitle"></div><ul class="sectlevel2 hidden-toc-element"></ul></li></ul></div></div><div id="content" role="main"><div id="preamble">
<div class="sectionbody">
<div class="quoteblock abstract">
<blockquote>
JavaServer Faces with Eclipse.
This article describes how to develop JavaServer Faces web applications with Eclipse WTP JSF tooling.
It demonstrates managed beans, validators, external resource bundles and the JSF navigation concept.
This tutorial was developed with Java 1.6, JavaServerFaces 1.2, the Apache MyFaces JSF implementation, Tomcat 6.0 and Eclipse'3.6.
</blockquote>
</div>
<!-- Responsive - After Table of Content Google Ads-->
<script async="async" src="./JSF (JavaServer Faces) - Tutorial_files/f(2).txt"></script>
<ins class="adsbygoogle" style="display:block" data-ad-client="ca-pub-3851443674951530" data-ad-slot="4470606330" data-ad-format="auto"></ins>
<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
</div>
</div>
<div class="sect1">
<h2 id="jsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf">1. JavaServer Faces - JSF</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="jsf_overview"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_overview">1.1. What is JSF</a></h3>
<div class="paragraph">
<p>JavaServer Faces (JSF) is a UI component based Java Web
application
framework. JSF is serverbased, e.g. the JSF UI components
and their
state
are represented on the server with a defined life cycle
of
the UI components. JSF  is part of
the Java EE standard.</p>
</div>
<div class="paragraph">
<p>A JSF application run in a
standard web
container, for example
<a href="https://www.vogella.com/tutorials/ApacheTomcat/article.html">Tomcat</a> or
<a href="https://www.vogella.com/tutorials/Jetty/article.html">Jetty</a>.</p>
</div>
<div class="paragraph">
<p>This articles provides an introduction to JSF using only standard JSF
features.
For the usage of special Apache Trinidad features please see
<a href="https://www.vogella.com/tutorials/ApacheMyFaces/article.html">Apache Myfaces Trinidad with Eclipse - Tutorial</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="jsf_application"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_application">1.2. A JSF application</a></h3>
<div class="paragraph">
<p>A JSF application consists of web pages with JSF UI components.
A JSF application requires also some configuration files
("faces-config.xml" and
<code>web.xml</code>).</p>
</div>
<div class="paragraph">
<p>The faces-config.xml defines:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Managed Bean - the data elements of the JSF application (managed beans and backing beans) represent a Java class which will be created dynamically during runtime of the JSF application.
It can be defined for which scope the bean is valid (Session, Request, Application or none)</p>
</li>
<li>
<p>the navigation between web pages</p>
</li>
<li>
<p>data validators - Used to check the validity of UI input</p>
</li>
<li>
<p>data converters -Used to translate between UI and model</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Managed beans are
simple Java objects (POJO’s) which are
declared
in
"faces-config.xml"
and can be used in an JSF application.
For example
you can define a
Java object "Person". Once you define the
object in
faces-config.xml
you can use the attributes of Person in your
JSF UI
components, e.g.
by binding the value "firstName" of this object
to an
JSF input
field.</p>
</div>
<div class="paragraph">
<p>JSF uses the Unified Expression Language (EL) to bind UI
components to object attributes or methods.</p>
</div>
</div>
<div class="sect2">
<h3 id="jsf_valuebinding"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_valuebinding">1.3. Value and Method Binding</a></h3>
<div class="paragraph">
<p>In JSF you can access the values of a managed bean via
value
binding. For value binding the universal Expression
Language (EL) is
used (to access bean and / or methods). In JSF you
do not need to
specify the get() or set() method but just the
variable name.
Method binding can be used to bind a JSF component, e.g. a
button to an method of a Java class.</p>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Expression Language statements either start with "${" or with "#{" and end with "}".
JSP EL expressions are using the ${…​} syntax.
These EL expressions are immediately evaluated.
JSF EL expressions are of the type #{…​}.
These are only evaluated when needed (and otherwise stored as strings).
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="jsf_prerequisites"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_prerequisites">1.4. Prerequisites to use JSF</a></h3>
<div class="paragraph">
<p>To use JSF you need:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>JSF Implementation (in the form of the JSF jars)</p>
</li>
<li>
<p>The JSTL tags library</p>
</li>
<li>
<p>A Java runtime environment</p>
</li>
<li>
<p>A web-container to use JSF in (for example Tomcat)</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="jsf_mainfeatures"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_mainfeatures">1.5. JSF Main features</a></h3>
<div class="paragraph">
<p>JSP has the following main features:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>JSP is based on the Model-View-Controller concept</p>
</li>
<li>
<p>JSP has a stateful UI component model, e.g. each component is aware of its data</p>
</li>
<li>
<p>JSF separates the functionality of a component from the display of the component.
The renderer is responsible of displaying the component for a certain client.
This renderer can get exchanged.
The standard renderer for JSF components is the HTML renderer.</p>
</li>
<li>
<p>JSP support listeners on UI components</p>
</li>
<li>
<p>JSP support data validation, data binding and data conversion between the UI and the model</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="jsf_jsp"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsf_jsp">1.6. JSP and JSF</a></h3>
<div class="paragraph">
<p>In this tutorial the JSF application will be build based on
JavaServer Pages (JSP’s). JSTL tags are used to include JSF UI
components into the
JSP. This is standard in JSF 1.2. The JSF 2.0
version is
using
Facelets.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="jsfconfig"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig">2. JSF configuration files</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="jsfconfig_overview"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_overview">2.1. Overview</a></h3>
<div class="paragraph">
<p>JSF is based on the following configuration files:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>web.xml - General web application configuration file</p>
</li>
<li>
<p>faces-config.xml - Contains the configuration of the JSF application.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="jsfconfig_webxml"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_webxml">2.2. web.xml</a></h3>
<div class="paragraph">
<p>JSF requires the central
configuration list <code>web.xml</code> in the
directory WEB-INF of the
application. This is similar to other
web-applications which are based on
servlets.</p>
</div>
<div class="paragraph">
<p>You must specify in <code>web.xml</code> that a
"FacesServlet" is
responsible for handling JSF applications.
"FacesServlet" is the
central controller for the JSF
application.</p>
</div>
<div class="paragraph">
<p>"FacesServlet" receives all
requests for the JSF
application and
initializes the JSF
components
before the JSP is displayed.</p>
</div>
</div>
<div class="sect2">
<h3 id="jsfconfig_facesconfigxml"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#jsfconfig_facesconfigxml">2.3. faces-config.xml</a></h3>
<div class="paragraph">
<p>"faces-config.xml" allows to configure the application, managed beans, convertors, validators, and navigation.</p>
</div>
<!-- Responsive Developer Media Ads -->
<div id="ad-inBetween01">
	<script type="text/javascript">googletag.cmd.push(function(){googletag.display('ad-inBetween01');});</script>
<div id="google_ads_iframe_/6839/lqm.javaeclipseandroid.site/inbetween01_0__container__" style="border: 0pt none; width: 728px; height: 90px;"></div></div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="installation"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation">3. Installation</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="installation_eclipse"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_eclipse">3.1. Eclipse</a></h3>
<div class="paragraph">
<p>For JSP development you need the Eclipse WTP and an installed Tomcat.
See <a href="https://www.vogella.com/tutorials/EclipseWTP/article.html">Installation of Eclipse WTP and Tomcat</a>.</p>
</div>
</div>
<div class="sect2">
<h3 id="installation_jsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_jsf">3.2. JSF library</a></h3>
<div class="paragraph">
<p>A JSF library is required.
We will later use Eclipse to download and install the Apache MyFaces JSF implementation during project creation.</p>
</div>
</div>
<div class="sect2">
<h3 id="installation_jslt"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#installation_jslt">3.3. JSLT library</a></h3>
<div class="paragraph">
<p>Download the JSLT library from <a href="https://jstl.java.net/download.html" class="bare">https://jstl.java.net/download.html</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="firstjsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf">4. Your first JSF project</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Our first JSF example will be a celsius to fahrenheit convertor.</p>
</div>
<div class="sect2">
<h3 id="firstjsf_project"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_project">4.1. Create JSF Project</a></h3>
<div class="paragraph">
<p>Create a new Dynamic Web Project "de.vogella.jsf.first".
Under "Configuration" select "JavaServer Faces v1.2".</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf10.gif.pagespeed.ic.Gzm4NnB32j.webp" alt="firstjsf10" loading="lazy"></div></div>
<div class="paragraph">
<p>Press next until you see the following screen.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf20.gif.pagespeed.ic.D0I2jMl7Xl.webp" alt="firstjsf20" loading="lazy"></div></div>
<div class="paragraph">
<p>The first time you create a JSF project you
need to install /
download a JSF implementation. Press the <b class="button">Download library…​</b> button
and select the Apache Library and install it.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf30.gif.pagespeed.ic.sXmqOSgFvm.webp" alt="firstjsf30" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf34.gif.pagespeed.ic.4bxbvfyHLT.webp" alt="firstjsf34" loading="lazy"></div></div>
<div class="paragraph">
<p>Press Manage libraries and create a library for JSTL.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf35.gif.pagespeed.ic.HIHNZRPEjH.webp" alt="firstjsf35" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf36.gif.pagespeed.ic.cRKLRaCEFr.webp" alt="firstjsf36" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf37.gif.pagespeed.ic.AVdN2MO67D.webp" alt="firstjsf37" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf38.gif.pagespeed.ic.MqmvI_VgoB.webp" alt="firstjsf38" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf39.gif.pagespeed.ic.S50rP3ubvl.webp" alt="firstjsf39" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf40.gif.pagespeed.ic.OeBBV6BECl.webp" alt="firstjsf40" loading="lazy"></div></div>
<div class="paragraph">
<p>Click <b class="button">Finish</b>.
Your project has been created.</p>
</div>
</div>
<div class="sect2">
<h3 id="firstjsf_review"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_review">4.2. Review the generated project</a></h3>
<div class="paragraph">
<p>Review the <code>web.xml</code> file. It has an entry for the Faces Servlet
and for the servlet mapping. Also the file "faces-config.xml" has
been
created.</p>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
To add the JSF settings to an existing dynamic web project,
right-click on your project, select <span class="menuseq"><b class="menu">Project Properties</b>&nbsp;<i class="fa fa-angle-right caret"></i> <b class="menuitem">Project Facets</b></span> and add then JSF facet to your project.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="firstjsf_model"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_model">4.3. Domain Model</a></h3>
<div class="paragraph">
<p>Create a package "de.vogella.jsf.first.model" and the class "TemperatureConvertor".</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">first</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TemperatureConvertor</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="n">celsius</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="n">fahrenheit</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">boolean</span> <span class="n">initial</span><span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCelsius</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">celsius</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCelsius</span><span class="o">(</span><span class="kt">double</span> <span class="n">celsius</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">celsius</span> <span class="o">=</span> <span class="n">celsius</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getFahrenheit</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">fahrenheit</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">getInitial</span><span class="o">(){</span>
        <span class="k">return</span> <span class="n">initial</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">reset</span> <span class="o">(){</span>
        <span class="n">initial</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">fahrenheit</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="n">celsius</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">return</span> <span class="s">"reset"</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">celsiusToFahrenheit</span><span class="o">(){</span>
        <span class="n">initial</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
        <span class="n">fahrenheit</span> <span class="o">=</span> <span class="o">(</span><span class="n">celsius</span> <span class="o">*</span><span class="mi">9</span> <span class="o">/</span> <span class="mi">5</span><span class="o">)</span> <span class="o">+</span><span class="mi">32</span><span class="o">;</span>
        <span class="k">return</span> <span class="s">"calculated"</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="firstjsf_managedbean"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_managedbean">4.4. Define managed bean</a></h3>
<div class="paragraph">
<p>Double-click on faces-config.xml in the WEB-INF directory and
select the tab "ManagedBeans".</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xmanagedbeans10.gif.pagespeed.ic.dcNbk83u8h.webp" alt="managedbeans10" loading="lazy"></div></div>
<div class="paragraph">
<p>Press add and maintain your class.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xmanagedbeans20.gif.pagespeed.ic.-uoJmwrZHH.webp" alt="managedbeans20" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xmanagedbeans22.gif.pagespeed.ic.r8PkIDr0tO.webp" alt="managedbeans22" loading="lazy"></div></div>
<div class="paragraph">
<p>The result should look like the following:</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xmanagedbeans30.gif.pagespeed.ic.puvHimO0ki.webp" alt="managedbeans30" loading="lazy"></div></div>
</div>
<div class="sect2">
<h3 id="firstjsf_jsp"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_jsp">4.5. Create JSP</a></h3>
<div class="paragraph">
<p>Select your project, right-click on it, select New → JSP.
Create the JSP page "Convertor.jsp". Use the "New JavaServer Faces
(JSF) Page (html)" template.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf44.gif.pagespeed.ic.cNx-shUNGr.webp" alt="firstjsf44" loading="lazy"></div></div>
<div class="paragraph">
<p>Change the code to the following.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="jsp"><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="na"> pageEncoding=</span><span class="s">"ISO-8859-1"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"f"</span><span class="na">  uri=</span><span class="s">"http://java.sun.com/jsf/core"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"h"</span><span class="na">  uri=</span><span class="s">"http://java.sun.com/jsf/html"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"Content-Type"</span> <span class="na">content=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="nt">&gt;</span>
<span class="nt">&lt;title&gt;</span>Celsius to Fahrenheit Convertor<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
<span class="nt">&lt;f:view&gt;</span>
    <span class="nt">&lt;h:form&gt;</span>
        <span class="nt">&lt;h:panelGrid </span><span class="na">columns=</span><span class="s">"2"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"Celsius"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
            <span class="nt">&lt;h:inputText  </span><span class="na">value=</span><span class="s">"#{temperatureConvertor.celsius}"</span><span class="nt">&gt;&lt;/h:inputText&gt;</span>
        <span class="nt">&lt;/h:panelGrid&gt;</span>
        <span class="nt">&lt;h:commandButton </span><span class="na">action=</span><span class="s">"#{temperatureConvertor.celsiusToFahrenheit}"</span><span class="na"> value=</span><span class="s">"Calculate"</span><span class="nt">&gt;&lt;/h:commandButton&gt;</span>
        <span class="nt">&lt;h:commandButton </span><span class="na">action=</span><span class="s">"#{temperatureConvertor.reset}"</span><span class="na"> value=</span><span class="s">"Reset"</span><span class="nt">&gt;&lt;/h:commandButton&gt;</span>
        <span class="nt">&lt;h:messages </span><span class="na">layout=</span><span class="s">"table"</span><span class="nt">&gt;&lt;/h:messages&gt;</span>
    <span class="nt">&lt;/h:form&gt;</span>


    <span class="nt">&lt;h:panelGroup </span><span class="na">rendered=</span><span class="s">"#{temperatureConvertor.initial!=true}"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;h3&gt;</span> Result <span class="nt">&lt;/h3&gt;</span>
    <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"Fahrenheit "</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
    <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{temperatureConvertor.fahrenheit}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
    <span class="nt">&lt;/h:panelGroup&gt;</span>
<span class="nt">&lt;/f:view&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
All JSF tag must be always be enclosed in a &lt;f:view&gt; tag.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="firstjsf_run"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_run">4.6. Run your webapplication</a></h3>
<div class="paragraph">
<p>Select Convertor.jsp, right mouse-click- &gt;run as → run on server.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xfirstjsf50.gif.pagespeed.ic.nkhlz0H-wu.webp" alt="firstjsf50" loading="lazy"></div></div>
<div class="paragraph">
<p>Congratulations. You should be able to use your JSF application.</p>
</div>
</div>
<div class="sect2">
<h3 id="firstjsf_css"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#firstjsf_css">4.7. Layout via css</a></h3>
<div class="paragraph">
<p>JFP applications can get styled via css files.
To load a style sheet include the following in your JSP page in the header section.
This is related to the mystyle.css file under your folder WebContent/css..</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">&lt;LINK href="&lt;%=request.getContextPath()%&gt;/css/mystyle.css" rel="stylesheet" type="text/css"&gt;</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<!-- Responsive - In Between 2 Google Ads-->
<script async="" src="./JSF (JavaServer Faces) - Tutorial_files/f(2).txt"></script>
<ins class="adsbygoogle" style="display:block; text-align:center;" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-3851443674951530" data-ad-slot="5595990152"></ins>
<script>(adsbygoogle=window.adsbygoogle||[]).push({});</script>
</div>
</div>
</div>
<div class="sect1">
<h2 id="secondjsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf">5. Your second JSF application</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>This second JSF application will add validation, resource bundles and navigation as additional functionality.</p>
</div>
<div class="sect2">
<h3 id="secondjsf_project"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_project">5.1. Create JSF Project</a></h3>
<div class="paragraph">
<p>Create a new Dynamic Web Project "de.vogella.jsf.starter".</p>
</div>
</div>
<div class="sect2">
<h3 id="secondjsf_model"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_model">5.2. Domain model</a></h3>
<div class="paragraph">
<p>Create a new package de.vogella.jsf.starter.model and the following class.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">starter</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">User</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">password</span><span class="o">;</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getPassword</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">password</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPassword</span><span class="o">(</span><span class="n">String</span> <span class="n">password</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">password</span> <span class="o">=</span> <span class="n">password</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">login</span><span class="o">(){</span>
        <span class="c1">// Image here a database access to validate the users</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="s">"tester"</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">password</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="s">"tester"</span><span class="o">)){</span>
            <span class="k">return</span> <span class="s">"success"</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="s">"failed"</span><span class="o">;</span>
        <span class="o">}</span>

    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Please note that we are hard-coding that only user tester with password tester can login.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>Create the following class.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">starter</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">left</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">right</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">Random</span> <span class="n">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">4</span><span class="o">);</span>

        <span class="k">do</span> <span class="o">{</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">j</span> <span class="o">&lt;=</span> <span class="mi">20</span><span class="o">);</span>

        <span class="n">left</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getLeft</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">left</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLeft</span><span class="o">(</span><span class="kt">int</span> <span class="n">left</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">left</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRight</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">right</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRight</span><span class="o">(</span><span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">right</span> <span class="o">=</span> <span class="n">right</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">// Controller</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">show</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">left</span> <span class="o">*</span> <span class="n">right</span><span class="o">;</span>
        <span class="k">return</span> <span class="s">"success"</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">clear</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">return</span> <span class="s">"clear"</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getResult</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setResult</span><span class="o">(</span><span class="kt">int</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">=</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
The class Card contains currently some controller code.
The next chapter will demonstrate how to keep your model code clean and how to use controllers directly.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="secondjsf_managedbeans"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_managedbeans">5.3. Register your managed beans</a></h3>
<div class="paragraph">
<p>Double-click on faces-config.xml and select the tab "ManagedBeans".
Register your User.java and Card.java as managed beans.</p>
</div>
</div>
<div class="sect2">
<h3 id="secondjsf_validators"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_validators">5.4. Validators</a></h3>
<div class="paragraph">
<p>JSP allows to define validators which allows to check certain values which are placed in the UI.
Create therefore the following class.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">starter</span><span class="o">.</span><span class="na">validator</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.faces.application.FacesMessage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.component.UIComponent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.context.FacesContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.validator.Validator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.validator.ValidatorException</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LoginValidator</span> <span class="kd">implements</span> <span class="n">Validator</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">validate</span><span class="o">(</span><span class="n">FacesContext</span> <span class="n">context</span><span class="o">,</span> <span class="n">UIComponent</span> <span class="n">component</span><span class="o">,</span>
            <span class="n">Object</span> <span class="n">value</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">ValidatorException</span> <span class="o">{</span>
        <span class="n">String</span> <span class="n">user</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span> <span class="n">value</span><span class="o">;</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">user</span><span class="o">.</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="s">"tester"</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">FacesMessage</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">();</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setDetail</span><span class="o">(</span><span class="s">"User "</span> <span class="o">+</span> <span class="n">user</span> <span class="o">+</span> <span class="s">" does not exists"</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setSummary</span><span class="o">(</span><span class="s">"Login Incorrect"</span><span class="o">);</span>
            <span class="n">message</span><span class="o">.</span><span class="na">setSeverity</span><span class="o">(</span><span class="n">FacesMessage</span><span class="o">.</span><span class="na">SEVERITY_ERROR</span><span class="o">);</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">ValidatorException</span><span class="o">(</span><span class="n">message</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="paragraph">
<p>Select your faces-config.xml and select the tab Component.
Select Validators and press Add.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xvalidator10.gif.pagespeed.ic.Kwi9GoRqQy.webp" alt="validator10" loading="lazy"></div></div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xvalidator20.gif.pagespeed.ic.Qn1SrjOItN.webp" alt="validator20" loading="lazy"></div></div>
</div>
<div class="sect2">
<h3 id="secondjsf_resourcebundle"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_resourcebundle">5.5. Resource bundle for messages</a></h3>
<div class="paragraph">
<p>With JSP it is easy to use resource bundles for the static text
in your JSP application. Create the following file
"messages.properties" in your source folder under the package
"de.vogella.jsf.starter".</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">user=User
password=Password
login=Login
hello=Moin
left=Left Side
right=Right Side
result=  Result
show= Show Result
next= New Test
reset= Reset</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="secondjsf_firstjsp"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_firstjsp">5.6. JavaServer Page with JSF components</a></h3>
<div class="paragraph">
<p>Create a new JSP page "LoginView.jsp" and change the code to the following:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="jsp"><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="na">
    pageEncoding=</span><span class="s">"ISO-8859-1"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"f"</span><span class="na"> uri=</span><span class="s">"http://java.sun.com/jsf/core"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"h"</span><span class="na"> uri=</span><span class="s">"http://java.sun.com/jsf/html"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"Content-Type"</span> <span class="na">content=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="nt">&gt;</span>
<span class="nt">&lt;title&gt;</span>Login<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
<span class="nt">&lt;f:view&gt;</span>
    <span class="nt">&lt;f:loadBundle </span><span class="na">basename=</span><span class="s">"de.vogella.jsf.starter.messages"</span><span class="na"> var=</span><span class="s">"msg"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;h:form&gt;</span>
        <span class="nt">&lt;h:panelGrid </span><span class="na">columns=</span><span class="s">"2"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{msg.user}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
            <span class="nt">&lt;h:inputText </span><span class="na">value=</span><span class="s">"#{user.name}"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;f:validator
                    </span><span class="na">validatorId=</span><span class="s">"de.vogella.jsf.starter.validator.LoginValidator"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;/h:inputText&gt;</span>
            <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{msg.password}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
            <span class="nt">&lt;h:inputSecret </span><span class="na">value=</span><span class="s">"#{user.password}"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/h:inputSecret&gt;</span>
        <span class="nt">&lt;/h:panelGrid&gt;</span>
        <span class="nt">&lt;h:commandButton </span><span class="na">action=</span><span class="s">"#{user.login}"</span><span class="na"> value=</span><span class="s">"#{msg.login}"</span><span class="nt">&gt;&lt;/h:commandButton&gt;</span>
        <span class="nt">&lt;h:messages </span><span class="na">layout=</span><span class="s">"table"</span><span class="nt">&gt;&lt;/h:messages&gt;</span>
    <span class="nt">&lt;/h:form&gt;</span>
<span class="nt">&lt;/f:view&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="paragraph">
<p>Lets explain a few fields.</p>
</div>
<table class="tableblock frame-all grid-all stretch">
<caption class="title">Table 1. Fields</caption>
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Element</th>
<th class="tableblock halign-left valign-top">Description</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;%@ taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt; &lt;%@ taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Makes the core and html tags available in the page</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;f:view&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Indicates that the following will use JSF components.</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;f:loadBundle basename="de.vogella.jsf.starter.messages" var="msg"/&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">load the resource / message bundle which is then available in the application under the name msg</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;h:form&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Starts a form</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;h:outputLabel value="#{msg.user}"&gt;&lt;/h:outputLabel&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Defines a label which used the text user define in the resource bundle</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;h:inputText tabindex="1" value="#{user.name}"&gt;&lt;/h:inputText&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Define a input field which used the managed bean user and maps to field name</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;h:inputSecret tabindex="2" value="#{user.password}"&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Masked input files, mapped to the managed bean user and field password</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">&lt;h:commandButton action="<mark>{user.login}" value="</mark>{msg.login}"&gt;&lt;/h:commandButton&gt;</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">The button is mapped to the method user.login</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>Create another JSP "Trainer.jsp" with the following code.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="jsp"><span class="nt">&lt;%@ page </span><span class="na">language=</span><span class="s">"java"</span><span class="na"> contentType=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="na">
    pageEncoding=</span><span class="s">"ISO-8859-1"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"f"</span><span class="na"> uri=</span><span class="s">"http://java.sun.com/jsf/core"</span><span class="nt">%&gt;</span>
<span class="nt">&lt;%@ taglib </span><span class="na">prefix=</span><span class="s">"h"</span><span class="na"> uri=</span><span class="s">"http://java.sun.com/jsf/html"</span><span class="nt">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"Content-Type"</span> <span class="na">content=</span><span class="s">"text/html; charset=ISO-8859-1"</span><span class="nt">&gt;</span>
<span class="nt">&lt;title&gt;</span>Insert title here<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
<span class="nt">&lt;f:view&gt;</span>
    <span class="nt">&lt;f:loadBundle </span><span class="na">basename=</span><span class="s">"de.vogella.jsf.starter.messages"</span><span class="na"> var=</span><span class="s">"msg"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;h:form&gt;</span>
        <span class="nt">&lt;h:panelGrid </span><span class="na">columns=</span><span class="s">"3"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{msg.left}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
            <span class="nt">&lt;h:inputText </span><span class="na">id=</span><span class="s">"left"</span><span class="na"> value=</span><span class="s">"#{card.left}"</span><span class="nt">&gt;&lt;/h:inputText&gt;</span>
            <span class="nt">&lt;h:message </span><span class="na">for=</span><span class="s">"left"</span><span class="nt">&gt;&lt;/h:message&gt;</span>

            <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{msg.right}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
            <span class="nt">&lt;h:inputText </span><span class="na">id=</span><span class="s">"right"</span><span class="na"> value=</span><span class="s">"#{card.right}"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;/h:inputText&gt;</span>
            <span class="nt">&lt;h:message </span><span class="na">for=</span><span class="s">"right"</span><span class="nt">&gt;&lt;/h:message&gt;</span>

        <span class="nt">&lt;/h:panelGrid&gt;</span>
        <span class="nt">&lt;h:commandButton </span><span class="na">action=</span><span class="s">"#{card.show}"</span><span class="na"> value=</span><span class="s">"#{msg.show}"</span><span class="nt">&gt;&lt;/h:commandButton&gt;</span>
        <span class="nt">&lt;h:commandButton </span><span class="na">action=</span><span class="s">"#{card.clear}"</span><span class="na"> value=</span><span class="s">"#{msg.reset}"</span><span class="na">
            immediate=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/h:commandButton&gt;</span>
        <span class="nt">&lt;h:messages </span><span class="na">layout=</span><span class="s">"table"</span><span class="nt">&gt;&lt;/h:messages&gt;</span>
    <span class="nt">&lt;/h:form&gt;</span>

    <span class="nt">&lt;h:panelGrid </span><span class="na">rendered=</span><span class="s">"#{card.result!=0}"</span><span class="na"> columns=</span><span class="s">"3"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;h:outputLabel </span><span class="na">value=</span><span class="s">"#{msg.result}"</span><span class="nt">&gt;&lt;/h:outputLabel&gt;</span>
        <span class="nt">&lt;h:inputText </span><span class="na">id=</span><span class="s">"result"</span><span class="na"> value=</span><span class="s">"#{card.result}"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;/h:inputText&gt;</span>
        <span class="nt">&lt;h:message </span><span class="na">for=</span><span class="s">"result"</span><span class="nt">&gt;&lt;/h:message&gt;</span>
    <span class="nt">&lt;/h:panelGrid&gt;</span>


<span class="nt">&lt;/f:view&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="paragraph">
<p>Create another JSP FailedLogin.jsp with the following code.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%&gt;
&lt;%@ taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt;
&lt;%@ taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
&lt;title&gt;Insert title here&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;f:view&gt;
    &lt;h1&gt;Failed Login.&lt;/h1&gt;
&lt;/f:view&gt;
&lt;/body&gt;
&lt;/html&gt;</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="navigationrule"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#navigationrule">5.7. Navigation Rule</a></h3>
<div class="paragraph">
<p>Select your faces-config.xml and select the tab "Navigation Rule".
Make the palette available if necessary.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xnavigationrule10.gif.pagespeed.ic.e_-w-4nAYH.webp" alt="navigationrule10" loading="lazy"></div></div>
<div class="paragraph">
<p>Select Page and click in the workarea. Add LoginView and Trainer to the workspace.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xnavigationrule20.gif.pagespeed.ic.rfd-RcyIKg.webp" alt="navigationrule20" loading="lazy"></div></div>
<div class="paragraph">
<p>Click on Link, then on LoginView and then on Trainer.
You should have now an arrow which indicates a navigation rule.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xnavigationrule30.gif.pagespeed.ic.WJTLpUw6J8.webp" alt="navigationrule30" loading="lazy"></div></div>
<div class="paragraph">
<p>Click in the Palette on Select. Select then the arrow and the properities view.
Input "success" in the From – Outcome</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xnavigationrule40.gif.pagespeed.ic.82Wk0A_cq0.webp" alt="navigationrule40" loading="lazy"></div></div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
The user bean return the String success.
In the navigation rule you now defined that if we receive "success" then we should be going to the next page.
</td>
</tr>
</tbody></table>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xnavigationrule50.gif.pagespeed.ic.xlJ43VNFJB.webp" alt="navigationrule50" loading="lazy"></div></div>
<div class="paragraph">
<p>Add a navigation rule so that in the case the user does not use
the right user / password you send him to the failure page.</p>
</div>
</div>
<div class="sect2">
<h3 id="secondjsf_run"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#secondjsf_run">5.8. Run your webapplication</a></h3>
<div class="paragraph">
<p>To run your webapplication, select LoginView.jsp, right
mouse-click- &gt;run as → run on server.</p>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Remember that we are hard-coding that only user "tester" with password "tester" can login. Try another user this should not work.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>You should be able to login with the right user and move to the next page.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xsecondjsf90.gif.pagespeed.ic.13-XfKUE3V.webp" alt="secondjsf90" loading="lazy"></div></div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="thirdjsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf">6. JSF application with a controller</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>We will now extend the example from the previous chapter to a
math trainer. The system will propose two number and the user must
multiply both values and input the result.
 This JSF application will use a controller which handles the JSF
logic. This will allow you to create a domain model without
application logic.</p>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
In general it is considered as a good design practice to keep the model independently from the application logic.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>This example will also demonstrate the usage of dependency
injection in JSF.</p>
</div>
<div class="sect2">
<h3 id="thirdjsf_project"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_project">6.1. Create JSF Project</a></h3>
<div class="paragraph">
<p>Create a new Dynamic Web Project "de.vogella.jsf.card".</p>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_model"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_model">6.2. Domain model</a></h3>
<div class="paragraph">
<p>Create a new package de.vogella.jsf.card.model and the following class.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">card</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">left</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">right</span><span class="o">;</span>


    <span class="kd">public</span> <span class="nf">Card</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">Random</span> <span class="n">random</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Random</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">do</span> <span class="o">{</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">10</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">4</span><span class="o">);</span>

        <span class="k">do</span> <span class="o">{</span>
            <span class="n">j</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">j</span> <span class="o">&lt;=</span> <span class="mi">20</span><span class="o">);</span>

        <span class="n">left</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getLeft</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">left</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLeft</span><span class="o">(</span><span class="kt">int</span> <span class="n">left</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">left</span> <span class="o">=</span> <span class="n">left</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getRight</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">right</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setRight</span><span class="o">(</span><span class="kt">int</span> <span class="n">right</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">right</span> <span class="o">=</span> <span class="n">right</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_controller"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_controller">6.3. Controller</a></h3>
<div class="paragraph">
<p>Create the following class CardController.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">card</span><span class="o">.</span><span class="na">controller</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.faces.application.FacesMessage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.component.UIPanel</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.context.FacesContext</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">de.vogella.jsf.card.model.Card</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CardController</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="n">Card</span> <span class="n">card</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">UIPanel</span> <span class="n">resultPanel</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">result</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">CardController</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">checkResult</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">FacesContext</span> <span class="n">context</span> <span class="o">=</span> <span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">();</span>
        <span class="n">resultPanel</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>

        <span class="k">if</span> <span class="o">(</span><span class="n">checkOperation</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">context</span><span class="o">.</span><span class="na">addMessage</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">(</span>
                    <span class="n">FacesMessage</span><span class="o">.</span><span class="na">SEVERITY_INFO</span><span class="o">,</span> <span class="s">"Correct"</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">context</span><span class="o">.</span><span class="na">addMessage</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">(</span>
                    <span class="n">FacesMessage</span><span class="o">.</span><span class="na">SEVERITY_INFO</span><span class="o">,</span> <span class="s">"Incorrect"</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">boolean</span> <span class="nf">checkOperation</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="n">card</span><span class="o">.</span><span class="na">getLeft</span><span class="o">()</span> <span class="o">*</span> <span class="n">card</span><span class="o">.</span><span class="na">getRight</span><span class="o">()</span> <span class="o">==</span> <span class="n">result</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">UIPanel</span> <span class="nf">getResultPanel</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">resultPanel</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setResultPanel</span><span class="o">(</span><span class="n">UIPanel</span> <span class="n">resultPanel</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">resultPanel</span> <span class="o">=</span> <span class="n">resultPanel</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getResult</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setResult</span><span class="o">(</span><span class="kt">int</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">result</span> <span class="o">=</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">next</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">FacesContext</span> <span class="n">context</span> <span class="o">=</span> <span class="n">FacesContext</span><span class="o">.</span><span class="na">getCurrentInstance</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">checkOperation</span><span class="o">()){</span>
            <span class="n">resultPanel</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
            <span class="n">card</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">();</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">context</span><span class="o">.</span><span class="na">addMessage</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">new</span> <span class="n">FacesMessage</span><span class="o">(</span>
                    <span class="n">FacesMessage</span><span class="o">.</span><span class="na">SEVERITY_INFO</span><span class="o">,</span> <span class="s">"Incorrect"</span><span class="o">,</span> <span class="kc">null</span><span class="o">));</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">Card</span> <span class="nf">getCard</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">card</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCard</span><span class="o">(</span><span class="n">Card</span> <span class="n">card</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">card</span> <span class="o">=</span> <span class="n">card</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="paragraph">
<p>This class has a field resultPanel. This field will later get
connected to a UIComponent (panel) from the JSP.</p>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_managedbeans"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_managedbeans">6.4. Register your managed beans- Dependency injection</a></h3>
<div class="paragraph">
<p>Double-click on faces-config.xml and select the tab
"ManagedBeans". Register the classes "CardController" and "Card" as
managed beans. The scope of card will be set to none as it will be
inserted into the ControllerCard via dependency injection. In the
initialization tab maintain the data as displayed in the screenshot.
The value #{card} refers to the  managed bean "card".</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xcontroller10.gif.pagespeed.ic.M064FKc4uG.webp" alt="controller10" loading="lazy"></div></div>
<div class="paragraph">
<p>The generated XML code should look like the following (you see this if you select the tab "Source").</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">&lt;managed-bean&gt;
        &lt;managed-bean-name&gt;cardController&lt;/managed-bean-name&gt;
        &lt;managed-bean-class&gt;de.vogella.jsf.card.controller.CardController&lt;/managed-bean-class&gt;
        &lt;managed-bean-scope&gt;session&lt;/managed-bean-scope&gt;
        &lt;managed-property&gt;
            &lt;property-name&gt;card&lt;/property-name&gt;
            &lt;property-class&gt;de.vogella.jsf.card.model.Card&lt;/property-class&gt;
            &lt;value&gt;#{card}&lt;/value&gt;
        &lt;/managed-property&gt;
    &lt;/managed-bean&gt;
    &lt;managed-bean&gt;
        &lt;managed-bean-name&gt;card&lt;/managed-bean-name&gt;
        &lt;managed-bean-class&gt;de.vogella.jsf.card.model.Card&lt;/managed-bean-class&gt;
        &lt;managed-bean-scope&gt;none&lt;/managed-bean-scope&gt;
    &lt;/managed-bean&gt;</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_resourcebundle"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_resourcebundle">6.5. Resource bundle for messages</a></h3>
<div class="paragraph">
<p>Create the following file "messages.properties" in your source folder under the package "de.vogella.jsf.card".</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">left=Left Side
right=Right Side
result=Result
show= Check
next= Next</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_firstjsp"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_firstjsp">6.6. JavaServer Page with JSF components</a></h3>
<div class="paragraph">
<p>Create a new JSP page "Trainer.jsp" and change the code to the following:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%&gt;
&lt;%@ taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt;
&lt;%@ taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
&lt;title&gt;Insert title here&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt; Train your Brain&lt;/h1&gt;

&lt;h3&gt;Please calculate the result &lt;/h3&gt;
&lt;f:view&gt;
    &lt;f:loadBundle basename="de.vogella.jsf.card.messages" var="msg" /&gt;
    &lt;h:form&gt;
        &lt;h:panelGrid columns="3"&gt;
            &lt;h:panelGrid columns="2"&gt;
                &lt;h:outputLabel value="#{msg.left}"&gt;&lt;/h:outputLabel&gt;
                &lt;h:outputLabel id="left" value="#{cardController.card.left}"&gt;&lt;/h:outputLabel&gt;

                &lt;h:outputLabel value="#{msg.right}"&gt;&lt;/h:outputLabel&gt;
                &lt;h:outputLabel id="right" value="#{cardController.card.right}"&gt;
                &lt;/h:outputLabel&gt;

                &lt;h:outputLabel value="#{msg.result}"&gt;&lt;/h:outputLabel&gt;
                &lt;h:inputText id="result" value="#{cardController.result}"&gt;&lt;/h:inputText&gt;
            &lt;/h:panelGrid&gt;

        &lt;/h:panelGrid&gt;
        &lt;h:commandButton action="#{cardController.checkResult}"
            value="#{msg.show}"&gt;&lt;/h:commandButton&gt;
        &lt;h:commandButton action="#{cardController.next}" value="#{msg.next}" type="submit"&gt;&lt;/h:commandButton&gt;
        &lt;h:messages layout="table"&gt;&lt;/h:messages&gt;

        &lt;h:panelGroup binding="#{cardController.resultPanel}" rendered="false"&gt;
            &lt;h:message for="result"&gt;&lt;/h:message&gt;
        &lt;/h:panelGroup&gt;

    &lt;/h:form&gt;




&lt;/f:view&gt;
&lt;/body&gt;
&lt;/html&gt;</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="paragraph">
<p>From the previously examples you should be able to read most of the fields.
What is new is that is use now the binding.
Binding allows to bind certain UIControls to a managed bean.
This way be bind the panel for the result to the controller.
The controller can then set the rendered attribute of this UIControl depending on the user settings.</p>
</div>
</div>
<div class="sect2">
<h3 id="thirdjsf_run"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#thirdjsf_run">6.7. Run your webapplication</a></h3>
<div class="paragraph">
<p>To run your webapplication, select Trainer.jsp, right
mouse-click- &gt;run as → run on server.</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xcontroller30.gif.pagespeed.ic.IjpZqgsX0m.webp" alt="controller30" loading="lazy"></div></div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="todojsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf">7. A Todo JSF application</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Lets now create a JSF application for maintaining a Todo list.
The main new thing we will cover is the handling of tables in JSF.
These tables will be created based on a Java collection from the
managed bean.</p>
</div>
<div class="sect2">
<h3 id="todojsf_project"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_project">7.1. Create JSF Project</a></h3>
<div class="paragraph">
<p>Create a new Dynamic Web Project "de.vogella.jsf.todo".</p>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_model"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_model">7.2. Domain model</a></h3>
<div class="paragraph">
<p>Create a new package de.vogella.jsf.todo.model and the following class.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">todo</span><span class="o">.</span><span class="na">model</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Calendar</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Todo</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">title</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">String</span> <span class="n">description</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">priority</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">Calendar</span> <span class="n">dueDate</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Todo</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">,</span> <span class="n">String</span> <span class="n">description</span><span class="o">,</span> <span class="kt">int</span> <span class="n">priority</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">description</span> <span class="o">=</span> <span class="n">description</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">priority</span> <span class="o">=</span> <span class="n">priority</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getTitle</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">title</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTitle</span><span class="o">(</span><span class="n">String</span> <span class="n">title</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">title</span> <span class="o">=</span> <span class="n">title</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">description</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDescription</span><span class="o">(</span><span class="n">String</span> <span class="n">description</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">description</span> <span class="o">=</span> <span class="n">description</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getPriority</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">priority</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPriority</span><span class="o">(</span><span class="kt">int</span> <span class="n">priority</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">priority</span> <span class="o">=</span> <span class="n">priority</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">Calendar</span> <span class="nf">getDueDate</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">dueDate</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDueDate</span><span class="o">(</span><span class="n">Calendar</span> <span class="n">dueDate</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">dueDate</span> <span class="o">=</span> <span class="n">dueDate</span><span class="o">;</span>
    <span class="o">}</span>




<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_controller"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_controller">7.3. Controller</a></h3>
<div class="paragraph">
<p>Create the package de.vogella.jsf.todo.controller and the following class TodoController.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="java"><span class="kn">package</span> <span class="n">de</span><span class="o">.</span><span class="na">vogella</span><span class="o">.</span><span class="na">jsf</span><span class="o">.</span><span class="na">todo</span><span class="o">.</span><span class="na">controller</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.faces.component.UICommand</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.component.UIForm</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.event.ActionEvent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.faces.model.SelectItem</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">de.vogella.jsf.todo.model.Todo</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">TodoController</span> <span class="o">{</span>
    <span class="c1">// domain model related variables</span>
    <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Todo</span><span class="o">&gt;</span> <span class="n">todos</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">Todo</span> <span class="n">todo</span><span class="o">;</span>

    <span class="c1">// JavaServerFaces related variables</span>
    <span class="kd">private</span> <span class="n">UIForm</span> <span class="n">form</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">UIForm</span> <span class="n">tableForm</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">UICommand</span> <span class="n">addCommand</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">TodoController</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">todos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Todo</span><span class="o">&gt;();</span>
        <span class="n">todos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Todo</span><span class="o">(</span><span class="s">"Learn JFS"</span><span class="o">,</span> <span class="s">"Finish this article"</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
        <span class="n">todos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Todo</span><span class="o">(</span><span class="s">"Stop drinking to much coffee"</span><span class="o">,</span> <span class="s">"Coffee is evil!"</span><span class="o">,</span> <span class="mi">3</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">addNew</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">todo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Todo</span><span class="o">(</span><span class="s">""</span><span class="o">,</span> <span class="s">""</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="n">form</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="n">addCommand</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">save</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">todos</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">todo</span><span class="o">);</span>
        <span class="n">form</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="n">addCommand</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">cancel</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">todo</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="n">form</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="n">addCommand</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">delete</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">todos</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">todo</span><span class="o">);</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">displayTable</span><span class="o">(</span><span class="n">ActionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getComponent</span><span class="o">().</span><span class="na">getId</span><span class="o">().</span><span class="na">equalsIgnoreCase</span><span class="o">(</span><span class="s">"hide"</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">tableForm</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">tableForm</span><span class="o">.</span><span class="na">setRendered</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">SelectItem</span><span class="o">&gt;</span> <span class="nf">getPriorities</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">List</span><span class="o">&lt;</span><span class="n">SelectItem</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">SelectItem</span><span class="o">&gt;();</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">SelectItem</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="s">"High"</span><span class="o">));</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">SelectItem</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="s">"Medium"</span><span class="o">));</span>
        <span class="n">list</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">SelectItem</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="s">"Low"</span><span class="o">));</span>
        <span class="k">return</span> <span class="n">list</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Todo</span><span class="o">&gt;</span> <span class="nf">getTodos</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">todos</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTodos</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">Todo</span><span class="o">&gt;</span> <span class="n">todos</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">todos</span> <span class="o">=</span> <span class="n">todos</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">Todo</span> <span class="nf">getTodo</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">todo</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTodo</span><span class="o">(</span><span class="n">Todo</span> <span class="n">todo</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">todo</span> <span class="o">=</span> <span class="n">todo</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">UIForm</span> <span class="nf">getForm</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">form</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setForm</span><span class="o">(</span><span class="n">UIForm</span> <span class="n">form</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">form</span> <span class="o">=</span> <span class="n">form</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">UICommand</span> <span class="nf">getAddCommand</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">addCommand</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAddCommand</span><span class="o">(</span><span class="n">UICommand</span> <span class="n">addCommand</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">addCommand</span> <span class="o">=</span> <span class="n">addCommand</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">UIForm</span> <span class="nf">getTableForm</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">tableForm</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTableForm</span><span class="o">(</span><span class="n">UIForm</span> <span class="n">tableForm</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">tableForm</span> <span class="o">=</span> <span class="n">tableForm</span><span class="o">;</span>
    <span class="o">}</span>

<span class="o">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_managedbeans"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_managedbeans">7.4. Register your managed beans</a></h3>
<div class="paragraph">
<p>Double-click on faces-config.xml and select the tab "ManagedBeans".
Register the TodoController.</p>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_css"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_css">7.5. Create css</a></h3>
<div class="paragraph">
<p>In your folder WebContent create a folder css.
Create a file mystyle.css with the following content.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="css"><span class="nt">table</span><span class="nc">.todo</span>  <span class="p">{</span>
    <span class="nl">border</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#CCCCCC</span><span class="p">;</span>
    <span class="p">}</span>

<span class="nt">table</span><span class="nc">.todo</span> <span class="nt">th</span> <span class="p">{</span>
    <span class="nl">background</span><span class="p">:</span> <span class="m">#EFEFEF</span> <span class="nb">none</span> <span class="nb">repeat</span> <span class="nb">scroll</span> <span class="m">0</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">border-top</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#CCCCCC</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="n">small</span><span class="p">;</span>
    <span class="nl">padding-left</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
    <span class="nl">padding-right</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
    <span class="nl">padding-top</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
    <span class="nl">vertical-align</span><span class="p">:</span> <span class="nb">top</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">table</span> <span class="nt">td</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">font-weight</span><span class="p">:</span><span class="nb">bold</span><span class="p">;</span>
    <span class="p">}</span>

<span class="nt">table</span> <span class="nc">.first</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">120px</span><span class="p">;</span>
    <span class="p">}</span>

<span class="nt">table</span> <span class="nc">.rest</span> <span class="p">{</span>
    <span class="nl">width</span><span class="p">:</span> <span class="m">400px</span><span class="p">;</span>
    <span class="p">}</span>

<span class="nt">table</span><span class="nc">.todo</span> <span class="p">{</span>

    <span class="nl">border-top</span><span class="p">:</span> <span class="m">1px</span> <span class="nb">solid</span> <span class="m">#CCCCCC</span><span class="p">;</span>
    <span class="nl">font-size</span><span class="p">:</span> <span class="n">small</span><span class="p">;</span>
    <span class="nl">padding-left</span><span class="p">:</span> <span class="m">5px</span><span class="p">;</span>
    <span class="nl">padding-right</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
    <span class="nl">padding-top</span><span class="p">:</span> <span class="m">4px</span><span class="p">;</span>
    <span class="nl">vertical-align</span><span class="p">:</span> <span class="nb">top</span><span class="p">;</span>
<span class="p">}</span></code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_firstjsp"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_firstjsp">7.6. JavaServer Page with JSF components</a></h3>
<div class="paragraph">
<p>Create a new JSP page "Todo.jsp" and change the code to the following:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight"><code data-lang="text">&lt;%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%&gt;
&lt;%@ taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt;
&lt;%@ taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"&gt;
&lt;title&gt;Insert title here&lt;/title&gt;

&lt;LINK href="&lt;%=request.getContextPath()%&gt;/css/mystyle.css"
    rel="stylesheet" type="text/css"&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h3&gt;Todo list&lt;/h3&gt;
&lt;f:view&gt;
    &lt;h:messages layout="table"&gt;&lt;/h:messages&gt;

    &lt;%-- Possibility to start a new Todo --%&gt;
    &lt;h:form&gt;
        &lt;h:commandLink binding="#{todoController.addCommand}" accesskey="n"
            action="#{todoController.addNew}" value="Add new Todo"&gt;
        &lt;/h:commandLink&gt;
    &lt;/h:form&gt;


    &lt;h:form binding="#{todoController.form}" rendered="false"
        styleClass="todo"&gt;
        &lt;h:panelGrid columns="2"&gt;
            &lt;h:outputText value="Title"&gt;&lt;/h:outputText&gt;
            &lt;h:inputText value="#{todoController.todo.title}" required="true"
                requiredMessage="Title is required"&gt;
            &lt;/h:inputText&gt;
            &lt;h:outputText value="Description"&gt;&lt;/h:outputText&gt;
            &lt;h:inputTextarea value="#{todoController.todo.description}" cols="40"
                rows="4"&gt;&lt;/h:inputTextarea&gt;
            &lt;h:outputText value="Prio"&gt;&lt;/h:outputText&gt;
            &lt;h:selectOneMenu validatorMessage="required"
                value="#{todoController.todo.priority}"&gt;
                &lt;f:selectItems value="#{todoController.priorities}" /&gt;
            &lt;/h:selectOneMenu&gt;
        &lt;/h:panelGrid&gt;
        &lt;h:panelGroup&gt;
            &lt;h:commandButton action="#{todoController.save}" value="Save"
                accesskey="s"&gt;
            &lt;/h:commandButton&gt;
            &lt;h:commandButton action="#{todoController.cancel}" value="Cancel"
                accesskey="c" immediate="true"&gt;
            &lt;/h:commandButton&gt;
        &lt;/h:panelGroup&gt;
    &lt;/h:form&gt;

    &lt;%-- These buttons allow to show and hide the table --%&gt;
    &lt;h:form&gt;
        &lt;h:panelGrid columns="2"&gt;
            &lt;h:commandLink id="hide"
                actionListener="#{todoController.displayTable}" value="Hide Table"&gt;
            &lt;/h:commandLink&gt;
            &lt;h:commandLink id="show"
                actionListener="#{todoController.displayTable}" value="Show Table"&gt;
            &lt;/h:commandLink&gt;
        &lt;/h:panelGrid&gt;
    &lt;/h:form&gt;

    &lt;%-- Here we start the form for the data table --%&gt;
    &lt;h:form binding="#{todoController.tableForm}"&gt;
        &lt;%-- Here we start the data table --%&gt;

        &lt;h:dataTable value="#{todoController.todos}" var="todo"
            styleClass="todo" headerClass="todoheader"
            columnClasses="first, rest"&gt;
            &lt;h:column&gt;
                &lt;%-- Via this facet we define the table header (column 1) --%&gt;
                &lt;f:facet name="header"&gt;
                    &lt;h:column&gt;
                        &lt;h:outputText value="Prio"&gt;&lt;/h:outputText&gt;
                    &lt;/h:column&gt;
                &lt;/f:facet&gt;
                &lt;h:outputText value="#{todo.priority}"&gt;&lt;/h:outputText&gt;
            &lt;/h:column&gt;
            &lt;h:column&gt;
                &lt;%-- Via this facet we define the table header (column 2) --%&gt;
                &lt;f:facet name="header"&gt;
                    &lt;h:column&gt;
                        &lt;h:outputText value="Title"&gt;&lt;/h:outputText&gt;
                    &lt;/h:column&gt;
                &lt;/f:facet&gt;
                &lt;h:outputText value="#{todo.title}"&gt;&lt;/h:outputText&gt;

            &lt;/h:column&gt;

            &lt;h:column&gt;
                &lt;%-- Via this facet we define the table header (column 3) --%&gt;
                &lt;f:facet name="header"&gt;
                    &lt;h:column&gt;
                        &lt;h:outputText value="Description"&gt;&lt;/h:outputText&gt;
                    &lt;/h:column&gt;
                &lt;/f:facet&gt;
                &lt;h:outputText value="#{todo.description}"&gt;&lt;/h:outputText&gt;
            &lt;/h:column&gt;

            &lt;h:column&gt;
                &lt;%-- Via this facet we define the table header (column 4) --%&gt;
                &lt;f:facet name="header"&gt;
                    &lt;h:column&gt;
                        &lt;h:outputText value="Actions"&gt;&lt;/h:outputText&gt;
                    &lt;/h:column&gt;
                &lt;/f:facet&gt;
                &lt;h:panelGrid columns="2"&gt;
                    &lt;h:commandLink value="delete" action="#{todoController.delete}"&gt;
                        &lt;f:setPropertyActionListener target="#{todoController.todo}"
                            value="#{todo}" /&gt;
                    &lt;/h:commandLink&gt;
                &lt;/h:panelGrid&gt;
            &lt;/h:column&gt;
        &lt;/h:dataTable&gt;

    &lt;/h:form&gt;
&lt;/f:view&gt;
&lt;/body&gt;
&lt;/html&gt;</code><input role="button" type="button" value="Copy" class="clipboard"></pre>
</div>
</div>
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Using the Facet tag you can create a header for a dataTable component.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>You have added a actionListener. This can call a method which
can receive an object of type ActionEvent. actionListeners are nice
if you want to use the same method with different parameters.
We also use selectOneMenu which allows to select a value from
a pre-defined list.
The main new thing here is h:datatable tag. This tag defines a
table. value can get a list as a parameter and var define the
variable which will be used to create each row. This is very similar
to the foreach loop.
The other new element is the setPropertyActionListener. This
allow you to listener to changes for this link, e.g. a mouse click.
This copies the current selected row into the field todo. The method
delete from the controller will then remove this elements from the
list.</p>
</div>
</div>
<div class="sect2">
<h3 id="todojsf_run"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#todojsf_run">7.7. Run your webapplication</a></h3>
<div class="paragraph">
<p>If you run your webapplication you should be seeing the following:</p>
</div>
<div class="imageblock"><div class="content"><img src="./JSF (JavaServer Faces) - Tutorial_files/xtodo90.gif.pagespeed.ic.C0boLBTs_X.webp" alt="todo90" loading="lazy"></div></div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="resources"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources">8. Links and Literature</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="resources_articles"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources_articles">8.1. Tutorials and Websites</a></h3>
<div class="paragraph">
<p><a href="http://www.jsfcentral.com/">Information about JavaServer Faces</a></p>
</div>
<div class="paragraph">
<p><a href="http://www.ibm.com/developerworks/edu/j-dw-java-jsf1-i.html"> Getting started with JavaServer Faces 1.2, Part 1: Building basic applications</a></p>
</div>
<div class="paragraph">
<p><a href="http://www.ibm.com/developerworks/edu/j-dw-java-jsf2-i.html">Getting started with JavaServer Faces 1.2, Part 2: JSF life cycle, conversion, validation, and phase listeners</a></p>
</div>
<div class="paragraph">
<p><a href="http://java.sun.com/products/jsp/reference/techart/unifiedEL.html">Unified Expression Language</a></p>
</div>
</div>
<div class="sect2">
<h3 id="resources_jsf"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#resources_jsf">8.2. JSF component libraries</a></h3>
<div class="paragraph">
<p>The following lists JSF implementations or JSF extension implementations.</p>
</div>
<div class="paragraph">
<p><a href="http://myfaces.apache.org/">Apache MyFaces</a></p>
</div>
<div class="paragraph">
<p><a href="http://www.jboss.org/jbossrichfaces/">JBoss Rich Faces</a></p>
</div>
<div class="paragraph">
<p><a href="http://www.eclipse.org/webtools/jsf/dev_resource/JSFTutorial-RC3/JSFTools_tutorial.html">Introduction to building JSF with Eclipse</a></p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="vogella-training-and-consulting-support"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#vogella-training-and-consulting-support">9. vogella training and consulting support</a></h2>
<div class="sectionbody">
<div class="about_vogella_container">
    <div class="about_vogella">
    	<a href="https://learn.vogella.com/">
            <img src="./JSF (JavaServer Faces) - Tutorial_files/logo_very_rough_white.svg" alt="Online Training" title="Online Training" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Buttom tutorial&#39;, &#39;clicked&#39;, &#39;Online Training&#39;]);">
			<h1>Online Training</h1>
		</a>
	</div>
	<div class="about_vogella">
    	<a href="https://www.vogella.com/training/">
            <i class="material-icons md-48 white" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Buttom tutorial&#39;, &#39;clicked&#39;, &#39;Onsite Training&#39;]);">
				fitness_center
			</i>
            <h1>Onsite Training</h1>
		</a>
	</div>
	<div class="about_vogella">
    	<a href="https://www.vogella.com/consulting/">
            <i class="material-icons md-48 white" onclick="_gaq.push([&#39;_trackEvent&#39;, &#39;Buttom tutorial&#39;, &#39;clicked&#39;, &#39;Consulting&#39;]);">
				group
			</i>
            <h1>Consulting</h1>
		</a>
	</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="copyright-license-and-source-code"><a class="link" href="https://www.vogella.com/tutorials/JavaServerFaces/article.html#copyright-license-and-source-code">Appendix A: Copyright, License and Source code</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Copyright © 2012-2019 vogella GmbH.
Free use of the software examples is granted under the terms of the <a href="https://www.eclipse.org/legal/epl-2.0">Eclipse Public License 2.0</a>.
This tutorial is published under the  <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.en">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Germany</a> license.</p>
</div>
<div class="paragraph">
<p><a href="https://www.vogella.com/license.html">Licence</a></p>
</div>
<div class="paragraph">
<p><a href="https://www.vogella.com/code/index.html">Source code</a></p>
</div>
<div class="paragraph">
<p><a href="https://www.vogella.com/support.html">Support free tutorials</a></p>
</div>
<img src="./JSF (JavaServer Faces) - Tutorial_files/3e0b13f5c26b4fa68c36fa3a418c2559" width="1" height="1" alt="">
</div>
</div></div><div id="footer"><div id="footer-text">Last updated 18:11 04. Nov 2019</div><!-- Add copy button to code sections -->

<link rel="stylesheet" href="./JSF (JavaServer Faces) - Tutorial_files/A.rouge-thankful_eyes.css.pagespeed.cf.vFmucwOCJ5.css">
<script type="text/javascript" src="./JSF (JavaServer Faces) - Tutorial_files/jquery.js.pagespeed.jm.zp18PNbMUR.js"></script>
<script src="./JSF (JavaServer Faces) - Tutorial_files/clipboard.js+toc.js.pagespeed.jc.sm7u4vp71_.js"></script><script>eval(mod_pagespeed_XqX1eYPlhz);</script>
<script>eval(mod_pagespeed_4ppFrr_rX5);</script>

<script>$(function(){var pre=document.getElementsByTagName('pre');for(var i=0;i<pre.length;i++){var b=document.createElement('input');b.setAttribute('role','button');b.setAttribute('type','button');b.value='Copy';b.className='clipboard';if(pre[i].childNodes.length===1&&pre[i].childNodes[0].nodeType===3){var div=document.createElement('div');div.textContent=pre[i].textContent;pre[i].textContent='';pre[i].appendChild(div);}pre[i].appendChild(b);}new ClipboardJS('.clipboard',{text:function(b){return b.parentNode.innerText;}}).on('success',function(e){e.clearSelection();e.trigger.value='Copied';setTimeout(function(){e.trigger.value='Copy';},2000);});});</script>

</div><script data-pagespeed-no-defer="">//<![CDATA[
(function(){window.pagespeed=window.pagespeed||{};var f=window.pagespeed;function h(c,a,e,b){this.f=c;this.a=a;this.b=e;this.g=b}f.beaconUrl="";
function k(c){var a=c.f,e=window.mod_pagespeed_start,b=Number(new Date)-e,a=a+(-1==a.indexOf("?")?"?":"&"),a=a+"ets="+("load"==c.a?"load:":"unload:");if("beforeunload"!=c.a||!window.mod_pagespeed_loaded){a=a+b+("&r"+c.a+"=");if(window.performance){var b=window.performance.timing,d=b.navigationStart,g=b.requestStart,a=a+(b[c.a+"EventStart"]-d),a=a+("&nav="+(b.fetchStart-d)),a=a+("&dns="+(b.domainLookupEnd-b.domainLookupStart)),a=a+("&connect="+(b.connectEnd-b.connectStart)),a=a+("&req_start="+(g-d))+
("&ttfb="+(b.responseStart-g)),a=a+("&dwld="+(b.responseEnd-b.responseStart)),a=a+("&dom_c="+(b.domContentLoadedEventStart-d));window.performance.navigation&&(a+="&nt="+window.performance.navigation.type);d=-1;b.msFirstPaint?d=b.msFirstPaint:window.chrome&&window.chrome.loadTimes&&(d=Math.floor(1E3*window.chrome.loadTimes().firstPaintTime));d-=g;0<=d&&(a+="&fp="+d)}else a+=b;f.getResourceTimingData&&window.parent==window&&(a+=f.getResourceTimingData());a+=window.parent!=window?"&ifr=1":"&ifr=0";"load"==
c.a&&(window.mod_pagespeed_loaded=!0,(b=window.mod_pagespeed_num_resources_prefetched)&&(a+="&nrp="+b),(b=window.mod_pagespeed_prefetch_start)&&(a+="&htmlAt="+(e-b)));f.criticalCss&&(e=f.criticalCss,a+="&ccis="+e.total_critical_inlined_size+"&cces="+e.total_original_external_size+"&ccos="+e.total_overhead_size+"&ccrl="+e.num_replaced_links+"&ccul="+e.num_unreplaced_links);a+="&dpr="+window.devicePixelRatio;""!=c.b&&(a+=c.b);document.referrer&&(a+="&ref="+encodeURIComponent(document.referrer));a+=
"&url="+encodeURIComponent(c.g);f.beaconUrl=a;(new Image).src=a}}f.c=function(c,a,e,b){var d=new h(c,a,e,b);window.addEventListener?window.addEventListener(a,function(){k(d)},!1):window.attachEvent("on"+a,function(){k(d)})};f.addInstrumentationInit=f.c;})();

pagespeed.addInstrumentationInit('/mod_pagespeed_beacon', 'load', '', 'https://www.vogella.com/tutorials/JavaServerFaces/article.html');
//]]></script></body></html>