<!DOCTYPE html>
<!-- saved from url=(0028)http://zetcode.com/java/mvc/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Java MVC tutorial - introducing Java MVC framework</title>
<link rel="stylesheet" href="./Java MVC tutorial - introducing Java MVC framework_files/format3.css" type="text/css">

<meta name="viewport" content="width=device-width, initial-scale=1">
<meta name="keywords" content="Java, web framework, Java MVC">
<meta name="description" content="Java MVC tutorial is an introductory tutorial to Java MVC
framework. We create a simple web application with Java MVC and deploy it on Tomcat and Glassfish
servers.">
<meta name="author" content="Jan Bodnar">

<script src="./Java MVC tutorial - introducing Java MVC framework_files/sdk.js" async="" crossorigin="anonymous"></script><script id="facebook-jssdk" src="./Java MVC tutorial - introducing Java MVC framework_files/sdk(1).js"></script><script id="twitter-wjs" src="./Java MVC tutorial - introducing Java MVC framework_files/widgets.js"></script><script async="" src="./Java MVC tutorial - introducing Java MVC framework_files/analytics.js"></script><script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-5536206-1', 'auto');
  ga('send', 'pageview');

</script>

<script charset="utf-8" src="./Java MVC tutorial - introducing Java MVC framework_files/button.a657e8de41cd5e7b38cde1f36c9ab9c2.js"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_dialog_advanced{border-radius:8px;padding:10px}.fb_dialog_content{background:#fff;color:#373737}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{left:5px;right:auto;top:5px}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{height:100%;left:0;margin:0;overflow:visible;position:absolute;top:-10000px;transform:none;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{background:none;height:auto;min-height:initial;min-width:initial;width:auto}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{clear:both;color:#fff;display:block;font-size:18px;padding-top:20px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .4);bottom:0;left:0;min-height:100%;position:absolute;right:0;top:0;width:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_mobile .fb_dialog_iframe{position:sticky;top:0}.fb_dialog_content .dialog_header{background:linear-gradient(from(#738aba), to(#2c4987));border-bottom:1px solid;border-color:#043b87;box-shadow:white 0 1px 1px -1px inset;color:#fff;font:bold 14px Helvetica, sans-serif;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:linear-gradient(from(#4267B2), to(#2a4887));background-clip:padding-box;border:1px solid #29487d;border-radius:3px;display:inline-block;line-height:18px;margin-top:3px;max-width:85px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{background:none;border:none;color:#fff;font:bold 12px Helvetica, sans-serif;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #4a4a4a;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f5f6f7;border:1px solid #4a4a4a;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-position:50% 50%;background-repeat:no-repeat;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}</style></head>

<body>

<div class="container">

<div id="wide_ad" class="rtow">
<script async="" src="./Java MVC tutorial - introducing Java MVC framework_files/f.txt"></script>
<!-- 160x600, August 2011 -->
<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9706709751191532" data-ad-slot="2484182563"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div id="ebooks" class="ltow">
    
<h2>Ebooks</h2>

<ul>
<li><a href="http://zetcode.com/ebooks/advancedpyqt5/">PyQt5 ebook</a></li>
<li><a href="http://zetcode.com/ebooks/tkinter/">Tkinter ebook</a></li>
<li><a href="http://zetcode.com/ebooks/sqlitepython/">SQLite Python</a></li>
<li><a href="http://zetcode.com/ebooks/advancedwxpython/">wxPython ebook</a></li>
<li><a href="http://zetcode.com/ebooks/windowsapi/">Windows API ebook</a></li>
<li><a href="http://zetcode.com/ebooks/advancedjavaswing/">Java Swing ebook</a></li>
<li><a href="http://zetcode.com/ebooks/mysqljava/">MySQL Java ebook</a></li>
</ul>

</div>

<div class="content">

<header>

<nav>
<a href="http://zetcode.com/" title="Home">Home</a>
<a class="nav_r" title="Subscribe to ZetCode news" href="http://zetcode.us13.list-manage.com/subscribe?u=9def9ccd4c70dbbaf691f90fc&amp;id=6556210f80">Subscribe</a>
</nav>

</header>


<h1>Java MVC tutorial</h1>

<p>
Java MVC tutorial is an introductory tutorial to Java MVC framework. We create 
a simple web application with Java MVC and deploy it on Tomcat and Glassfish.
</p>


<div class="social">

<div class="fb-like fb_iframe_widget" data-href="http://zetcode.com/java/mvc/" data-layout="button_count" data-action="like" data-show-faces="false" data-share="true" fb-xfbml-state="rendered" fb-iframe-plugin-query="action=like&amp;app_id=&amp;container_width=705&amp;href=http%3A%2F%2Fzetcode.com%2Fjava%2Fmvc%2F&amp;layout=button_count&amp;locale=en_US&amp;sdk=joey&amp;share=true&amp;show_faces=false"><span style="vertical-align: bottom; width: 128px; height: 20px;"><iframe name="f10d6743d308284" width="1000px" height="1000px" title="fb:like Facebook Social Plugin" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" src="./Java MVC tutorial - introducing Java MVC framework_files/like.html" style="border: none; visibility: visible; width: 128px; height: 20px;" class=""></iframe></span></div>

<iframe id="twitter-widget-0" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" class="twitter-share-button twitter-share-button-rendered twitter-tweet-button" style="position: static; visibility: visible; width: 61px; height: 20px;" title="Twitter Tweet Button" src="./Java MVC tutorial - introducing Java MVC framework_files/tweet_button.7303c29a8108bca4ac5c9ef008ed8164.en.html"></iframe>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id))
{js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 
'twitter-wjs');</script>

</div>

<h2>MVC</h2>

<p>
<dfn>Model Miew Controller (MVC)</dfn> architectural pattern separates an application into three parts:
a model, a view, and a controller. The model represents the data in the application, the view 
is the visual representation of the data, and the controller processes and responds to events, 
typically user actions, and may invoke changes on the model. The idea is to separate the data 
access and business logic from data presentation and user interaction, by introducing an 
intermediate component: the controller. 
</p>

<div class="big_hor">
<script async="" src="./Java MVC tutorial - introducing Java MVC framework_files/f.txt"></script>
<!-- big_horizontal -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-9706709751191532" data-ad-slot="2904953388"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<h2>Java MVC</h2>

<p>
<dfn>Java MVC</dfn> is a specification (JSR-371) for a new Java action-based web framework. 
It is an alternative to the traditional component-based JSF. The MVC API is 
layered on top of JAX-RS and integrates with existing Java EE technologies like CDI and Bean Validation.
Eclipse Ozark is an implementation of Java MVC. It currently contains support for RESTEasy, Jersey, and Apache CXF.
</p>

<p>
A MVC <dfn>controller</dfn> is a JAX-RS resource method decorated  by <code>@Controller</code>. MVC controllers 
are responsible for combining data models and views (templates) to produce web application pages.
A <dfn>model</dfn> carries data that is displayed in the view. Models are created with <code>@Named</code> 
annotation or by injecting <code>Models</code> interface.
</p>

<p>
A <dfn>view</dfn> defines the structure of the output page and can
refer to one or more models. It is the responsibility of a view engine to render a view by
extracting the information in the models and producing the output page.
</p>


<h2>Java MVC example in Tomcat</h2>

<p>
We create a simple web application with Java MVC and deploy it on Tomcat. From the JAX-RS libraries,
we chose Jersey.
</p>

<pre class="compact">$ tree
.
├── nb-configuration.xml
├── pom.xml
└── src
    ├── main
    │   ├── java
    │   │   └── com
    │   │       └── zetcode
    │   │           ├── conf
    │   │           │   └── ApplicationConfig.java
    │   │           ├── controller
    │   │           │   └── HelloController.java
    │   │           └── model
    │   │               └── Message.java
    │   ├── resources
    │   └── webapp
    │       ├── index.html
    │       ├── META-INF
    │       │   └── context.xml
    │       └── WEB-INF
    │           ├── beans.xml
    │           └── views
    │               └── hello.jsp
    └── test
        └── java
</pre>

<p>
This is the project structure.
</p>

<div class="codehead">pom.xml</div>
<pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
    
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;com.zetcode&lt;/groupId&gt;
    &lt;artifactId&gt;JavaMvcTomcatEx&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;packaging&gt;war&lt;/packaging&gt;

    &lt;name&gt;JavaMvcTomcatEx&lt;/name&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;
        &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;
    &lt;/properties&gt;
    
    &lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.glassfish.jersey&lt;/groupId&gt;
                &lt;artifactId&gt;jersey-bom&lt;/artifactId&gt;
                &lt;version&gt;2.26&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/dependencyManagement&gt;    
    
    &lt;dependencies&gt;
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jersey.inject&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-hk2&lt;/artifactId&gt;
        &lt;/dependency&gt;            
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-container-servlet&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
        &lt;/dependency&gt;       
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jersey.ext.cdi&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-cdi1x&lt;/artifactId&gt;
        &lt;/dependency&gt;
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.glassfish.jersey.ext&lt;/groupId&gt;
            &lt;artifactId&gt;jersey-bean-validation&lt;/artifactId&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;javax.enterprise&lt;/groupId&gt;
            &lt;artifactId&gt;cdi-api&lt;/artifactId&gt;
            &lt;version&gt;2.0-EDR1&lt;/version&gt;
        &lt;/dependency&gt;
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.jboss.weld.servlet&lt;/groupId&gt;
            &lt;artifactId&gt;weld-servlet-shaded&lt;/artifactId&gt;
            &lt;version&gt;3.0.2.Final&lt;/version&gt;
        &lt;/dependency&gt;              
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;
            &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;
            &lt;version&gt;5.2.2.Final&lt;/version&gt;
        &lt;/dependency&gt;     
        
        &lt;dependency&gt;
            &lt;groupId&gt;javax.mvc&lt;/groupId&gt;
            &lt;artifactId&gt;javax.mvc-api&lt;/artifactId&gt;
            &lt;version&gt;1.0-pr&lt;/version&gt;
        &lt;/dependency&gt;
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.mvc-spec.ozark&lt;/groupId&gt;
            &lt;artifactId&gt;ozark-core&lt;/artifactId&gt;
            &lt;version&gt;1.0.0-m03&lt;/version&gt;
        &lt;/dependency&gt;        
        
        &lt;dependency&gt;
            &lt;groupId&gt;org.mvc-spec.ozark&lt;/groupId&gt;
            &lt;artifactId&gt;ozark-jersey&lt;/artifactId&gt;
            &lt;version&gt;1.0.0-m03&lt;/version&gt;
        &lt;/dependency&gt;          
        
    &lt;/dependencies&gt;

    &lt;build&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
                &lt;version&gt;2.3&lt;/version&gt;
                &lt;configuration&gt;
                    &lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;

        &lt;/plugins&gt;
    &lt;/build&gt;

&lt;/project&gt;
</pre>

<p>
In order to run Java MVC on Tomcat, we need to include several dependencies for
Java MVC, Jersey, Bean Validation, and CDI.
</p>

<div class="codehead">context.xml</div>
<pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context path="/JavaMvcTomcatEx"&gt;

    &lt;Resource name="BeanManager" 
              auth="Container"
              type="javax.enterprise.inject.spi.BeanManager"
              factory="org.jboss.weld.resources.ManagerObjectFactory" /&gt;
    
&lt;/Context&gt;
</pre>

<p>
In the Tomcat's <code>context.xml</code> file, we define the context path and register 
Weld's BeanManager factory. 
</p>

<div class="codehead">beans.xml</div>
<pre class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;beans xmlns="http://xmlns.jcp.org/xml/ns/javaee"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
http://xmlns.jcp.org/xml/ns/javaee/beans_1_1.xsd"
       bean-discovery-mode="all"&gt;
    
&lt;/beans&gt;
</pre>

<p>
In the <code>WEB-INF</code> directory, we have an empty <code>beans.xml</code>
file. It is a deployment descriptor for CDI. It can be used for configuring interceptors, 
decorators, and other things. Even if we do no configurations, we need to add 
an empty <code>beans.xml</code> for registering CDI.
</p>

<div class="codehead">ApplicationConfig.java</div>
<pre class="code">package com.zetcode.conf;

import com.zetcode.controller.HelloController;
import java.util.HashSet;
import java.util.Set;
import javax.ws.rs.ApplicationPath;
import javax.ws.rs.core.Application;

@ApplicationPath("mvc")
public class ApplicationConfig extends Application {

    @Override
    public Set&lt;Class&lt;?&gt;&gt; getClasses() {
        Set&lt;Class&lt;?&gt;&gt; set = new HashSet&lt;&gt;();
        set.add(HelloController.class);
        return set;
    }
}
</pre>

<p>
<code>ApplicationConfig</code> is the application configuration class. It is possible to 
omit the <code>web.xml</code> file since Servlet 3.0. In Jersey, we create 
a configuration class that extends the abstract <code>Application</code>
and use the <code>@ApplicationPath</code> annotation. The <code>Application</code>
defines the components of a JAX-RS application and supplies additional meta-data. 
Here we register resource classes, providers, or properties the application needs.
</p>

<pre class="explanation">set.add(HelloController.class);
</pre>

<p>
We register the <code>HelloController</code>.
</p>

<div class="codehead">Message.java</div>
<pre class="code">package com.zetcode.model;

import javax.enterprise.context.RequestScoped;
import javax.inject.Named;

@Named("message")
@RequestScoped
public class Message {
    
    private String text;

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }
}
</pre>

<p>
This is a model class. It holds data for the view. The <code>@Named</code>
annotation gives a model a name. We will refer to the model in the view.
The <code>@RequestScoped</code> makes the model valid for the life of the request.
</p>


<div class="codehead">HelloController.java</div>
<pre class="code">package com.zetcode.controller;

import com.zetcode.model.Message;
import javax.inject.Inject;
import javax.mvc.annotation.Controller;
import javax.ws.rs.GET;
import javax.ws.rs.Path;

@Path("hello")
@Controller
public class HelloController {

    @Inject
    private Message message;

    @GET
    public String hello() {
        
        message.setText("Today is a sunny day");
        
        return "hello.jsp";
    }
}
</pre>

<p>
A class decorated with a <code>@Controller</code> is a Java MVC controller.
With <code>@Path</code>, it is bound to the <code>hello</code> path segment.
</p>

<pre class="explanation">@Inject
private Message message;
</pre>

<p>
With <code>@Inject</code>, we inject the model object. It carries
data from the controller to the view.
</p>

<pre class="explanation">@GET
public String hello() {
    
    message.setText("Today is a sunny day");
    
    return "hello.jsp";
}
</pre>

<p>
The <code>hello()</code> method reacts to a GET request. It sets data
to the model and returns a view. A string returned from a controller method
is interpreted as a view path. The view engine's default directory for
views is <code>WEB-INF/views</code>.
</p>

<div class="codehead">hello.jsp</div>
<pre class="code">&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;title&gt;JSP Page&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;
           The message: ${message.text}
        &lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
This is the view. It displays the data with the <code>${}</code> syntax.
</p>

<div class="codehead">index.html</div>
<pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Home Page&lt;/title&gt;
        &lt;meta charset="UTF-8"&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;p&gt;
            &lt;a href="mvc/hello"&gt;Get message&lt;/a&gt;
        &lt;/p&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>
This is a home page. It contains a link to call the controller.
</p>


<h2>Java MVC example in Glassfish</h2>

<p>
To run the example on Glassfish, we do not need the <code>context.xml</code> file
and we need the following three dependencies:
</p>

<pre class="compact">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;javax&lt;/groupId&gt;
        &lt;artifactId&gt;javaee-web-api&lt;/artifactId&gt;
        &lt;version&gt;7.0&lt;/version&gt;
        &lt;scope&gt;provided&lt;/scope&gt;
    &lt;/dependency&gt;
    
    &lt;dependency&gt;
        &lt;groupId&gt;javax.mvc&lt;/groupId&gt;
        &lt;artifactId&gt;javax.mvc-api&lt;/artifactId&gt;
        &lt;version&gt;1.0-pr&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.mvc-spec.ozark&lt;/groupId&gt;
        &lt;artifactId&gt;ozark-jersey&lt;/artifactId&gt;
        &lt;version&gt;1.0.0-m03&lt;/version&gt;
    &lt;/dependency&gt;    
&lt;/dependencies&gt;
</pre>

<p>
Glasfish already contains many libraries that are not present in Tomca. No other modifications are necessary.
</p>

<p>
In this tutorial, we have introduced the Java MVC framework. 
You might also be interested in the related tutorials: <a href="http://zetcode.com/lang/java/">Java tutorial</a>, 
<a href="http://zetcode.com/articles/javamvcthymeleaf/">Java MVC Thymeleaf tutorial</a>,
<a href="http://zetcode.com/java/play/">Introduction to Play</a>, <a href="http://zetcode.com/java/stripes/">Introduction to Stripes</a>, 
or <a href="http://zetcode.com/java/spark/">Java Spark tutorial</a>.
</p>

<div class="big_hor">
<script async="" src="./Java MVC tutorial - introducing Java MVC framework_files/f.txt"></script>
<!-- big_horizontal -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-9706709751191532" data-ad-slot="2904953388"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<footer>

<nav>
<a href="http://zetcode.com/">Home</a>  <a href="http://zetcode.com/java/mvc/#">Top of Page</a>
</nav>

<div class="signature">
<a href="http://zetcode.com/">ZetCode</a> last modified May 21, 2018  <span class="copyright">© 2007 - 2020 Jan Bodnar</span>
<span>Follow on <a href="https://www.facebook.com/zetcode7/">Facebook</a></span>
</div>

</footer>

</div> <!-- content -->

</div> <!-- container -->

<!-- Silktide Cookie -->
<script>
    window.cookieconsent_options = {"message":"This website uses cookies to ensure you get the best experience on our website",
    "dismiss":"Got it!","learnMore":"More info","link":null,"theme":"dark-floating"};
</script>

<script src="./Java MVC tutorial - introducing Java MVC framework_files/cookieconsent.min.js"></script>

<div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; width: 0px; height: 0px;"><div></div></div></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>



<iframe scrolling="no" frameborder="0" allowtransparency="true" src="./Java MVC tutorial - introducing Java MVC framework_files/widget_iframe.7303c29a8108bca4ac5c9ef008ed8164.html" title="Twitter settings iframe" style="display: none;"></iframe></body></html>