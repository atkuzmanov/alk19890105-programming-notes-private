<!DOCTYPE html>
<!-- saved from url=(0055)https://dzone.com/articles/using-jaxb-for-xml-with-java -->
<html xmlns:ng="http://angularjs.org" id="ng-app" lang="en" ng-app="TH" class="ng-scope"><head ng-controller="DZHeadController" class="ng-scope"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="description" ng-attr-content="{{ service.description }}" content="This lesson in JAXB considers how to configure it and use it for marshalling and unmarshalling objects to and from XML in your Java projects.">
    <meta name="keywords" ng-attr-content="{{ service.keywords }}" content="java,marshalling and unmarshalling,jaxb,tutorial">

    <meta property="og:description" ng-attr-content="{{ service.description }}" content="This lesson in JAXB considers how to configure it and use it for marshalling and unmarshalling objects to and from XML in your Java projects.">

    <meta ng-attr-content="{{ service.noIndex ? &#39;noindex&#39; : &#39;&#39; }}" ng-attr-name="{{ service.noIndex ? &#39;robots&#39; : &#39;&#39; }}" name="" content="">

    <meta property="og:site_name" ng-attr-content="{{ service.siteName }}" content="dzone.com">
    <meta property="og:title" ng-attr-content="{{ service.title }}" content="Using JAXB for XML With Java - DZone Java">
    <meta property="og:url" ng-attr-content="{{ service.canonical }}" content="https://dzone.com/articles/using-jaxb-for-xml-with-java">
    <!-- ngIf: service.img --><meta ng-if="service.img" ng-attr-content="{{ service.img }}" property="og:image" content="//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg" class="ng-scope"><!-- end ngIf: service.img -->
    <!-- ngIf: service.type --><meta ng-if="service.type" ng-attr-content="{{ service.type }}" property="og:type" content="tutorial" class="ng-scope"><!-- end ngIf: service.type -->

    <meta name="twitter:site" content="@DZoneInc">
    <!-- ngIf: service.twitterImage -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:description" ng-attr-content="{{ service.description }}" content="This lesson in JAXB considers how to configure it and use it for marshalling and unmarshalling objects to and from XML in your Java projects.">
    <meta name="twitter:title" ng-attr-content="{{ service.title }}" content="Using JAXB for XML With Java - DZone Java">

    <!-- ngIf: service.wordCount --><meta ng-if="service.wordCount" property="article:wordcount" ng-attr-content="{{service.wordCount}}" content="2257" class="ng-scope"><!-- end ngIf: service.wordCount -->
    <meta name="referrer" content="origin">
    <meta name="google-site-verification" content="kndbhxcupfEqWmZclhCpB6vlgOs7QSmx2UHAGGnP2mA">

    <link rel="dns-prefetch" href="https://www.googletagservices.com/">
    <link rel="dns-prefetch" href="https://secure.adnxs.com/">
    <link rel="dns-prefetch" href="https://hn.inspectlet.com/">
    <link rel="dns-prefetch" href="https://inspectletws.herokuapp.com/">
    <link rel="dns-prefetch" href="https://www.google-analytics.com/">
    <link rel="dns-prefetch" href="https://a.optnmstr.com/">
    <link rel="dns-prefetch" href="https://ajax.googleapis.com/">
    <link rel="dns-prefetch" href="https://cdn.inspectlet.com/">
    <link rel="dns-prefetch" href="https://csi.gstatic.com/">

    <link rel="image_src" ng-href="//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg" href="https://dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg">

    <!-- ngIf: service.prevPage -->
    <!-- ngIf: service.nextPage -->
    <link rel="icon" type="image/x-icon" href="https://dzone.com/themes/dz20/images/favicon.png">

    <title ng-bind="service.title" class="ng-binding">Using JAXB for XML With Java - DZone Java</title>

    <meta name="df-verify" content="df0d76632b4543">

<link rel="stylesheet" type="text/css" href="./Using JAXB for XML With Java - DZone Java_files/combined.css" charset="utf-8"><link rel="stylesheet" type="text/css" href="./Using JAXB for XML With Java - DZone Java_files/combined(1).css" charset="utf-8"><script src="./Using JAXB for XML With Java - DZone Java_files/pubads_impl_rendering_2020013001.js"></script><script type="text/javascript" async="" src="./Using JAXB for XML With Java - DZone Java_files/tag.aspx"></script><script type="text/javascript" async="" src="./Using JAXB for XML With Java - DZone Java_files/js"></script><script type="text/javascript" async="" src="./Using JAXB for XML With Java - DZone Java_files/analytics.js"></script><script type="text/javascript" async="" src="./Using JAXB for XML With Java - DZone Java_files/linkid.js"></script><link rel="preload" href="./Using JAXB for XML With Java - DZone Java_files/f.txt" as="script"><script type="text/javascript" src="./Using JAXB for XML With Java - DZone Java_files/f.txt"></script><link rel="preload" href="./Using JAXB for XML With Java - DZone Java_files/f(1).txt" as="script"><script type="text/javascript" src="./Using JAXB for XML With Java - DZone Java_files/f(1).txt"></script><script src="./Using JAXB for XML With Java - DZone Java_files/pubads_impl_2020013001.js" async=""></script><link rel="prefetch" href="https://tpc.googlesyndication.com/safeframe/1-0-37/html/container.html"></head>
<body>

    <script async="" src="./Using JAXB for XML With Java - DZone Java_files/gtm.js"></script><script async="" src="./Using JAXB for XML With Java - DZone Java_files/analytics.js"></script><script async="" type="text/javascript" src="./Using JAXB for XML With Java - DZone Java_files/gpt.js"></script><script type="application/ld+json">
        {
            "@context": "https://schema.org",
            "@type": "Organization",
            "url": "https://dzone.com",
            "logo": "https://dzone.com/themes/dz20/images/dz_cropped.png",
            "contactPoint": [{
                "@type": "ContactPoint",
                "telephone": "+1-919-678-0300",
                "contactType": "customer service"
            }]
        }
    </script>

    <div class="ng-toast ng-toast--right ng-toast--bottom ng-toast--animate-fade"><ul class="ng-toast__list"><!-- ngRepeat: message in messages --></ul></div>

    <div class="container-fluid header" th-element="header" th-element-groups="[]" ng-hide="$root.isHidden(&#39;header&#39;)" data-th-element-name="header"><div class="row mainHeaderRow" th-element="mainHeaderRow" th-element-groups="[&#39;header&#39;]" ng-hide="$root.isHidden(&#39;mainHeaderRow&#39;)" data-th-element-name="mainHeaderRow"><div class="col-md-12 mainHeader headerHeaderV2 oUhbWOfRPSwBoUhM ng-scope" th-element="mainHeader" th-element-groups="[&#39;header&#39;,&#39;mainHeaderRow&#39;]" ng-hide="$root.isHidden(&#39;mainHeader&#39;)" data-th-element-name="mainHeader" data-th-widget="header.headerV2" data-widget-header-header-v2="" ng-controller="mainHeader" style="height: 1px; margin-top: 0px;">
<script type="text/ng-template" id="like-article.html">
        <div class="dz-like"
             ng-class='{liked: status.liked}'
             ng-click='like()'

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like ({{ status.score }})</span>
</a>
</div>
</script>

<script type="text/ng-template" id="refcard-save.html">
    <button type="button" ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}"
            ng-click="save()" class="btn btn-save btn-lg"><span class="save-title">Save</span><span ng-if="status.saved"
                                                                                                    class="d-letter">D</span>
    </button>
</script>

<div class="header-top">
    <div class="header-container">
        <div class="pull-left logo-container">
            <div class="logo">
                <a class="inner" href="https://dzone.com/"><img src="./Using JAXB for XML With Java - DZone Java_files/dz_cropped.png" alt="DZone"></a>
            </div>

        <div class="active-portal"><a href="https://dzone.com/java-jdk-development-tutorials-tools-news">Java Zone</a></div>
        </div>

        <div class="pull-right login-and-search">

                <div class="dz-intro">Over a million developers have joined DZone.</div>
                <!-- ngIf: !$root.user.authenticated --><div class="mobile-invisible sign-in-join ng-scope" ng-if="!$root.user.authenticated"><a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#" ng-click="login()">Log In</a> <span class="dz-intro-span">/</span> <a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#" ng-click="signIn()">Join</a></div><!-- end ngIf: !$root.user.authenticated -->
                <button class="join-icon"><!-- ngIf: !$root.user.authenticated --><i class="icon-user ng-scope" ng-if="!$root.user.authenticated" ng-click="login()"></i><!-- end ngIf: !$root.user.authenticated --></button>
                <div class="headerSearch">
                    <button class="icon-search dropdown-toggle" ng-click="focusSearch()" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li>
                            <form class="form-wrapper ng-pristine ng-invalid ng-invalid-required">
                                <label for="search" class="sr-only">Search</label>
                                <input id="search" role="search" ng-model="searchT" type="text" placeholder="Search" required="" class="ng-pristine ng-untouched ng-invalid ng-invalid-required">
                                <input type="button" value="Search" class="btn btn-action search-button" ng-click="allResults()" ng-disabled="searchT.length &lt; 3" disabled="disabled">
                            </form>
                        </li>

                      <div class="results-area">
                          <div class="col-md-12"><th-loader flag="loading" class="ng-isolate-scope"><div ng-show="flag" class="loading-indicator ng-hide"><i class="icon-spin6 animate-spin"></i></div></th-loader></div>
                          <!-- ngRepeat: node in nodes -->
                      </div>

                      <!-- ngIf: totalResults || haveResults -->
                    </ul>
                </div>

        </div>
    </div>
</div>

<div class="header-bottom">



    <ul class="portals header-container scrollable-ul">
            <li>
                <a href="https://dzone.com/refcardz" id="header-refcardz">
                    <em>
                      Refcardz
                    </em>
                </a>
            </li>
            <li>
                <a href="https://dzone.com/research" id="header-research">
                    <em>
                      Research
                    </em>
                </a>
            </li>
            <li>
                <a href="https://dzone.com/webinars" id="header-webinars">
                    <em>
                      Webinars
                    </em>
                </a>
            </li>
            <li class="last-portal-link">
                <a href="https://dzone.com/portals" id="header-portals" ng-click="toggleZones(&#39;/portals&#39;, $event)">
                    <em>
                      Zones
                      <span class="collapsible-toggle ">
                        <i class="icon-angle-down"></i>
                        <i class="icon-angle-up"></i>
                      </span>
                    </em>
                </a>
            </li>

        <li class="separator" aria-hidden="true" style="color: #d9dcdd">|</li>
        <li class="portal-topics ">
          <ul>
                <li>
                    <a href="https://dzone.com/agile-methodology-training-tools-news" id="header-2" ng-class="{&#39;active-state&#39;: isActivePortal(2)}">
                        Agile
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/artificial-intelligence-tutorials-tools-news" id="header-4001" ng-class="{&#39;active-state&#39;: isActivePortal(4001)}">
                        AI
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/big-data-analytics-tutorials-tools-news" id="header-3" ng-class="{&#39;active-state&#39;: isActivePortal(3)}">
                        Big Data
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/cloud-computing-tutorials-tools-news" id="header-4" ng-class="{&#39;active-state&#39;: isActivePortal(4)}">
                        Cloud
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/database-sql-nosql-tutorials-tools-news" id="header-5" ng-class="{&#39;active-state&#39;: isActivePortal(5)}">
                        Database
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/devops-tutorials-tools-news" id="header-6" ng-class="{&#39;active-state&#39;: isActivePortal(6)}">
                        DevOps
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/enterprise-integration-training-tools-news" id="header-7" ng-class="{&#39;active-state&#39;: isActivePortal(7)}">
                        Integration
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/iot-developer-tutorials-tools-news-reviews" id="header-8" ng-class="{&#39;active-state&#39;: isActivePortal(8)}">
                        IoT
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/java-jdk-development-tutorials-tools-news" id="header-1" class="active-state" ng-class="{&#39;active-state&#39;: isActivePortal(1)}">
                        Java
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/microservices-news-tutorials-tools" id="header-6001" ng-class="{&#39;active-state&#39;: isActivePortal(6001)}">
                        Microservices
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/open-source-news-tutorials-tools" id="header-7001" ng-class="{&#39;active-state&#39;: isActivePortal(7001)}">
                        Open Source
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/apm-tools-performance-monitoring-optimization" id="header-10" ng-class="{&#39;active-state&#39;: isActivePortal(10)}">
                        Performance
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/application-web-network-security" id="header-2001" ng-class="{&#39;active-state&#39;: isActivePortal(2001)}">
                        Security
                    </a>
                </li>
                <li>
                    <a href="https://dzone.com/web-development-programming-tutorials-tools-news" id="header-11" ng-class="{&#39;active-state&#39;: isActivePortal(11)}">
                        Web Dev
                    </a>
                </li>
          </ul>
        </li>
    </ul>
</div></div></div></div><div class="container-fluid body withSlider" th-element="body" th-element-groups="[]" ng-hide="$root.isHidden(&#39;body&#39;)" data-th-element-name="body"><div class="row mainContentRow" th-element="mainContentRow" th-element-groups="[&#39;body&#39;]" ng-hide="$root.isHidden(&#39;mainContentRow&#39;)" data-th-element-name="mainContentRow"><div class="col-md-12 announcementBar1 announcementBar oUhbYlrRaqMaoUhM ng-scope" th-element="announcementBar1" th-element-groups="[&#39;body&#39;,&#39;mainContentRow&#39;]" ng-hide="$root.isHidden(&#39;announcementBar1&#39;)" data-th-element-name="announcementBar1" data-th-widget="announcementBar" data-widget-announcement-bar="" ng-controller="announcementBar1" style="margin-bottom: 10px;"><!-- ngIf: announcement && toShow --><div ng-if="announcement &amp;&amp; toShow" back-img="" hasimage="false" img="https://dz2cdn1.dzone.com/notificationImage.html?id=4162299" imgbackup="/notificationImage.html?id=4162299" id="acontainer" class="ann-container ng-scope" style="margin-right: -310px; margin-left: -310px;">
    <div class="ann-body ng-binding">What do you think the future of databases looks like?</div><!-- ngIf: announcement.link --><a ng-if="announcement.link" class="ann-link ng-binding ng-scope" ng-click="track(announcement.id)" ng-ref="https://www.surveygizmo.com/s3/5423607/DZone-2020-Cloud-Database-Survey">Take the Survey<span class="icon-right-dir"></span></a><!-- end ngIf: announcement.link -->
</div><!-- end ngIf: announcement && toShow -->
</div><div class="col-md-12 articleContent4 articleContent oUhbblYOaqbcblYOaqbcC ng-scope" th-element="articleContent4" th-element-groups="[&#39;body&#39;,&#39;mainContentRow&#39;]" ng-hide="$root.isHidden(&#39;articleContent4&#39;)" data-th-element-name="articleContent4" data-th-widget="article.content" data-widget-article-content="" header-change-trigger="" ng-controller="articleContent4">
<script type="text/ng-template" id="like-article.html">
        <div class="dz-like"
             ng-class='{liked: status.liked}'
             ng-click='like()'

<a href="#">
    <i ng-class="{'icon-thumbs-up-alt': status.liked, 'icon-thumbs-up liked': !status.liked}"></i>
    <span>Like ({{ status.score }})</span>
</a>
</div>
</script>

<script type="text/ng-template" id="link-article-save.html">
    <div class="save "
         ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}"
         ng-click="save()"><span
                class="action-label">
                {{ status.saved ? 'Saved' : 'Save' }}</span></div>
</script>

<script type="text/ng-template" id="like-article.html">
    <div class="dz-like" ng-class="{'icon-thumbs-up-alt liked': status.liked, 'icon-thumbs-up': !status.liked}" ng-click="like()"><span class="action-label"><span>Like</span><span ng-if="status.liked" class="d-letter">d</span></span>
        <a href="#">
            <span>({{ status.score }})</span>
        </a>
    </div>
</script>

<!-- ngIf: articles[0].id == 2042990 --><div class="articles-wrap ng-scope" ng-if="articles[0].id == 2042990">
        <!-- ngIf: ads.top.show() && articles[0].readyForAd --><div ng-if="ads.top.show() &amp;&amp; articles[0].readyForAd" class="ad-container ng-scope">
            <div dc-slot="ads.top.slot()" tags="ads.top.tags(articles[0])" size="ads.top.size()" class="ng-isolate-scope" id="div-gpt-ad-1435246566686-0" style=""><div id="google_ads_iframe_/2916070/dz2_article_billboard_new_0__container__" style="border: 0pt none; width: 728px; height: 90px;"></div></div>
        </div><!-- end ngIf: ads.top.show() && articles[0].readyForAd -->


    <div>
        <th-if-scroll relative-to="top" from="0" to="50" callback="activateT(articles[0])" class="ng-isolate-scope"></th-if-scroll>
    </div>


    <!-- ngIf: articles[0].id == 2042990 --><div class="article-stream widget-top-border ng-scope" ng-class="{&#39;widget-top-border&#39;: articles[0].published }" ng-if="articles[0].id == 2042990">
    <div class="social-media-icons mobile-only ng-scope" follow-dzone="">
<div class="top-social">
    <p>Let's be friends:</p>
    <ul class="icons-only ng-isolate-scope" ng-class="{open: isOpen}" click-outside="outside()">
        <li class="rss-icon" id="rss-spotlight-1">
            <a href="https://dzone.com/pages/feeds"><i class="icon-rss-1"></i></a>
        </li>
        <li class="twitter-icon">
            <a href="https://twitter.com/DZoneInc" target="_blank"><i class="icon-twitter"></i></a>
        </li>
        <li class="facebook-icon">
            <a href="https://www.facebook.com/DZoneInc" target="_blank"><i class="icon-facebook-1"></i></a>
        </li>
        <li class="google-icon">
            <a href="https://plus.google.com/+dzone/posts" target="_blank"><i class="icon-gplus"></i></a>
        </li>
        <li class="linkedin-icon">
            <a href="https://www.linkedin.com/company/devada-team" target="_blank"><i class="icon-linkedin-1"></i></a>
        </li>

            <ul class="social-dropdown dropdown-menu">
                <li class="rss" id="rss-spotlight"><a href="https://dzone.com/pages/feeds"><i class="icon-rss-squared"></i> <span>RSS Feed</span></a></li>
                <li class="twitter" id="twitter-spotlight">
                    <a href="https://twitter.com/DZoneInc" class="twitter-follow-button" data-show-count="true" data-show-screen-name="false">Follow @DZoneInc</a>
                </li>
                <li class="fb-like" id="fb-spotlight" data-href="https://www.facebook.com/DZoneInc" data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></li>
                <li class="google-plus" id="gplus-spotlight">
                    <div class="g-follow" data-annotation="bubble" data-height="20" data-href="https://plus.google.com/108688665090780146602" data-rel="publisher"></div>
                </li>
                <li class="linkedin" id="linkedin-spotlight">
                    <script type="IN/FollowCompany" data-id="114427" data-counter="right"></script></li></ul></ul></div></div>
        <div ng-show="!edition || (width &gt; 1024 &amp;&amp; edition)" class="content-right-images ng-isolate-scope" header-affix-element="div.content" style="position: fixed; top: 96px; left: 1269.5px; width: 302px;">

           <!--Sponsor Logo-->
           <!-- ngIf: articles[0].readyForAd && (width > 1024) --><div class="sidebar-ad ng-scope ng-isolate-scope" ng-if="articles[0].readyForAd &amp;&amp; (width &gt; 1024)" dc-slot="ads.sl1.slot(articles[0], 0)" tags="ads.sl1.tags(articles[0], 0)" size="ads.sl1.size(articles[0], 0)" style="border: 0px;" id="div-gpt-ad-1435246566686-1"><div id="google_ads_iframe_/2916070/dz2_sponsor_logo_0__container__" style="border: 0pt none; width: 100px; height: 100px;"></div></div><!-- end ngIf: articles[0].readyForAd && (width > 1024) -->

            <!-- ngIf: articles[0].readyForAd && (width > 1024) --><div class="sidebar-ad ng-scope ng-isolate-scope" ng-if="articles[0].readyForAd &amp;&amp; (width &gt; 1024)" dc-slot="ads.sb1.slot(articles[0], 0)" tags="ads.sb1.tags(articles[0], 0)" size="ads.sb1.size(articles[0], 0)" id="div-gpt-ad-1435246566686-2" style=""><div id="google_ads_iframe_/2916070/dz2_article_halfpage_new_0__container__" style="border: 0pt none; width: 300px; height: 250px;"></div></div><!-- end ngIf: articles[0].readyForAd && (width > 1024) -->

            <!-- ngIf: articles[0].readyForAd && 0 > 1 && !articles[0].partner.isSponsoringArticle && (width > 1024) -->

        </div>

            <div id="article-2042990">
                <script type="application/ld+json">
                    {
                        "@context": "http://schema.org",
                        "@type": "Article",
                        "headline": "Using JAXB for XML With Java",
                        "author": {
                            "@type": "Person",
                            "name": "John Thompson"
                        },
                        "audience": "software developers",
                        "keywords": "java,marshalling and unmarshalling,jaxb,tutorial",
                        "timeRequired": "PT6M",
                        "commentCount": 0,
                        "wordCount": "1455",
                        "accessMode": "textual, visual",
                        "dateCreated": "2018-02-11T06:01:03Z",
                        "datePublished": "2018-02-11T00:00:00Z",
                        "dateModified": "2018-02-11T06:01:03Z",
                        "articleSection": "java-jdk-development-tutorials-tools-news",
                        "publisher": {
                            "@type": "Organization",
                            "name": "DZone",
                            "url": "https://dzone.com",
                            "logo": {
                                "@type": "ImageObject",
                                "url": "https://dzone.com/themes/dz20/images/dz_cropped.png"
                            }
                        },
                        "articleBody": "Java Architecture for XML Binding (JAXB) is a library that helps bind XML schemas and Java representations. JAXB provides you with a mechanism to marshal Java objects into XML and the other way around – unmarshal XML into Java objects. XML is an industry standard for defining the contents of your message. XML, along with Java, are complementary technologies to exchange data across the Internet. When you work with XML, you need a way to take an XML file, then convert it into some sort of data structure, which your program can manipulate. You also need to serialize the state of your Java objects into XML. JAXB is one library that performs such marshalling and unmarshalling operations. In this post, I will discuss on how to marshal Java objects into XML and the other way around using JAXB. Using JAXB to Marshal Java Objects to XML Let us consider a scenario where we need to model a product for an e-commerce store. Apart from fields, such as product Id, description, image URL, and price, a Product object is also composed of a User object that represents the user who adds the product to the store. Our intent is to marshal the Product object, along with its composed User object into XML by using JAXB. We can start by creating a User POJO to model the user. User.java: package guru.springframework.blog.domain; public class User { private Long id; private String name; private String email; public User() { } public User(Long id, String name, String email) { this.id = id; this.name = name; this.email = email; } public Long getId() { return id; } public User setId(Long id) { this.id = id; return this; } public String getName() { return name; } public User setName(String name) { this.name = name; return this; } public String getEmail() { return email; } public User setEmail(String email) { this.email = email; return this; } @Override public String toString() { final StringBuffer sb = new StringBuffer(&quot;User{&quot;); sb.append(&quot;id=&quot;).append(id); sb.append(&quot;, name='&quot;).append(name).append('\''); sb.append(&quot;, email='&quot;).append(email).append('\''); sb.append('}'); return sb.toString(); } } User is a simple POJO with the id, name, and email fields, along with their corresponding getter and setter methods. Next, we will create the Product POJO. While creating this POJO, we will use annotations introduced in JAXB 2.0 to control how our Product object is marshalled to XML. Note: As of JDK 1.6, JAXB is bundled with the JDK. Therefore, you don’t need to add any dependency for it. The code of the Product POJO is below. Product.java package guru.springframework.blog.domain; import javax.xml.bind.annotation.*; import java.math.BigDecimal; @XmlRootElement(name = &quot;product&quot;) //@XmlAccessorType(XmlAccessType.FIELD) public class Product { @XmlAttribute(name = &quot;id&quot;) private String productId; @XmlElement(name = &quot;description&quot;) private String description; @XmlElement(name = &quot;imageUrl&quot;) private String imageUrl; @XmlElement(name = &quot;price&quot;) private BigDecimal price; @XmlElement(name = &quot;createdBy&quot;) private User createdBy; public Product(){} public Product(String productId, String description, String imageUrl, BigDecimal price, User createdBy) { this.productId = productId; this.description = description; this.imageUrl = imageUrl; this.price = price; this.createdBy = createdBy; } @Override public String toString() { return &quot;Product{&quot; + &quot;\n productId='&quot; + productId + '\'' + &quot;,\n description='&quot; + description + '\'' + &quot;,\n imageUrl='&quot; + imageUrl + '\'' + &quot;,\n price=&quot; + price + &quot;,\n createdBy=&quot; + createdBy +&quot;\n&quot;+ '}'; } } In this Product class, we used a number of JAXB annotations. They are: @XmlRootElement: This annotation is used at the top level class to indicate the root element in the XML document. The name attribute in the annotation is optional. If not specified, the class name is used as the root XML element in the document. @XmlAttribute: This annotation is used to indicate the attribute of the root element. @XmlElement: This annotation is used on the properties of the class that will be the sub-elements of the root element. The Product POJO is now ready to be marshalled into XML. To do so, let us write a JUnit test class. If you are new to JUnit, I suggest going through my Unit Testing with JUnit series. The test class is: ProductToXmlTest.java: package guru.springframework.blog.marshal; import guru.springframework.blog.domain.Product; import guru.springframework.blog.domain.User; import org.junit.After; import org.junit.Before; import org.junit.Test; import javax.xml.bind.JAXBContext; import javax.xml.bind.JAXBException; import javax.xml.bind.Marshaller; import java.io.File; import java.io.FileNotFoundException; import java.math.BigDecimal; public class ProductToXmlTest { private Product product; @Before public void setUp() { long l = 10; Long longId = new Long(l); User user = new User(longId, &quot;John&quot;, &quot;john@springframework.guru&quot;); product = new Product(&quot;PO1&quot;, &quot;Spring Guru Mug&quot;, &quot;https://springframework.guru/wp-content/uploads/2015/04/spring_framework_guru_shirt-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg&quot;, new BigDecimal(18.95), user); } @After public void tearDown() { product = null; } @Test public void testObjectToXml() throws JAXBException, FileNotFoundException { JAXBContext jaxbContext = JAXBContext.newInstance(Product.class); Marshaller marshaller = jaxbContext.createMarshaller(); marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true); marshaller.marshal(product, new File(&quot;product.xml&quot;)); marshaller.marshal(product, System.out); } } In this code: Line 19 – Line 24: Instantiates and initializes a User and a Product object in the setup() method marked as @Before. Line 33: The JAXBContext.newInstance() method obtains a JAXBContext for the Product class that you want to marshal. JAXBContext provides the entry point for the JAXB API. Line 34: Creates a Marshaller through a call to the createMarshaller() method of JAXBContext. In JAXB, the Marshaller class governs the process of marshalling Java objects into XML data through its various marshalling methods. Line 35: Configures the Marshaller. The true value of the JAXB_FORMATTED_OUTPUT property instructs the Marshaller to generate the XML with proper indentation. Line 36: Calls the marshal() method on the Marshaller with the initialized Product object and the file to write the XML. Line 37: Marshals the object to the “standard” output stream. On running the ProductToXmlTest class, a product.xml file gets generated. The output of the test is: Using JAXB to Unmarshall XML into Java Objects Unmarshalling XML with JAXB to a Java object involves creating an Unmarshaller on the JAXBContext and calling the unmarshal() method. This method accepts the XML file to unmarshal. The JUnit test class to unmarshal the generated product.xml back to the Product and User objects is this: XmlToProductTest.java: package guru.springframework.blog.unmarshal; import guru.springframework.blog.domain.Product; import guru.springframework.blog.domain.User; import org.junit.After; import org.junit.Before; import org.junit.Test; import javax.xml.bind.JAXBContext; import javax.xml.bind.JAXBException; import javax.xml.bind.Marshaller; import javax.xml.bind.Unmarshaller; import java.io.File; import java.io.FileNotFoundException; import java.math.BigDecimal; public class XmlToProductTest { private Product product; @Test public void testXmlToObject() throws JAXBException, FileNotFoundException { File file = new File(&quot;product.xml&quot;); JAXBContext jaxbContext = JAXBContext.newInstance(Product.class); Unmarshaller unmarshaller = jaxbContext.createUnmarshaller(); product = (Product) unmarshaller.unmarshal(file); System.out.println(product); } } In this XmlToProductTest class, a JAXBContext initialized with Product is used. The createUnmarsheller() method returns an Unmarshaller. A JAXB Unmarshaller governs the process of unmarhshalling XML data into a Java object tree. Finally, the unmarshal() method unmarshals the File object for product.xml into the Product POJO. The output of running the test is this: Handling Collections Often you will need to marshal Java collection objects, such as List, Set, and Map to XML, and also unmarshal XML back to collection objects. Consider our current application, where we now need to work with a list of products. To model the new requirement, let us create a Products class. The code of the Products class is: Products.java: package guru.springframework.blog.domain; import javax.xml.bind.annotation.XmlElement; import javax.xml.bind.annotation.XmlRootElement; import java.util.ArrayList; import java.util.List; @XmlRootElement(name = &quot;products&quot;) public class Products { List&lt;Product&gt; products; public List&lt;Product&gt; getProducts() { return products; } @XmlElement(name = &quot;product&quot;) public void setProducts(List&lt;Product&gt; products) { this.products = products; } public void add(Product product) { if (this.products == null) { this.products = new ArrayList&lt;Product&gt;(); } this.products.add(product); } } In this Products class, the @XmlRootElement annotation specifies the root element of the XML as products. This class has a single List property with getter and setter methods. The add() method of this class accepts a Product object and adds it to the List. The test class to convert a list of products to XML is: ProductToXmlListTest.java: package guru.springframework.blog.marshal; import guru.springframework.blog.domain.Product; import guru.springframework.blog.domain.Products; import guru.springframework.blog.domain.User; import org.junit.After; import org.junit.Before; import org.junit.Test; import javax.xml.bind.JAXBContext; import javax.xml.bind.JAXBException; import javax.xml.bind.Marshaller; import javax.xml.bind.Unmarshaller; import java.io.File; import java.io.FileNotFoundException; import java.math.BigDecimal; public class ProductToXmlListTest { private Product product; private Product product1; @Before public void setUp(){ long l = 10; Long longId = new Long(l); User user = new User(longId,&quot;John&quot;,&quot;john@springframework.guru&quot;); product = new Product(&quot;PO1&quot;, &quot;Spring Guru Mug&quot;,&quot;https://springframework.guru/wp-content/uploads/2017/12/spring_framework_guru_mug-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg&quot;, new BigDecimal(18.95),user); product1 = new Product(&quot;PO2&quot;, &quot;Spring Guru Shirt&quot;,&quot;https://springframework.guru/wp-content/uploads/2017/12/spring_framework_guru_shirt-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg&quot;, new BigDecimal(20.00),user); } @After public void tearDown(){ product = null; } @Test public void testObjectToXml() throws JAXBException, FileNotFoundException { Products products = new Products(); products.add(product); products.add(product1); JAXBContext jaxbContext = JAXBContext.newInstance(Products.class); Marshaller marshaller = jaxbContext.createMarshaller(); marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,true); marshaller.marshal(products, new File(&quot;products.xml&quot;)); marshaller.marshal(products, System.out); } } The output of running the test is: Summary In this post, I have covered the introductory concepts of JAXB. I have previously written a post on how to use an XML Schema and JAXB to generate Java classes for RESTful web services here. JAXB also comes with a JAXB Binding compiler tool named schemagen. You can use schemagen to generate an XSD schema from Java classes. The source code for this post is available on GitHub. You can download it here.",
                        "mainEntityOfPage": {
                            "@type": "WebPage",
                            "@id": "https://dzone.com/articles/using-jaxb-for-xml-with-java"
                        },
                        "image": {
                            "@type": "ImageObject",
                            "url": "https://dzone.com//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg"
                        }
                    }
                </script>
            </div>

            <script type="application/ld+json">
                {
                    "@context": "https://schema.org",
                    "@type": "BreadcrumbList",
                    "itemListElement": [{
                        "@type": "ListItem",
                        "position": 1,
                        "name": "DZone",
                        "item": "https://dzone.com"
                    }, {
                        "@type": "ListItem",
                        "position": 2,
                        "name": "Java Zone",
                        "item": "https://dzone.com/java-jdk-development-tutorials-tools-news"
                    }, {
                        "@type": "ListItem",
                        "position": 3,
                        "name": "Using JAXB for XML With Java",
                        "item": "https://dzone.com/articles/using-jaxb-for-xml-with-java"
                    }]
                }
            </script>

        <article>
            <div class="content" ng-class="{&#39;content-full&#39;: (width &lt;= 1024 &amp;&amp; edition)}">
                <div class="header">
                    <div class="col-xs-12 breadcrumb-padding">
                        <a href="https://dzone.com/">DZone</a>
                        &gt;
                            <a href="https://dzone.com/java-jdk-development-tutorials-tools-news">Java Zone</a>
                            &gt;
                            <a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#">Using JAXB for XML With Java</a>
                    </div>
                    <div class="header-title">
                        <!-- ngIf: articles[0].rawType != 'guide' --><div class="title ng-scope" ng-if="articles[0].rawType != &#39;guide&#39;">
                            <h1 class="article-title">
                                Using JAXB for XML With Java
                            </h1>
                        </div><!-- end ngIf: articles[0].rawType != 'guide' -->

                        <!-- ngIf: articles[0].rawType == 'guide' -->

                        <div class="subhead">
                            <h3>
                                Let's dive into JAXB and how to use it to help for marshalling and unmarshalling objects to and from XML in Java.
                            </h3>
                        </div>

                        <!-- ngIf: articles[0].rawType != 'guide' && articles[0].rawType != 'whitepaper' --><div class="publish-meta ng-scope" ng-if="articles[0].rawType != &#39;guide&#39; &amp;&amp; articles[0].rawType != &#39;whitepaper&#39;">


    <div class="article-author-meta">
        <a href="https://dzone.com/users/2520536/john-1.html">
             <img src="./Using JAXB for XML With Java - DZone Java_files/thumbnail" data-src="https://dz2cdn1.dzone.com/thumbnail?fid=56856&amp;w=80" class="avatar ls-is-cached lazyloaded" width="40">
        </a> by

        <div class="author-info">
                        <span class="author-name">
                            <a th-popup="users.profile.mini" popup-data="{user: 2520536}" href="https://dzone.com/users/2520536/john-1.html" class="ng-isolate-scope">
                                John Thompson</a>
                        </span>

        </div>
            <div class="mvb-award">
                <i tooltip="Most Valuable Blogger" class="icon-mvb-1"></i>
            </div>

            <div class="mvb-partner">

            </div>
            <div class="zone-leader">

            </div>

         ·
    </div>
                            <span class="author-date">Feb. 11, 18</span>
                            ·
                                <a href="https://dzone.com/java-jdk-development-tutorials-tools-news" id="portal-name"><span class="portal-name">Java
                                Zone</span></a>
                            ·
                                <article-type type="&#39;tutorial&#39;" class="ng-isolate-scope"><span class="ng-binding">Tutorial</span></article-type>
                        </div><!-- end ngIf: articles[0].rawType != 'guide' && articles[0].rawType != 'whitepaper' -->

                        <!-- ngIf: articles[0].rawType == 'whitepaper' -->

                    </div>
                </div>
                    <!-- ngIf: article.isOld -->

                <div class="author-n-useraction">
                    <div class="like action">
                        <dz-like template="like-article.html" node="articles[0]" class="ng-isolate-scope">
    <div class="dz-like icon-thumbs-up" ng-class="{&#39;icon-thumbs-up-alt liked&#39;: status.liked, &#39;icon-thumbs-up&#39;: !status.liked}" ng-click="like()"><span class="action-label"><span>Like</span><!-- ngIf: status.liked --></span>
        <a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#">
            <span class="ng-binding">(13)</span>
        </a>
    </div>
</dz-like>
                    </div>

                    <div class="comment action">
                        <p ng-show="!articles[0].isLocked" slider-toggle="commentsSlider" slider-data="{parent: articles[0]}" activate-with-url-params="{showComments: articles[0].id}" class="ng-isolate-scope">
                            <span><i class="icon-comment" tooltip-html-unsafe=""></i></span>
                            Comment (<span class="comment-after number-of-comments ng-binding" ng-bind="articles[0].nComments">0</span>)
                        </p>
                        <p ng-show="articles[0].isLocked" class="ng-hide">
                <span><i class="icon-icon-comment comment-disabled" tooltip-html-unsafe="Comments have been disabled for this article"></i></span>
                        </p>
                    </div>

                    <div class="save action">
                        <dz-save template="link-article-save.html" node="articles[0]" class="save ng-isolate-scope">
    <div ng-class="{&#39;icon-star gold&#39;: status.saved, &#39;icon-star-empty&#39;: !status.saved}" ng-click="save()" class="save icon-star-empty"><span class="save-title">Save</span><!-- ngIf: status.saved --></div>
</dz-save>
                    </div>

                    <div class="tweet action"><a ng-href="#" ng-click="shareTwitter($event, articles[0].header.title, articles[0].url)" class="title" target="_blank" href="https://dzone.com/articles/using-jaxb-for-xml-with-java#"><span><i class="icon-twitter"></i></span>
                            <span class="action-label">Tweet</span></a>
                    </div>

                    <div class="pull-right">
                        <div class="article-views action ng-binding"><i class="icon-eye"></i> 204.8k

                            <span class="action-label">Views</span>
                        </div>

                            <!-- ngIf: canEdit(articles[0]) || canDelete(articles[0]) -->
                    </div>
                </div>
                    <div class="signin-prompt">
                        <p>Join the DZone community and get the full member experience.</p>
                        <a id="article-signin-prompt" href="https://dzone.com/articles/using-jaxb-for-xml-with-java#" ng-click="loginForm()">Join For Free</a>
                    </div>
                    <div class="arrow-down"></div>

                <!-- ngIf: articles[0].readyForAd --><div ng-if="articles[0].readyForAd" class="ng-scope">
                  <div class="article-bumper  article-bumper-top ng-isolate-scope" dc-slot="ads.bt1.slot(articles[0], 0)" tags="ads.bt1.tags(articles[0], 0)" size="ads.bt1.size(articles[0], 0)" id="div-gpt-ad-1435246566686-3" style=""><div id="google_ads_iframe_/2916070/dz2_bumper_text_ad_0__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                </div><!-- end ngIf: articles[0].readyForAd -->

                <!-- ngIf: !edition || (articles[0].rawType != 'refcard' && articles[0].rawType != 'guide') --><div ng-if="!edition || (articles[0].rawType != &#39;refcard&#39; &amp;&amp; articles[0].rawType != &#39;guide&#39;)" class="ng-scope">
                    <div class="content-html" dz-code-container="" ng-non-bindable="">
                    <p pid="1"><a href="https://github.com/javaee/jaxb-v2" rel="nofollow" target="_blank">Java Architecture for XML Binding (JAXB)</a> is a library that helps bind XML schemas and Java representations. JAXB provides you with a mechanism to marshal Java objects into XML and the other way around – unmarshal XML into Java objects.</p> 
<p pid="2">XML is an industry standard for defining the contents of your message. XML, along with Java, are complementary technologies to exchange data across the Internet. When you work with XML, you need a way to take an XML file, then convert it into some sort of data structure, which your program can manipulate. You also need to serialize the state of your Java objects into XML. JAXB is one library that performs such marshalling and unmarshalling operations.</p> 
<p pid="3">In this post, I will discuss on how to marshal Java objects into XML and the other way around using JAXB.</p> 
<h2>Using JAXB to Marshal Java Objects to XML</h2> 
<p pid="5">Let us consider a scenario where we need to model a product for an e-commerce store. Apart from fields, such as product Id, description, image URL, and price, a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2845536720258"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object is also composed of a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf284d461227943"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> object that represents the user who adds the product to the store.</p> 
<p pid="6">Our intent is to marshal the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2850074255740"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object, along with its composed <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2853871336698"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> object into XML by using JAXB.</p> 
<p pid="7">We can start by creating a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2856630739793"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> POJO to model the user.</p> 
<p pid="52">User.java:</p> 
<div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">User</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">Long</span> <span class="cm-variable">id</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">String</span> <span class="cm-variable">name</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">String</span> <span class="cm-variable">email</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">User</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">User</span>(<span class="cm-type">Long</span> <span class="cm-variable">id</span>, <span class="cm-type">String</span> <span class="cm-variable">name</span>, <span class="cm-type">String</span> <span class="cm-variable">email</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">id</span> <span class="cm-operator">=</span> <span class="cm-variable">id</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-variable">name</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">email</span> <span class="cm-operator">=</span> <span class="cm-variable">email</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">Long</span> <span class="cm-variable">getId</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-variable">id</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">User</span> <span class="cm-variable">setId</span>(<span class="cm-type">Long</span> <span class="cm-variable">id</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">id</span> <span class="cm-operator">=</span> <span class="cm-variable">id</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">String</span> <span class="cm-variable">getName</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-variable">name</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="28"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="29"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="30"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">User</span> <span class="cm-variable">setName</span>(<span class="cm-type">String</span> <span class="cm-variable">name</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="31"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-variable">name</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="32"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="33"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="34"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="35"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">String</span> <span class="cm-variable">getEmail</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="36"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-variable">email</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="37"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="38"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="39"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">User</span> <span class="cm-variable">setEmail</span>(<span class="cm-type">String</span> <span class="cm-variable">email</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="40"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">email</span> <span class="cm-operator">=</span> <span class="cm-variable">email</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="41"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="42"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="43"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="44"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Override</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="45"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">String</span> <span class="cm-variable">toString</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="46"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">final</span> <span class="cm-type">StringBuffer</span> <span class="cm-variable">sb</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-type">StringBuffer</span>(<span class="cm-string">"User{"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="47"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">sb</span>.<span class="cm-variable">append</span>(<span class="cm-string">"id="</span>).<span class="cm-variable">append</span>(<span class="cm-variable">id</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="48"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">sb</span>.<span class="cm-variable">append</span>(<span class="cm-string">", name='"</span>).<span class="cm-variable">append</span>(<span class="cm-variable">name</span>).<span class="cm-variable">append</span>(<span class="cm-string">'\''</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="49"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">sb</span>.<span class="cm-variable">append</span>(<span class="cm-string">", email='"</span>).<span class="cm-variable">append</span>(<span class="cm-variable">email</span>).<span class="cm-variable">append</span>(<span class="cm-string">'\''</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="50"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">sb</span>.<span class="cm-variable">append</span>(<span class="cm-string">'}'</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="51"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-variable">sb</span>.<span class="cm-variable">toString</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="52"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="53"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 962px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
<p pid="57"><br></p> 
<p pid="11"><span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf285b077419299"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> is a simple POJO with the id, name, and email fields, along with their corresponding getter and setter methods.</p> 
<p pid="12">Next, we will create the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf285d050902840"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> POJO. While creating this POJO, we will use annotations introduced in JAXB 2.0 to control how our <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2860946633205"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object is marshalled to XML.</p> 
<p pid="13">Note: As of JDK 1.6, JAXB is bundled with the JDK. Therefore, you don’t need to add any dependency for it.</p> 
<p pid="14">The code of the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2862347828778"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> POJO is below.</p> 
<p pid="53">Product.java</p> 
<div class="crayon-syntax crayon-theme-son-of-obsidian crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" id="crayon-5a7dac0cf2865940540902"> 
 <div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">annotation</span>.<span class="cm-operator">*</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">math</span>.<span class="cm-variable">BigDecimal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;"><span class="cm-meta">@XmlRootElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"product"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"><span class="cm-comment">//@XmlAccessorType(XmlAccessType.FIELD)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">Product</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlAttribute</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"id"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">String</span> <span class="cm-variable">productId</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"description"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">String</span> <span class="cm-variable">description</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"imageUrl"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-type">String</span> <span class="cm-variable">imageUrl</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"price"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">BigDecimal</span> <span class="cm-variable">price</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"createdBy"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">User</span> <span class="cm-variable">createdBy</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">Product</span>(){}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">Product</span>(<span class="cm-type">String</span> <span class="cm-variable">productId</span>, <span class="cm-type">String</span> <span class="cm-variable">description</span>, <span class="cm-type">String</span> <span class="cm-variable">imageUrl</span>,</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;">                   <span class="cm-variable">BigDecimal</span> <span class="cm-variable">price</span>, <span class="cm-variable">User</span> <span class="cm-variable">createdBy</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">productId</span> <span class="cm-operator">=</span> <span class="cm-variable">productId</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">description</span> <span class="cm-operator">=</span> <span class="cm-variable">description</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">imageUrl</span> <span class="cm-operator">=</span> <span class="cm-variable">imageUrl</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">price</span> <span class="cm-operator">=</span> <span class="cm-variable">price</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">createdBy</span> <span class="cm-operator">=</span> <span class="cm-variable">createdBy</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="28"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="29"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Override</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="30"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">String</span> <span class="cm-variable">toString</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="31"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-string">"Product{"</span> <span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="32"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">"\n productId='"</span> <span class="cm-operator">+</span> <span class="cm-variable">productId</span> <span class="cm-operator">+</span> <span class="cm-string">'\''</span> <span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="33"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">",\n description='"</span> <span class="cm-operator">+</span> <span class="cm-variable">description</span> <span class="cm-operator">+</span> <span class="cm-string">'\''</span> <span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="34"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">",\n imageUrl='"</span> <span class="cm-operator">+</span> <span class="cm-variable">imageUrl</span> <span class="cm-operator">+</span> <span class="cm-string">'\''</span> <span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="35"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">",\n price="</span> <span class="cm-operator">+</span> <span class="cm-variable">price</span> <span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="36"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">",\n createdBy="</span> <span class="cm-operator">+</span> <span class="cm-variable">createdBy</span> <span class="cm-operator">+</span><span class="cm-string">"\n"</span><span class="cm-operator">+</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="37"></div></div><pre><span style="padding-right: 29px;">                <span class="cm-string">'}'</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="38"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="39"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 710px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
 <p><br></p> 
</div> 
<p pid="17">In this <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2867576777933"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> class, we used a number of JAXB annotations. They are:</p> 
<ul> 
 <li><span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf286a600581305"><span class="crayon-pre crayon-code"><span class="crayon-sy">@</span><span class="crayon-v">XmlRootElement</span></span></span>: This annotation is used at the top level class to indicate the root element in the XML document. The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf286c265790145"><span class="crayon-pre crayon-code"><span class="crayon-v">name</span></span></span> attribute in the annotation is optional. If not specified, the class name is used as the root XML element in the document.</li> 
 <li><span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf286f060826234"><span class="crayon-pre crayon-code"><span class="crayon-sy">@</span><span class="crayon-v">XmlAttribute</span></span></span>: This annotation is used to indicate the attribute of the root element.</li> 
 <li><span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2871524143126"><span class="crayon-pre crayon-code"><span class="crayon-sy">@</span><span class="crayon-v">XmlElement</span></span></span>: This annotation is used on the properties of the class that will be the sub-elements of the root element.</li> 
</ul> 
<p pid="19">The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2874329755316"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> POJO is now ready to be marshalled into XML. To do so, let us write a JUnit test class. If you are new to JUnit, I suggest going through my <a href="https://springframework.guru/unit-testing-junit-part-1/" rel="nofollow" target="_blank">Unit Testing with JUnit</a> series.</p> 
<p pid="20">The test class is:</p> 
<p pid="61">ProductToXmlTest.java:</p> 
<div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">marshal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">Product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">User</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">After</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Before</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Test</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBContext</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">Marshaller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">File</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">FileNotFoundException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">math</span>.<span class="cm-variable">BigDecimal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">ProductToXmlTest</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">Product</span> <span class="cm-variable">product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Before</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">setUp</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-type">long</span> <span class="cm-variable">l</span> <span class="cm-operator">=</span> <span class="cm-number">10</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-type">Long</span> <span class="cm-variable">longId</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-type">Long</span>(<span class="cm-variable">l</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">User</span> <span class="cm-variable">user</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">User</span>(<span class="cm-variable">longId</span>, <span class="cm-string">"John"</span>, <span class="cm-string">"john@springframework.guru"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Product</span>(<span class="cm-string">"PO1"</span>, <span class="cm-string">"Spring Guru Mug"</span>, <span class="cm-string">"https://springframework.guru/wp-content/uploads/2015/04/spring_framework_guru_shirt-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg"</span>, <span class="cm-keyword">new</span> <span class="cm-variable">BigDecimal</span>(<span class="cm-number">18.95</span>), <span class="cm-variable">user</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@After</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">tearDown</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="28"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product</span> <span class="cm-operator">=</span> <span class="cm-atom">null</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="29"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="30"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="31"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Test</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="32"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">testObjectToXml</span>() <span class="cm-keyword">throws</span> <span class="cm-variable">JAXBException</span>, <span class="cm-variable">FileNotFoundException</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="33"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">JAXBContext</span> <span class="cm-variable">jaxbContext</span> <span class="cm-operator">=</span> <span class="cm-variable">JAXBContext</span>.<span class="cm-variable">newInstance</span>(<span class="cm-variable">Product</span>.<span class="cm-keyword">class</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="34"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">Marshaller</span> <span class="cm-variable">marshaller</span> <span class="cm-operator">=</span> <span class="cm-variable">jaxbContext</span>.<span class="cm-variable">createMarshaller</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="35"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">setProperty</span>(<span class="cm-variable">Marshaller</span>.<span class="cm-variable">JAXB_FORMATTED_OUTPUT</span>, <span class="cm-atom">true</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="36"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">marshal</span>(<span class="cm-variable">product</span>, <span class="cm-keyword">new</span> <span class="cm-variable">File</span>(<span class="cm-string">"product.xml"</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="37"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">marshal</span>(<span class="cm-variable">product</span>, <span class="cm-variable">System</span>.<span class="cm-variable">out</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="38"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="39"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 710px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
<p pid="58"><br></p> 
<p pid="24">In this code:</p> 
<ul> 
 <li>Line 19 – Line 24: Instantiates and initializes a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2879406001516"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> and a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf287b016901116"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object in the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf287e195785913"><span class="crayon-pre crayon-code"><span class="crayon-e">setup</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method marked as <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2880025715408"><span class="crayon-pre crayon-code"><span class="crayon-sy">@</span><span class="crayon-v">Before</span></span></span>.</li> 
 <li>Line 33: The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2883907023494"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span><span class="crayon-sy">.</span><span class="crayon-e">newInstance</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method obtains a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2885679094192"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span></span></span> for the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2887037765522"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> class that you want to marshal. <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf288a447307155"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span></span></span> provides the entry point for the JAXB API.</li> 
 <li>Line 34: Creates a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf288c592598494"><span class="crayon-pre crayon-code"><span class="crayon-v">Marshaller</span></span></span> through a call to the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf288f697672078"><span class="crayon-pre crayon-code"><span class="crayon-e">createMarshaller</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method of <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2891370589230"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span></span></span>. In JAXB, the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2894317961242"><span class="crayon-pre crayon-code"><span class="crayon-v">Marshaller</span></span></span> class governs the process of marshalling Java objects into XML data through its various marshalling methods.</li> 
 <li>Line 35: Configures the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2896580496255"><span class="crayon-pre crayon-code"><span class="crayon-v">Marshaller</span></span></span>. The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf2898853887636"><span class="crayon-pre crayon-code"><span class="crayon-t">true</span></span></span> value of the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf289b203487721"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXB_FORMATTED_OUTPUT</span></span></span> property instructs the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28a1231574492"><span class="crayon-pre crayon-code"><span class="crayon-v">Marshaller</span></span></span> to generate the XML with proper indentation.</li> 
 <li>Line 36: Calls the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28a3842726067"><span class="crayon-pre crayon-code"><span class="crayon-e">marshal</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method on the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28a6648835902"><span class="crayon-pre crayon-code"><span class="crayon-v">Marshaller</span></span></span> with the initialized <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28a8834154664"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object and the file to write the XML.</li> 
 <li>Line 37: Marshals the object to the “standard” output stream.</li> 
</ul> 
<p pid="26">On running the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28aa474874072"><span class="crayon-pre crayon-code"><span class="crayon-v">ProductToXmlTest</span></span></span> class, a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28ad719386994"><span class="crayon-pre crayon-code"><span class="crayon-v">product</span><span class="crayon-sy">.</span><span class="crayon-v">xml</span></span></span> file gets generated.</p> 
<p pid="27">The output of the test is:<br><a href="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png" rel="nofollow"><img alt="JAXB Marshalling Test Output" class="aligncenter size-large wp-image-4065 fr-fin fr-dib" data-attachment-id="4065" data-comments-opened="1" data-image-description="" data-image-meta="{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}" data-image-title="JAXB Marshalling Test Output" data-large-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?fit=863%2C217&amp;ssl=1" data-medium-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?fit=300%2C75&amp;ssl=1" data-orig-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?fit=1329%2C333&amp;ssl=1" data-orig-size="1329,333" data-permalink="https://springframework.guru/using-jaxb-for-xml-with-java/jaxb_marshalling_test_output/" data-recalc-dims="1" sizes="(max-width: 863px) 100vw, 863px" src="./Using JAXB for XML With Java - DZone Java_files/JAXB_Marshalling_Test_Output.png" srcset="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?resize=1024%2C257&amp;ssl=1 1024w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?resize=300%2C75&amp;ssl=1 300w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?resize=768%2C192&amp;ssl=1 768w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Marshalling_Test_Output.png?w=1329&amp;ssl=1 1329w"></a></p> 
<h2>Using JAXB to Unmarshall XML into Java Objects</h2> 
<p pid="29">Unmarshalling XML with JAXB to a Java object involves creating an <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28b0575570054"><span class="crayon-pre crayon-code"><span class="crayon-v">Unmarshaller</span></span></span> on the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28b2620502127"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span></span></span> and calling the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28b4467091177"><span class="crayon-pre crayon-code"><span class="crayon-e">unmarshal</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method. This method accepts the XML file to unmarshal.</p> 
<p pid="30">The JUnit test class to unmarshal the generated <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28b7345896967"><span class="crayon-pre crayon-code"><span class="crayon-v">product</span><span class="crayon-sy">.</span><span class="crayon-v">xml</span></span></span> back to the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28b9995018731"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> and <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28bc844959070"><span class="crayon-pre crayon-code"><span class="crayon-v">User</span></span></span> objects is this:</p> 
<p pid="54">XmlToProductTest.java:</p> 
<div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">unmarshal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">Product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">User</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">After</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Before</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Test</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBContext</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">Marshaller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">Unmarshaller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">File</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">FileNotFoundException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">math</span>.<span class="cm-variable">BigDecimal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">XmlToProductTest</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">Product</span> <span class="cm-variable">product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Test</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">testXmlToObject</span>() <span class="cm-keyword">throws</span> <span class="cm-variable">JAXBException</span>, <span class="cm-variable">FileNotFoundException</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">File</span> <span class="cm-variable">file</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">File</span>(<span class="cm-string">"product.xml"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">JAXBContext</span> <span class="cm-variable">jaxbContext</span> <span class="cm-operator">=</span> <span class="cm-variable">JAXBContext</span>.<span class="cm-variable">newInstance</span>(<span class="cm-variable">Product</span>.<span class="cm-keyword">class</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">Unmarshaller</span> <span class="cm-variable">unmarshaller</span> <span class="cm-operator">=</span> <span class="cm-variable">jaxbContext</span>.<span class="cm-variable">createUnmarshaller</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product</span> <span class="cm-operator">=</span> (<span class="cm-variable">Product</span>) <span class="cm-variable">unmarshaller</span>.<span class="cm-variable">unmarshal</span>(<span class="cm-variable">file</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">System</span>.<span class="cm-variable">out</span>.<span class="cm-variable">println</span>(<span class="cm-variable">product</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 494px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
<p pid="59"><br></p> 
<p pid="33">In this <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28c1533558016"><span class="crayon-pre crayon-code"><span class="crayon-v">XmlToProductTest</span></span></span> class, a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28c3058227070"><span class="crayon-pre crayon-code"><span class="crayon-v">JAXBContext</span></span></span> initialized with <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28c5446535613"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> is used. The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28c8741041878"><span class="crayon-pre crayon-code"><span class="crayon-e">createUnmarsheller</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method returns an <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28ca544022695"><span class="crayon-pre crayon-code"><span class="crayon-v">Unmarshaller</span></span></span>. A JAXB <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28cc297310473"><span class="crayon-pre crayon-code"><span class="crayon-v">Unmarshaller</span></span></span> governs the process of unmarhshalling XML data into a Java object tree. Finally, the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28cf568555443"><span class="crayon-pre crayon-code"><span class="crayon-e">unmarshal</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method unmarshals the File object for <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28d1941062002"><span class="crayon-pre crayon-code"><span class="crayon-v">product</span><span class="crayon-sy">.</span><span class="crayon-v">xml</span></span></span> into the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28d4722696567"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> POJO.</p> 
<p pid="34">The output of running the test is this:<br><a href="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png" rel="nofollow"><img alt="JAXB Unmarshalling Test Output" class="aligncenter size-large wp-image-4066 fr-fin fr-dib" data-attachment-id="4066" data-comments-opened="1" data-image-description="" data-image-meta="{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}" data-image-title="JAXB Unmarshalling Test Output" data-large-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?fit=863%2C162&amp;ssl=1" data-medium-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?fit=300%2C56&amp;ssl=1" data-orig-file="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?fit=1329%2C249&amp;ssl=1" data-orig-size="1329,249" data-permalink="https://springframework.guru/using-jaxb-for-xml-with-java/jaxb_unmarshalling_test_output/" data-recalc-dims="1" sizes="(max-width: 863px) 100vw, 863px" src="./Using JAXB for XML With Java - DZone Java_files/JAXB_UnMarshalling_Test_Output.png" srcset="https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?resize=1024%2C192&amp;ssl=1 1024w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?resize=300%2C56&amp;ssl=1 300w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?resize=768%2C144&amp;ssl=1 768w, https://i0.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_UnMarshalling_Test_Output.png?w=1329&amp;ssl=1 1329w"></a></p> 
<h2>Handling Collections</h2> 
<p pid="36">Often you will need to marshal Java collection objects, such as <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28d6401029576"><span class="crayon-pre crayon-code"><span class="crayon-v">List</span></span></span>, <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28d9773641167"><span class="crayon-pre crayon-code"><span class="crayon-v">Set</span></span></span>, and <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28db653035110"><span class="crayon-pre crayon-code"><span class="crayon-v">Map</span></span></span> to XML, and also unmarshal XML back to collection objects.</p> 
<p pid="37">Consider our current application, where we now need to work with a list of products. To model the new requirement, let us create a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28dd289334000"><span class="crayon-pre crayon-code"><span class="crayon-v">Products</span></span></span> class.</p> 
<p pid="38">The code of the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28e0250719936"><span class="crayon-pre crayon-code"><span class="crayon-v">Products</span></span></span> class is:</p> 
<p pid="55">Products.java:</p> 
<div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">annotation</span>.<span class="cm-variable">XmlElement</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">annotation</span>.<span class="cm-variable">XmlRootElement</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">util</span>.<span class="cm-variable">ArrayList</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">util</span>.<span class="cm-variable">List</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;"><span class="cm-meta">@XmlRootElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"products"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">Products</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-variable">List</span><span class="cm-operator">&lt;</span><span class="cm-variable">Product</span><span class="cm-operator">&gt;</span> <span class="cm-variable">products</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-variable">List</span><span class="cm-operator">&lt;</span><span class="cm-variable">Product</span><span class="cm-operator">&gt;</span> <span class="cm-variable">getProducts</span>() {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">return</span> <span class="cm-variable">products</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@XmlElement</span>(<span class="cm-variable">name</span> <span class="cm-operator">=</span> <span class="cm-string">"product"</span>)</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">setProducts</span>(<span class="cm-variable">List</span><span class="cm-operator">&lt;</span><span class="cm-variable">Product</span><span class="cm-operator">&gt;</span> <span class="cm-variable">products</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">products</span> <span class="cm-operator">=</span> <span class="cm-variable">products</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">add</span>(<span class="cm-variable">Product</span> <span class="cm-variable">product</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">if</span> (<span class="cm-keyword">this</span>.<span class="cm-variable">products</span> <span class="cm-operator">==</span> <span class="cm-atom">null</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">            <span class="cm-keyword">this</span>.<span class="cm-variable">products</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">ArrayList</span><span class="cm-operator">&lt;</span><span class="cm-variable">Product</span><span class="cm-operator">&gt;</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">        }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-keyword">this</span>.<span class="cm-variable">products</span>.<span class="cm-variable">add</span>(<span class="cm-variable">product</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 494px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
<p pid="60"><br></p> 
<p pid="42">In this <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28e5644641169"><span class="crayon-pre crayon-code"><span class="crayon-v">Products</span></span></span> class, the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28e7351378313"><span class="crayon-pre crayon-code"><span class="crayon-sy">@</span><span class="crayon-v">XmlRootElement</span></span></span> annotation specifies the root element of the XML as products. This class has a single <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28ea181889514"><span class="crayon-pre crayon-code"><span class="crayon-v">List</span></span></span> property with getter and setter methods. The <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28ec550887740"><span class="crayon-pre crayon-code"><span class="crayon-e">add</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></span></span> method of this class accepts a <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28ee708612312"><span class="crayon-pre crayon-code"><span class="crayon-v">Product</span></span></span> object and adds it to the <span class="crayon-syntax crayon-syntax-inline  crayon-theme-classic crayon-theme-classic-inline crayon-font-monaco" id="crayon-5a7dac0cf28f1744884389"><span class="crayon-pre crayon-code"><span class="crayon-v">List</span></span></span>.</p> 
<p pid="43">The test class to convert a list of products to XML is:</p> 
<p pid="56">ProductToXmlListTest.java:</p> 
<div class="crayon-syntax crayon-theme-son-of-obsidian crayon-font-monaco crayon-os-mac print-yes notranslate" data-settings=" minimize scroll-mouseover" id="crayon-5a7dac0cf28f3736072836"> 
 <div class="CodeMirror cm-s-default"><div class="CodeMirror-scroll"><div class="CodeMirror-sizer" style="margin-left: 29px; margin-bottom: 0px; border-right-width: 30px; min-width: 319px; min-height: 26px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-code"><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="1"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">package</span> <span class="cm-def">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">marshal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="2"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="3"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">Product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="4"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">Products</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="5"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">guru</span>.<span class="cm-variable">springframework</span>.<span class="cm-variable">blog</span>.<span class="cm-variable">domain</span>.<span class="cm-variable">User</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="6"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">After</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="7"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Before</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="8"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">org</span>.<span class="cm-variable">junit</span>.<span class="cm-variable">Test</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="9"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="10"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBContext</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="11"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">JAXBException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="12"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">Marshaller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="13"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">javax</span>.<span class="cm-variable">xml</span>.<span class="cm-variable">bind</span>.<span class="cm-variable">Unmarshaller</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="14"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">File</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="15"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">io</span>.<span class="cm-variable">FileNotFoundException</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="16"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">import</span> <span class="cm-variable">java</span>.<span class="cm-variable">math</span>.<span class="cm-variable">BigDecimal</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="17"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="18"></div></div><pre><span style="padding-right: 29px;"><span class="cm-keyword">public</span> <span class="cm-keyword">class</span> <span class="cm-def">ProductToXmlListTest</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="19"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">Product</span> <span class="cm-variable">product</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="20"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">private</span> <span class="cm-variable">Product</span> <span class="cm-variable">product1</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="21"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="22"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Before</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="23"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">setUp</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="24"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-type">long</span> <span class="cm-variable">l</span> <span class="cm-operator">=</span> <span class="cm-number">10</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="25"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-type">Long</span> <span class="cm-variable">longId</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-type">Long</span>(<span class="cm-variable">l</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="26"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">User</span> <span class="cm-variable">user</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">User</span>(<span class="cm-variable">longId</span>,<span class="cm-string">"John"</span>,<span class="cm-string">"john@springframework.guru"</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="27"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Product</span>(<span class="cm-string">"PO1"</span>, <span class="cm-string">"Spring Guru Mug"</span>,<span class="cm-string">"https://springframework.guru/wp-content/uploads/2017/12/spring_framework_guru_mug-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg"</span>, <span class="cm-keyword">new</span> <span class="cm-variable">BigDecimal</span>(<span class="cm-number">18.95</span>),<span class="cm-variable">user</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="28"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product1</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Product</span>(<span class="cm-string">"PO2"</span>, <span class="cm-string">"Spring Guru Shirt"</span>,<span class="cm-string">"https://springframework.guru/wp-content/uploads/2017/12/spring_framework_guru_shirt-rf412049699c14ba5b68bb1c09182bfa2_8nax2_512.jpg"</span>, <span class="cm-keyword">new</span> <span class="cm-variable">BigDecimal</span>(<span class="cm-number">20.00</span>),<span class="cm-variable">user</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="29"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="30"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="31"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@After</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="32"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">tearDown</span>(){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="33"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">product</span> <span class="cm-operator">=</span> <span class="cm-atom">null</span>;</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="34"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="35"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="36"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-meta">@Test</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="37"></div></div><pre><span style="padding-right: 29px;">    <span class="cm-keyword">public</span> <span class="cm-type">void</span> <span class="cm-variable">testObjectToXml</span>() <span class="cm-keyword">throws</span> <span class="cm-variable">JAXBException</span>, <span class="cm-variable">FileNotFoundException</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="38"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">Products</span> <span class="cm-variable">products</span> <span class="cm-operator">=</span> <span class="cm-keyword">new</span> <span class="cm-variable">Products</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="39"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">products</span>.<span class="cm-variable">add</span>(<span class="cm-variable">product</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="40"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">products</span>.<span class="cm-variable">add</span>(<span class="cm-variable">product1</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="41"></div></div><pre><span style="padding-right: 29px;"></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="42"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">JAXBContext</span> <span class="cm-variable">jaxbContext</span> <span class="cm-operator">=</span> <span class="cm-variable">JAXBContext</span>.<span class="cm-variable">newInstance</span>(<span class="cm-variable">Products</span>.<span class="cm-keyword">class</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="43"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">Marshaller</span> <span class="cm-variable">marshaller</span> <span class="cm-operator">=</span> <span class="cm-variable">jaxbContext</span>.<span class="cm-variable">createMarshaller</span>();</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="44"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">setProperty</span>(<span class="cm-variable">Marshaller</span>.<span class="cm-variable">JAXB_FORMATTED_OUTPUT</span>,<span class="cm-atom">true</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="45"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">marshal</span>(<span class="cm-variable">products</span>, <span class="cm-keyword">new</span> <span class="cm-variable">File</span>(<span class="cm-string">"products.xml"</span>));</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="46"></div></div><pre><span style="padding-right: 29px;">        <span class="cm-variable">marshaller</span>.<span class="cm-variable">marshal</span>(<span class="cm-variable">products</span>, <span class="cm-variable">System</span>.<span class="cm-variable">out</span>);</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="47"></div></div><pre><span style="padding-right: 29px;">    }</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -29px; width: 29px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 20px;" data-line-number="48"></div></div><pre><span style="padding-right: 29px;">}</span></pre></div></div></div></div></div></div><div class="CodeMirror-gutters" style="height: 872px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 28px;"></div></div></div></div> 
 <p><br></p> 
</div> 
<p pid="46">The output of running the test is:<br><a href="https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png" rel="nofollow"><img alt="" class="aligncenter size-large wp-image-4067 fr-fin fr-dib" data-attachment-id="4067" data-comments-opened="1" data-image-description="" data-image-meta="{&amp;quot;aperture&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;credit&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;camera&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;caption&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created_timestamp&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;copyright&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;focal_length&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;iso&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;shutter_speed&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;title&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;orientation&amp;quot;:&amp;quot;0&amp;quot;}" data-image-title="JAXB Collection Marshalling Test Output" data-large-file="https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?fit=863%2C316&amp;ssl=1" data-medium-file="https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?fit=300%2C110&amp;ssl=1" data-orig-file="https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?fit=1329%2C487&amp;ssl=1" data-orig-size="1329,487" data-permalink="https://springframework.guru/using-jaxb-for-xml-with-java/jaxb_collection_marshalling_test_output/" data-recalc-dims="1" sizes="(max-width: 863px) 100vw, 863px" src="./Using JAXB for XML With Java - DZone Java_files/JAXB_Collection_Marshalling_Test_Output.png" srcset="https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?resize=1024%2C375&amp;ssl=1 1024w, https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?resize=300%2C110&amp;ssl=1 300w, https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?resize=768%2C281&amp;ssl=1 768w, https://i2.wp.com/springframework.guru/wp-content/uploads/2018/01/JAXB_Collection_Marshalling_Test_Output.png?w=1329&amp;ssl=1 1329w"></a></p> 
<h2>Summary</h2> 
<p pid="48">In this post, I have covered the introductory concepts of JAXB. I have previously written a post on how to use an XML Schema and JAXB to generate Java classes for RESTful web services <a href="https://springframework.guru/you-should-use-jaxb-generated-classes-for-restful-web-services/" rel="nofollow" target="_blank">here</a>.</p> 
<p pid="49">JAXB also comes with a JAXB Binding compiler tool named schemagen. You can use schemagen to generate an XSD schema from Java classes.</p> 
<p pid="50">The source code for this post is available on GitHub. You can download it <a href="https://github.com/springframeworkguru/blogposts/tree/jaxb" rel="nofollow" target="_blank">here</a>.</p>
                </div>
                </div><!-- end ngIf: !edition || (articles[0].rawType != 'refcard' && articles[0].rawType != 'guide') -->

                <!-- ngIf: (articles[0].rawType == 'refcard' || articles[0].rawType == 'guide') && edition -->

                <!-- ngIf: articles[0].readyForAd --><div ng-if="articles[0].readyForAd" class="ng-scope">
                    <!-- ngIf: articles[0].readyForAd --><div class="article-bumper article-bumper-bottom ng-scope ng-isolate-scope" ng-if="articles[0].readyForAd" dc-slot="ads.bt2.slot(articles[0], 0)" tags="ads.bt2.tags(articles[0], 0)" size="ads.bt2.size(articles[0], 0)" id="div-gpt-ad-1435246566686-4" style=""><div id="google_ads_iframe_/2916070/dz2_bumper_text_ad_1__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div><!-- end ngIf: articles[0].readyForAd -->
                </div><!-- end ngIf: articles[0].readyForAd -->

            <!-- ngIf: articles[0].rawType != 'article' -->

                    <!-- ngIf: !edition --><div ng-if="!edition" class="related ng-scope">
                        <h3>Like This Article? Read More From DZone</h3>
                        <div class="row">
                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="https://dzone.com/articles/writing-and-reading-xml-file?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload" src="https://dzone.com/articles/using-jaxb-for-xml-with-java" data-src="https://dz2cdn4.dzone.com/thumbnail?fid=5045775&amp;w=120" alt="3 Steps to Writing and Reading XML Files" width="60">
                                </a>
                                <a href="https://dzone.com/articles/writing-and-reading-xml-file?fromrel=true" class="col-xs-9 col-md-9">3 Steps to Writing and Reading XML Files</a>
                            </div>

                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="https://dzone.com/articles/introduction-to-jaxb-20?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload" src="https://dzone.com/articles/using-jaxb-for-xml-with-java" data-src="https://dz2cdn1.dzone.com/thumbnail?fid=3837752&amp;w=120" alt="Marshalling and Unmarshalling in JAXB 2.0" width="60">
                                </a>
                                <a href="https://dzone.com/articles/introduction-to-jaxb-20?fromrel=true" class="col-xs-9 col-md-9">
                                    Marshalling and Unmarshalling in JAXB 2.0</a>
                            </div>
                        </div>

                        <div class="row">
                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="https://dzone.com/articles/xml-marshalling-and-unmarshalling-using-spring-and?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload" src="https://dzone.com/articles/using-jaxb-for-xml-with-java" data-src="https://dz2cdn2.dzone.com/thumbnail?fid=11165149&amp;w=120" alt="XML Marshalling and Unmarshalling Using Spring and JAXB Framework" width="60">
                                </a>
                                <a href="https://dzone.com/articles/xml-marshalling-and-unmarshalling-using-spring-and?fromrel=true" class="col-xs-9 col-md-9">XML Marshalling and Unmarshalling Using Spring and JAXB Framework</a>
                            </div>

                            <div class="relateddiv col-xs-6 col-md-6">
                                <a href="https://dzone.com/refcardz/getting-started-with-headless-cms?fromrel=true">
                                    <img class="relatedimg col-xs-3 col-md-3 lazyload" src="https://dzone.com/articles/using-jaxb-for-xml-with-java" data-src="https://dz2cdn1.dzone.com/thumbnail?fid=12672764&amp;w=120" alt="Getting Started With Headless CMS" width="60">
                                </a>
                                <a href="https://dzone.com/refcardz/getting-started-with-headless-cms?fromrel=true" class="col-xs-9 col-md-9">
                                    <p class="relatedres">Free DZone Refcard</p>
                                    Getting Started With Headless CMS</a>
                            </div>
                        </div>
                    </div><!-- end ngIf: !edition -->


            <!-- ngIf: articles[0].rawType != 'article' && articles[0].pdf -->


            <div class="article-topics">
                <div class="topic-label">Topics:</div>
                <div class="topics">
                        <span class="topics-tag">java
                            ,</span><span class="topics-tag">marshalling and unmarshalling
                            ,</span><span class="topics-tag">jaxb
                            ,</span><span class="topics-tag">tutorial</span>
                </div>
            </div>
            <div class="author-n-useraction">
                <div class="like action">
                    <dz-like template="like-article.html" node="articles[0]" class="ng-isolate-scope">
    <div class="dz-like icon-thumbs-up" ng-class="{&#39;icon-thumbs-up-alt liked&#39;: status.liked, &#39;icon-thumbs-up&#39;: !status.liked}" ng-click="like()"><span class="action-label"><span>Like</span><!-- ngIf: status.liked --></span>
        <a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#">
            <span class="ng-binding">(13)</span>
        </a>
    </div>
</dz-like>
                </div>

                <div class="comment action">
                    <p ng-show="!articles[0].isLocked" slider-toggle="commentsSlider" slider-data="{parent: articles[0]}" activate-with-url-params="{showComments: articles[0].id}" class="ng-isolate-scope">
                        <span><i class="icon-comment" tooltip-html-unsafe=""></i></span>
                        Comment (<span class="comment-after number-of-comments ng-binding" ng-bind="articles[0].nComments">0</span>)
                    </p>
                    <p ng-show="articles[0].isLocked" class="ng-hide">
            <span><i class="icon-icon-comment comment-disabled" tooltip-html-unsafe="Comments have been disabled for this article"></i></span>
                    </p>
                </div>

                <div class="save action">
                    <dz-save template="link-article-save.html" node="articles[0]" class="save ng-isolate-scope">
    <div ng-class="{&#39;icon-star gold&#39;: status.saved, &#39;icon-star-empty&#39;: !status.saved}" ng-click="save()" class="save icon-star-empty"><span class="save-title">Save</span><!-- ngIf: status.saved --></div>
</dz-save>
                </div>

                <div class="tweet action"><a ng-href="#" ng-click="shareTwitter($event, articles[0].header.title, articles[0].url)" class="title" target="_blank" href="https://dzone.com/articles/using-jaxb-for-xml-with-java#"><span><i class="icon-twitter"></i></span>
                        <span class="action-label">Tweet</span></a>
                </div>

                <div class="pull-right">
                    <div class="article-views action ng-binding"><i class="icon-eye"></i> 204.8k

                        <span class="action-label">Views</span></div>

                        <!-- ngIf: !edition && (canEdit(articles[0]) || canDelete(articles[0])) -->
                </div>
            </div>
                <div class="attribution">
                    <p>Published at DZone with permission
                        of 
                            <span>John Thompson
                        <!-- ngIf: articles[0].authors[0].isMVB --><span ng-if="articles[0].authors[0].isMVB" class="ng-scope">, DZone MVB</span><!-- end ngIf: articles[0].authors[0].isMVB -->. <!-- ngIf: articles[0].source --><span ng-if="articles[0].source" class="ng-scope"><a href="https://springframework.guru/using-jaxb-for-xml-with-java/" target="_blank">See the original article here.<i class="icon-link-ext-alt"></i></a></span><!-- end ngIf: articles[0].source --></span></p>
                    <p>Opinions expressed by DZone contributors are their own.</p>
                </div>
            <load-article node="article || articles[0]" class="ng-isolate-scope"></load-article>
        </div></article>

        <div class="col-md-12 col-sm-12 col-xs-12">
            <th-if-scroll relative-to="bottom" from="-20" to="0" callback="activateB(articles[0])" class="ng-isolate-scope"></th-if-scroll>
        </div>
    </div><!-- end ngIf: articles[0].id == 2042990 -->

        <!-- Had to use a nested ng-if to ensure that this section loads after the top of the page-->
        <!-- TODO: Figure out why partnerResources get loaded before the rest of the article -->
        <!-- ngIf: true --><div ng-if="true" class="ng-scope">
          <!-- ngIf: true --><div ng-if="true" class="ng-scope">

<div class="layout-card widget-top-border partner-resources-block" style="width:100%;margin-bottom: 1em;">

    <div class="main-container">
        <div class="featured-header">
            <h2>
                    Java<span> Partner Resources</span>
            </h2>
        </div>

        <div class="partner-resources-container">
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-5" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_0__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-6" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_1__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-7" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_2__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-8" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_3__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-9" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_4__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
                <div class="resource-block ng-isolate-scope" dc-slot="&#39;/2916070/dz2_partner_resource_link&#39;" tags="ads.partnerResources.tags(articles[0], &#39;pr&#39; + calculatePartnerResourceIndex())" size="[&#39;fluid&#39;]" id="div-gpt-ad-1435246566686-10" style=""><div id="google_ads_iframe_/2916070/dz2_partner_resource_link_5__container__" style="border: 0pt none; width: 100%; height: 0%;"></div></div>
        </div>

    </div>
</div>



          </div><!-- end ngIf: true -->
        </div><!-- end ngIf: true -->

        <!-- ngIf: articles[1] && !articles[1].partner.isSponsoringArticle && width >= 768 -->

        <!-- ngIf: articles[1] && !articles[1].partner.isSponsoringArticle && width < 768 -->


</div><!-- end ngIf: articles[0].id == 2042990 -->
<!-- ngRepeat: article in articles --><!-- ngIf: $index > 0 || article.id != 2042990 --><!-- end ngRepeat: article in articles -->

<div style="clear: both;"></div>
<!-- ngIf: !isPreview --><th-if-scroll ng-if="!isPreview" relative-to="bottom" from="-50" to="50" callback="loadMore()" class="ng-scope ng-isolate-scope"></th-if-scroll><!-- end ngIf: !isPreview --></div></div></div><div class="container-fluid footerOuter" th-element="footerOuter" th-element-groups="[]" ng-hide="$root.isHidden(&#39;footerOuter&#39;)" data-th-element-name="footerOuter"><div class="row row2" th-element="row2" th-element-groups="[&#39;footerOuter&#39;]" ng-hide="$root.isHidden(&#39;row2&#39;)" data-th-element-name="row2"><div class="col-md-12 container3" th-element="container3" th-element-groups="[&#39;footerOuter&#39;,&#39;row2&#39;]" ng-hide="$root.isHidden(&#39;container3&#39;)" data-th-element-name="container3"><div class="container container3" th-element="container3" th-element-groups="[&#39;footerOuter&#39;,&#39;row2&#39;,&#39;container3&#39;]" ng-hide="$root.isHidden(&#39;container3&#39;)" data-th-element-name="container3"><div class="row footer" th-element="footer" th-element-groups="[&#39;footerOuter&#39;,&#39;row2&#39;,&#39;container3&#39;,&#39;container3&#39;]" ng-hide="$root.isHidden(&#39;footer&#39;)" data-th-element-name="footer"></div></div></div></div></div><div class="sidebar sidebarTapBar oUhbkSMadabbWQbVkcC oUhbkSMadabfWVcC ng-scope" th-element="sidebar" th-element-groups="[]" ng-hide="$root.isHidden(&#39;sidebar&#39;)" data-th-element-name="sidebar" data-th-widget="sidebar.tapBar" data-widget-sidebar-tap-bar="" ng-controller="sidebar" style="top: 2px; padding-top: 0px;"><!-- ngIf: !$root.botInfo.isRenderBot --><div class="content ng-scope" ng-if="!$root.botInfo.isRenderBot" sidebar-list="">
<div class="sidebar.content" th-element="sidebar.content" th-element-groups="[&#39;sidebar&#39;]" ng-hide="$root.isHidden(&#39;sidebar.content&#39;)" data-th-element-name="sidebar.content"><div class="col-md-12 sidebarContentList7 sidebarContentList oUhbkSMaaqbcdvVkcC ng-scope" th-element="sidebarContentList7" th-element-groups="[&#39;sidebar&#39;,&#39;sidebar.content&#39;]" ng-hide="$root.isHidden(&#39;sidebarContentList7&#39;)" data-th-element-name="sidebarContentList7" data-th-widget="sidebar.content.list" data-widget-sidebar-content-list="" ng-controller="sidebarContentList7"><ul class="nodes-list" dnd-list="display">

    <!-- ngIf: edition -->

    <!-- ngRepeat: node in display --><li ng-repeat="node in display" id="2042990--0" class="list-entry ng-scope ng-isolate-scope active" ng-class="{active: isActive(node)}" sidebar-item="node">
            <!-- ngIf: node.type != 'article' && node.type != 'ad' -->
        <div class="sidebar-content ">
            <!-- ngIf: node.type != 'ad' --><a ng-class="{badge1: edition}" data-badge="1" ng-if="node.type != &#39;ad&#39;" ng-href="/articles/using-jaxb-for-xml-with-java" ng-click="tap()" sidebar-click="node" class="ng-scope ng-isolate-scope" href="https://dzone.com/articles/using-jaxb-for-xml-with-java">
                <!-- ngIf: edition -->
                <div ng-class="{&#39;sidebar-node-title&#39; : edition}">
                    <!-- ngIf: node.type == 'whitepaper' || node.type == 'refcard' || node.type == 'guide' -->
                    <p class="ng-binding">Using JAXB for XML With Java</p>
                </div>
            </a><!-- end ngIf: node.type != 'ad' -->
        </div>
    </li><!-- end ngRepeat: node in display -->
    <th-if-scroll relative-to="bottom" from="-100" to="50" callback="loadMore()" class="ng-isolate-scope"></th-if-scroll>
    <th-loader flag="loading()" class="ng-isolate-scope"><div ng-show="flag" class="loading-indicator ng-hide"><i class="icon-spin6 animate-spin"></i></div></th-loader></ul>
</div></div></div><!-- end ngIf: !$root.botInfo.isRenderBot -->
<!-- ngIf: !$root.botInfo.isRenderBot --><span class="tap ng-scope" ng-class="{tapEdition: edition}" ng-click="tap()" ng-if="!$root.botInfo.isRenderBot">
    <i class="icon-angle-double-left left"></i>
    <i class="icon-angle-double-right right"></i>
</span><!-- end ngIf: !$root.botInfo.isRenderBot -->
</div><div class="componentsSlider5 componentsSlider oUhballbvbdSaoUhM ng-scope" th-element="componentsSlider5" th-element-groups="[]" ng-hide="$root.isHidden(&#39;componentsSlider5&#39;)" data-th-element-name="componentsSlider5" data-th-widget="components.slider" data-widget-components-slider="" ng-controller="componentsSlider5"><!-- ngIf: _ready -->

<div class="slider-outer-wrapper" ng-class="{open: _sliderOpen}">

    <!-- ngIf: _ready -->
</div>

</div>

    <div class="row">
        <a href="https://dzone.com/articles/using-jaxb-for-xml-with-java#" class="back-to-top" style="display: inline;"><i class="icon-up-big"></i></a>
    </div>


    <script type="text/ng-template" id="/themes/dz20/widgets/header/sections/widget.html">
<span dropdown is-open="dropdown.open" ng-class="{small: width < 768}">
    <span dropdown-toggle class="sections"><i class="icon-menu"></i>
        <span class="menuLabel" ng-if="width < 768"></span></span>
    <ul class="dropdown-menu ul-first" ng-style="width < 768 ? {'top': headerSize + 0 + 'px', 'padding-top': '15px'} : {}">
        <li><a href="/links">Links</a></li>
        <li><a href="/refcardz">Refcardz</a></li>
        <li><a href="/guides">Guides</a></li>
        <li><a href="/about">About Us</a></li>
        <li class="divider"></li>

        <li class="post-title"><span>Zones</span></li>
        <li ng-repeat="topic in portals" class="dropdown">
            <a ng-href="{{ topic.url }}">{{ topic.name }}</a>
        </li>
        <li class="divider"></li>
        <li class="post-title"><span>Post</span></li>
        <li><a href="/links">Link</a></li>
        <li><a href="/article/post.html">Article</a></li>
    </ul>
</span>


    </script>

<script type="text/ng-template" id="followus.html">
<div class="top-social">
    <p>Let's be friends:</p>
    <ul class="icons-only" ng-class="{open: isOpen}" click-outside="outside()">
        <li class="rss-icon" id="rss-spotlight-1">
            <a href="/pages/feeds"><i class="icon-rss-1"></i></a>
        </li>
        <li class="twitter-icon">
            <a href="https://twitter.com/DZoneInc" target="_blank"><i class="icon-twitter"></i></a>
        </li>
        <li class="facebook-icon">
            <a href="https://www.facebook.com/DZoneInc" target="_blank"><i class="icon-facebook-1"></i></a>
        </li>
        <li class="google-icon">
            <a href="https://plus.google.com/+dzone/posts" target="_blank"><i class="icon-gplus"></i></a>
        </li>
        <li class="linkedin-icon">
            <a href="https://www.linkedin.com/company/devada-team" target="_blank"><i class="icon-linkedin-1"></i></a>
        </li>

            <ul class="social-dropdown dropdown-menu">
                <li class="rss" id="rss-spotlight"><a href="/pages/feeds"><i class="icon-rss-squared"></i> <span>RSS Feed</span></a></li>
                <li class="twitter" id="twitter-spotlight">
                    <a href="https://twitter.com/DZoneInc" class="twitter-follow-button" data-show-count="true"
                       data-show-screen-name="false">Follow @DZoneInc</a>
                </li>
                <li class="fb-like" id="fb-spotlight" data-href="https://www.facebook.com/DZoneInc"
                    data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></li>
                <li class="google-plus" id="gplus-spotlight">
                    <div class="g-follow" data-annotation="bubble" data-height="20"
                         data-href="https://plus.google.com/108688665090780146602" data-rel="publisher"></div>
                </li>
                <li class="linkedin" id="linkedin-spotlight">
                    <script type="IN/FollowCompany" data-id="114427" data-counter="right"></script>
                
            
    

<script type="text/ng-template" id="dzlike.html">
<div class="dz-like " ng-class="{liked: status.liked}" ng-click="like()">
    <a href="#">
        <i class="icon-up-dir"></i>
        <span>{{ status.score }}</span>
    </a>
</div>
</script><script type="text/ng-template" id="dztopicselect.html"><ui-select  ng-if="canAddTopics" ng-model="editing.topics" theme="bootstrap" multiple tagging tagging-label="(add topic)"
           tagging-tokens=",">
    <ui-select-match class="input-tags"><div class="topics-tag">{{ $item }}</div></ui-select-match>
    <ui-select-choices
            refresh="topicsRefresh($select.search)"
            refresh-delay="250"
            repeat="topic in foundTopics | filter: $select.search">
        <div ng-bind-html="topic | highlight: $select.search"></div>
    </ui-select-choices>
</ui-select>
<ui-select ng-if="!canAddTopics" ng-model="editing.topics" theme="bootstrap" multiple>
    <ui-select-match><div class="topics-tag">{{ $item }}</div></ui-select-match>
    <ui-select-choices
            refresh="topicsRefresh($select.search)"
            refresh-delay="250"
            repeat="topic in foundTopics | filter: $select.search">
        <div ng-bind-html="topic | highlight: $select.search"></div>
    </ui-select-choices>
</ui-select></script><script type="text/ng-template" id="dzsave.html"><i class="icon-star-empty" ng-class="{'icon-star gold': status.saved, 'icon-star-empty': !status.saved}" tooltip-html-unsafe="{{status.saved ? 'Saved' : 'Save'}}" ng-click="save()"></i>
<!--<span ng-class="{'gold count': status.saved}">{{ status.count }}</span>--></script><script type="text/ng-template" id="overlay.html"><div class="ngdialog th-overlay">
    <div class="ngdialog-overlay">
        <div class="overlay-box">
            <i class="icon-spin5 animate-spin"></i>

            <p>{{ message }}</p>
        </div>
    </div>
</div></script><script type="text/ng-template" id="inline-editable.html"><div class="inline-editable" ng-if="!status.editing" ng-click="edit()" ng-transclude></div>
<div class="inline-editor-wrapper" ng-if="status.editing">
    <textarea class="inline-editor" ng-model="status.editValue" ng-if="type == 'textarea'"></textarea>
    <input class="inline-editor" ng-model="status.editValue" ng-if="type == 'input'"></textarea>
    <div class="inline-editor-tools">
        <button class="btn select-ok" ng-disabled="!status.editValue" ng-click="save()"><i class="icon-check-1"></i></button>
        <button class="btn select-cancel" ng-disabled="!editable" ng-click="cancel()"><i class="icon-cancel-1"></i></button>
    </div>
</div></script><script type="text/ng-template" id="dzupload.html"><span class="btn btn-upload" >
    <div ng-bind-html="label"></div>
    <div class="progress-container" ng-style="{visibility: uploading ? 'visible' : 'hidden'}">
        <progressbar max="100" value="progress"><span>{{ progress }}</span></progressbar>
    </div>
    <input type="file" ng-file-drop ng-file-select ng-file-change="upload($files)" />
</span></script><script type="text/ng-template" id="dzfollow.html"><button class="btn btn-follow" ng-class="{'btn-success': !status.followed, 'btn-warning': status.followed, 'hidden': followed.id == $root.user.id}" ng-click="follow()"><span ng-if="!status.followed"><i class="icon-plus"></i> Follow</span><span ng-if="status.followed" class="following">Following</span><span ng-if="status.followed" class="hover">Unfollow</span></button></script><script type="text/ng-template" id="dzphoto.html"><i class="icon-camera-alt photo" type="file" ng-file-drop ng-file-select ng-file-change="upload($files)"></i></script><script type="text/ng-template" id="dialog.confirm.html"><p>{{ message }}</p></script><script type="text/ng-template" id="dialog.skeleton.html"><div class="dialog-title">
    <h1 ng-if="$dialog.title">{{ $dialog.title }}</h1>
</div>
<div class="dialog-body {{ $dialog.extraClass }}" ng-include="$dialog.template"></div>
<div class="dialog-footer">
    <div class="dialog-buttons" ng-if="$dialog.buttons">
        <button ng-repeat="button in $dialog.buttons" ng-hide="button.hidden" ng-disabled="button.disabled || $dialog.executing"
                class="btn btn-{{ button.type || 'info' }}" ng-click="$dialog.runAction(button)">
            <span class="icon-spin6 animate-spin" ng-if="button.executing"></span>{{ button.label || button.name }}</button>
    </div>
</div></script><script type="text/ng-template" id="dialog.message.html"><div class="message-icon">
    <i class="icon-{{ icon }}"></i>
</div>
<div class="message-text">
    <p class="message-title" ng-bind-html="trustAsHtml(title)"></p>
    <p ng-bind-html="trustAsHtml(message)"></p>
</div>
</script>
<script type="text/javascript">

    var TH_CORE_VARS = {};

    try {
        TH_CORE_VARS.additional = {};

        TH_CORE_VARS.additional.matchedUrl = {"name":"dzone:articles:view","mapping":"/articles/**","mappingPatterns":{}};
        TH_CORE_VARS.additional.request = [{"site":{"keywords":"programming, software development, devops, java, agile, web, iot, database, mobile, big data, cloud","name":"DZone.com","description":"Programming, Web Development, and DevOps news, tutorials and tools for beginners to experts. Hundreds of free publications, over 1M members, totally free.","id":7,"title":"DZone: Programming & DevOps news, tutorials & tools"},"dev":false,"context":"","theme":"dz20","cdn":["dz2cdn1.dzone.com","dz2cdn2.dzone.com","dz2cdn3.dzone.com","dz2cdn4.dzone.com"],"user":{"realName":null,"authenticated":false,"profile":"/users/2500002/anon-user.html","name":"Anonymous","GDPRStatus":null,"id":2500002,"avatar":"https://secure.gravatar.com/avatar/?d=identicon&r=PG"}}];
        TH_CORE_VARS.additional.loadedScripts = [["/lib/jquery/jquery.js","/lib/lodash/lodash.js","/lib/moment/moment.js","/scripts/utils.js","/lib/angular/angular.js","/lib/angular/angular-sanitize.js","/lib/local-storage/angular-local-storage.js","/lib/bootstrap/dropdown.js","/lib/angular-ui/bootstrap.js","/lib/angular-ui/select.js","/lib/bootstrap-switch/bootstrap-switch.js","/lib/ngDialog/js/ngDialog.js","/lib/angular-moment/angular-moment.js","/scripts/app.js","/scripts/socket.js","/scripts/services.js","/scripts/ui-services.js","/scripts/directives.js","/scripts/filters.js","/lib/angular/angular-cookies.js","/lib/angulartics/angulartics.js","/lib/angulartics/angulartics-ga.js","/lib/angular-touch/angular-touch.min.js","/lib/dataTables/datatables.min.js","/lib/elastic/elastic.js","/lib/ng-file-upload/angular-file-upload-all.js","/scripts/dzone.js","/scripts/ads.js","/scripts/social-media.js","/scripts/head.js","/scripts/links.js","/scripts/utilities/directives.js","/scripts/utilities/services.js","/scripts/utilities/editor.js","/lib/bootstrap-slider/bootstrap-slider.js","/lib/bootstrap-slider/directive.js","/lib/sb/sb.js","/lib/angular-animate.min.js","/lib/angular-sanitize.min.js","/lib/ngToast.min.js","/lib/lazysizes.min.js","/lib/angular-draganddrop/draganddrop.js","/widgets/article/content/utils.js","/widgets/components/slider/service.js","/widgets/header/headerV2/resize.js","/widgets/sidebar/content/list/service.js","/widgets/sidebar/tapBar/directive.js","/widgets/sidebar/tapBar/service.js"]];
        TH_CORE_VARS.additional.botInfo = [{"isRenderBot":false}];
        TH_CORE_VARS.additional.portals = [[{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"agile","color":"red","name":"Agile","topic":8,"id":2,"shortTitle":"agile-methodology-training-tools-news","url":"/agile-methodology-training-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"ai","color":"purple","name":"AI","topic":2551,"id":4001,"shortTitle":"artificial-intelligence-tutorials-tools-news","url":"/artificial-intelligence-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"big-data","color":"green","name":"Big Data","topic":6129,"id":3,"shortTitle":"big-data-analytics-tutorials-tools-news","url":"/big-data-analytics-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"cloud","color":"orange","name":"Cloud","topic":30,"id":4,"shortTitle":"cloud-computing-tutorials-tools-news","url":"/cloud-computing-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"database","color":"purple","name":"Database","topic":59,"id":5,"shortTitle":"database-sql-nosql-tutorials-tools-news","url":"/database-sql-nosql-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"devops","color":"yellow","name":"DevOps","topic":31,"id":6,"shortTitle":"devops-tutorials-tools-news","url":"/devops-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"integration","color":"green","name":"Integration","topic":1138,"id":7,"shortTitle":"enterprise-integration-training-tools-news","url":"/enterprise-integration-training-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"iot","color":"orange","name":"IoT","topic":48,"id":8,"shortTitle":"iot-developer-tutorials-tools-news-reviews","url":"/iot-developer-tutorials-tools-news-reviews"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"java","color":"purple","name":"Java","topic":1,"id":1,"shortTitle":"java-jdk-development-tutorials-tools-news","url":"/java-jdk-development-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"microservices","color":"green","name":"Microservices","topic":13268,"id":6001,"shortTitle":"microservices-news-tutorials-tools","url":"/microservices-news-tutorials-tools"},{"hideFromHomepageWidgets":true,"hideFromNav":true,"code":"mobile","color":"yellow","name":"Mobile","topic":29,"id":9,"shortTitle":"mobile-app-developer-tutorials-tools-news","url":"/mobile-app-developer-tutorials-tools-news"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"open-source","color":"purple","name":"Open Source","topic":75,"id":7001,"shortTitle":"open-source-news-tutorials-tools","url":"/open-source-news-tutorials-tools"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"performance","color":"red","name":"Performance","topic":653,"id":10,"shortTitle":"apm-tools-performance-monitoring-optimization","url":"/apm-tools-performance-monitoring-optimization"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"security","color":"green","name":"Security","topic":85,"id":2001,"shortTitle":"application-web-network-security","url":"/application-web-network-security"},{"hideFromHomepageWidgets":false,"hideFromNav":false,"code":"webdev","color":"orange","name":"Web Dev","topic":35,"id":11,"shortTitle":"web-development-programming-tutorials-tools-news","url":"/web-development-programming-tutorials-tools-news"},{"hideFromHomepageWidgets":true,"hideFromNav":true,"code":"inspiration-station ","color":"purple","name":"Writers'","topic":16873,"id":3001,"shortTitle":"writers-zone","url":"/writers-zone"}]];
        TH_CORE_VARS.additional.loadedStyles = [["/lib/bootstrap/bootstrap.less","/lib/fontello/css/fontello.css","/lib/fontello/css/animation.css","/lib/angular-ui/select.css","/lib/ngDialog/css/ngDialog.css","/less/ngDialog-theme.less","/less/container.less","/lib/bootstrap-switch/bootstrap-switch.css","/lib/dataTables/datatables.min.css","/less/dzone20.less","/less/fonts.less","/less/directives.less","/lib/sb/sb.css","/lib/bootstrap-slider/bootstrap-slider.css","/lib/codemirror/lib/codemirror.css","/less/ngToast.min.css","/less/ngToast-animations.min.css","/less/layout.less","/widgets/announcementBar/widget.less","/widgets/article/content/article-content.less","/widgets/components/slider/widget.less","/widgets/content/commentsSlider/widget.less","/widgets/header/headerV2/widget.less","/widgets/sidebar/content/list/list.less","/widgets/sidebar/tapBar/sidebar-list.less","/widgets/sidebar/tapBar/widget.less"]];
        TH_CORE_VARS.additional.model = [{"metaData":{"title":"Using JAXB for XML With Java - DZone Java","description":"This lesson in JAXB considers how to configure it and use it for marshalling and unmarshalling objects to and from XML in your Java projects.","keywords":"programming, software development, devops, java, agile, web, iot, database, mobile, big data, cloud,java,marshalling and unmarshalling,jaxb,tutorial,article","siteName":"dzone.com","url":"https://dzone.com","img":"https://dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","imgprop":"og:image","twitterImage":"https://dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","type":"article","wordCount":1455,"canonical":"https://dzone.com/articles/using-jaxb-for-xml-with-java","noIndex":false,"noFollow":false,"prevPage":null,"nextPage":null,"pubDate":"2018-02-11","id":2042990,"author":"John Thompson","section":"Java","useEscapedFragment":false,"robots":false,"robotsTag":""},"lastAuthor":{"id":2520536,"username":"john@galenetechnologies.com","realname":"John Thompson","type":"user","plug":"john-1","gold":0,"silver":0,"bronze":1,"reputation":1513,"moderator":false,"superuser":false,"emailHash":"590003f45fe10438b17d35579ebe361bae9db332f0100e997009807825981bd3","avatar":"https://dzone.com/users/2520536/photo/view.html","website":"https://springframework.guru"},"articleType":"article/tutorial","zonetop":"dzone-mikeg","claimed":{"id":2687707,"username":"Michael_Tharrington","realname":"Michael Tharrington","type":"user","plug":"michael-tharrington","gold":0,"silver":2,"bronze":5,"reputation":6477,"moderator":false,"superuser":false,"emailHash":"69c150c46cbfcead15192bed9d961ff6604824ed8c2ed30b774da6dfa8dcd390","avatar":"https://dzone.com/users/2687707/photo/view.html","website":"https://dzone.com/users/2687707/michael-tharrington.html"},"publisher":"dzone-mikeg","enableThreadedComments":true,"portal":{"id":1,"code":"java","title":"Java","shortTitle":"java-jdk-development-tutorials-tools-news","blurb":"Java programming news and training resources from DZone, the trusted source for learning advanced software design, web development and devops best practices."},"contentType":"article","content":{"id":"2042990","type":"article","plug":"using-jaxb-for-xml-with-java","creationDate":"2018-02-11 06:01:03.0"}}];
        TH_CORE_VARS.additional.requiresModule = ["dndLists","generalDirectives","monospaced.elastic","angularFileUpload","ui.bootstrap-slider","angulartics","angulartics.google.analytics","ngCookies","ngSanitize","ui.select","ui.bootstrap","angularMoment","ngTouch","ngDialog","LocalStorageModule"];
        TH_CORE_VARS.additional.TH_CSRF = "8004612851847298967";
            } catch (e) {
        console.error(e);
    }
</script>
<script type="text/javascript">
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        var gads = document.createElement('script');
        gads.async = true;
        gads.type = 'text/javascript';
        var useSSL = 'https:' == document.location.protocol;
        gads.src = (useSSL ? 'https:' : 'http:') +
                '//www.googletagservices.com/tag/js/gpt.js';
        var node = document.getElementsByTagName('script')[0];
        node.parentNode.insertBefore(gads, node);
    })();
</script>

<script type="text/javascript" src="./Using JAXB for XML With Java - DZone Java_files/combined.js" charset="utf-8"></script><script type="text/javascript" src="./Using JAXB for XML With Java - DZone Java_files/combined(2).js" charset="utf-8"></script><script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r;
        i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments)
                }, i[r].l = 1 * new Date();
        a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
        a.async = 1;
        a.src = g;
        m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-410289-1', 'auto');
    ga('require', 'linkid', 'linkid.js');
    ga('require', 'GTM-TSD9TZP');
    ga('set', 'siteSpeedSampleRate', 25);
</script>

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-K25QL22');</script>
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-K25QL22"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager -->

    <style>
#adtoniq-msgr-bar {
	position: fixed;
	bottom: -20%;
	left: 0;
	width: 100%;
	min-height: 30px;
	z-index: 99999;
	padding: 15px 0;
	font-family: sans-serif;
	font-size: 16px;
	text-align: center;
	background: #222;
	color: #fff;
	-webkit-transition: bottom 500ms ease-in-out;
	transition: bottom 500ms ease-in-out
}

#adtoniq-msgr-bar p {
	margin: 0 0 10px !important
}

#adtoniq-msgr-bar a {
	color: #fff !important;
	text-decoration: underline !important
}

#adtoniq-msgr-bar a:hover {
	color: #d3d3d3 !important;
	text-decoration: underline !important
}

#adtoniq-msgr-bar.reveal-alert {
	bottom: 0;
	-webkit-transition: bottom 500ms ease-in-out;
	transition: bottom 500ms ease-in-out
}

#adtoniq-msgr-bar #adtoniq-msg-buttons {
	display: inline-block;
}

#adtoniq-msg-buttons button {
	margin-left: 20px;
}


#adtoniq-msgr-bar .btn-msg-bar {
	display: inline-block;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	border: 1px solid transparent;
	white-space: nowrap;
	padding: 10px 30px;
	border-radius: 0;
	background-color: #395972;
	color: #fff !important;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none
}

#adtoniq-msgr-bar .btn-msg-bar:hover {
	background: #283e50
}

#adtoniq-msgr-bar .btn-msg-bar+.btn-msg-bar {
	margin-left: 10px
}

#adtoniq-msgr-bar #adtoniq-msg {
	display: inline
}

#adtoniq-msgr-bar #adtoniq-btns {
	display: inline
}

</style>
<script>
adtoniq=function(){var K="";var ah=document.createElement("a");ah.href=window.location.href;var y="dzone.com";var j=y;var w="ontouchstart" in window||navigator.msMaxTouchPoints;var O="https://p.contentmanagementfeed.com";var e="https://p.contentmanagementfeed.com/";var Q="https://p.contentmanagementfeed.com/";var aj="b7410680-636d-49b6-a367-08c87143221f";var I="1389";var z="master-live";var ak="off";var ac="6";var A=[{width:"300",height:"600",cssSelector:".content-right-images .sidebar-ad:nth-child(1)",stripeId:"118623",directAd:{imageUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/i/3eJyVzcEKAiEQgOFXWeZcqxB02Jss0anLFnQcJhUzHDU0iqJ3L/cFovvH/78gw9CBZ3K2iJE4k3exCHXc4yZQqX4kfba4DelEYUfx69jGKjJpnA4Klakp+iu6GSDPwixXUj7WUvaX7GDRAbXJr2aDtwb/a99hAPNM0fY6Mbw/9wVHQw==",clickThroughUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/d/3eJx9UE1LxDAQ/StLDntym9SCSKFI2V28uPixguAlTNMhjdt82KSsKP53Mz0KOoeBYd6b9958sYnVKzakFGLNOZxjARY+vSuUtxxHiMkoUAPyCXsT+c06TaemAwllVd4JquvqFd1ju6fNFmwAo10TQMmn51a2ffLOvEs9+g5GacGBxn4dlVQDOIdjvrVMfxF32Qv+ostyU4nNpSCin1N2is0DwFHujDYp4w4wnTAZpwkR5m40ccCpuU+5R3axYkCh25ej3C8Jt5RQ3i4ih0XDoksEnAn4f5jsRXxcCVG8BU2UM6tZT67phez7B7G2e9E=",campaignStartTime:"",campaignEndTime:""},preMarkup:"<div style='min-height: 600px; position: relative; text-align: center; width: 100%;'>",postMarkup:"</div>"},{width:"728",height:"90",cssSelector:".advertPancake8 .ng-isolate-scope",stripeId:"118623",directAd:{imageUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/i/3eJyVzbEKwjAQgOFXKTdrIy5qt1DEyaUVHI8zCTGSSyKJKIrvrukLiPvH/78gQdeAY7Imi544kbMhC3kccespF9eTOhvc+Xgiv6fwdWxCEYkUDgeJUpcY3BXtBJAnoeer5fqxWbSXZGHWANXHr2SFtwr/St+hA/2MwbQqMrw/hPlHBQ==",clickThroughUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/d/3eJx9UE1LxDAQ/StLDntym9SCSKFI2V28uPixguAlTNMhjdt82KSsKP53Mz0KOoeBYd6b9958sYnVKzakFGLNOZxjARY+vSuUtxxHiMkoUAPyCXsT+c06TaemAwllVd4JquvqFd1ju6fNFmwAo10TQMmn51a2ffLOvEs9+g5GacGBxn4dlVQDOIdjvrVMfxF32Qv+ostyU4nNpSCin1N2is0DwFHujDYp4w4wnTAZpwkR5m40ccCpuU+5R3axYkCh25ej3C8Jt5RQ3i4ih0XDoksEnAn4f5jsRXxcCVG8BU2UM6tZT67phez7B7G2e9E=",campaignStartTime:"",campaignEndTime:""},preMarkup:"<div style='min-height: 90px; position: relative; display: block;padding: 1em 0;text-align: center;clear: both;'>",postMarkup:"</div>"},{width:"728",height:"90",cssSelector:".advertPancake10 .ng-isolate-scope",stripeId:"118623",directAd:{imageUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/i/3eJyVzbEKwjAQgOFXKTdrIy5qt1DEyaUVHI8zCTGSSyKJKIrvrukLiPvH/78gQdeAY7Imi544kbMhC3kccespF9eTOhvc+Xgiv6fwdWxCEYkUDgeJUpcY3BXtBJAnoeer5fqxWbSXZGHWANXHr2SFtwr/St+hA/2MwbQqMrw/hPlHBQ==",clickThroughUrl:"https://d3ebuk1gnkd4vq.cloudfront.net/d/3eJx9UE1LxDAQ/StLDntym9SCSKFI2V28uPixguAlTNMhjdt82KSsKP53Mz0KOoeBYd6b9958sYnVKzakFGLNOZxjARY+vSuUtxxHiMkoUAPyCXsT+c06TaemAwllVd4JquvqFd1ju6fNFmwAo10TQMmn51a2ffLOvEs9+g5GacGBxn4dlVQDOIdjvrVMfxF32Qv+ostyU4nNpSCin1N2is0DwFHujDYp4w4wnTAZpwkR5m40ccCpuU+5R3axYkCh25ej3C8Jt5RQ3i4ih0XDoksEnAn4f5jsRXxcCVG8BU2UM6tZT67phez7B7G2e9E=",campaignStartTime:"",campaignEndTime:""},preMarkup:"<div style='min-height: 90px; position: relative; display: block;padding: 1em 0;text-align: center;clear: both;'>",postMarkup:"</div>"}];var x=[];var aa="";var ai="${waisaDisable}";var U="PGRpdiBjbGFzcz0icGlfJXN0cmlwZWlkJSI+CiAgICA8IS0tIGRvbWFpbjogc3RyaXBlLnJzLXN0cmlwZS5jb20gLS0+CiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgIC5waV8lc3RyaXBlaWQlIGRpdiwgLnBpXyVzdHJpcGVpZCUgYSwgLnBpXyVzdHJpcGVpZCUgaW1nLCAucGlfJXN0cmlwZWlkJSB1bCwgLnBpXyVzdHJpcGVpZCUgbGkgeyBtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGxpbmUtaGVpZ2h0OiAwOyBsaXN0LXN0eWxlOiBub25lOyBib3JkZXI6IDA7IHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfSAucGlfJXN0cmlwZWlkJSB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgbWF4LXdpZHRoOiAlc3RyaXBlX3dpZHRoJXB4OyBtYXJnaW46IDAgYXV0bzsgb3ZlcmZsb3c6IGhpZGRlbjsgfSAucGlfJXN0cmlwZWlkJSBhIHsgZGlzcGxheTogYmxvY2s7IGJvcmRlcjogMDsgYm9yZGVyLXN0eWxlOiBub25lOyBvdXRsaW5lOiBub25lOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH0gLnBpXyVzdHJpcGVpZCUgaW1nIHsgZGlzcGxheTogYmxvY2s7IG1heC13aWR0aDogMTAwJTsgYm9yZGVyOiAwOyBvdXRsaW5lOiBub25lOyB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH0gLnBpXyVzdHJpcGVpZCUgLnBpX2JyYW5kIGltZyB7IG1heC13aWR0aDogODRweDsgfSAucGlfJXN0cmlwZWlkJSAucGlfYnJhbmQgeyBwb3NpdGlvbjogYWJzb2x1dGU7IGRpc3BsYXk6IGJsb2NrOyB3aWR0aDogMTVweDsgaGVpZ2h0OiAxNXB4OyBvdmVyZmxvdzogaGlkZGVuOyByaWdodDogMDsgdG9wOiAwOyBjdXJzb3I6IHBvaW50ZXI7IHotaW5kZXg6IDEwMDA7IHRyYW5zaXRpb246IHdpZHRoIC4zczsgbGluZS1oZWlnaHQ6IDA7IH0gLnBpXyVzdHJpcGVpZCUgLnBpX2JyYW5kOmhvdmVyIHsgd2lkdGg6IDg0cHg7IH0gLnBpXyVzdHJpcGVpZCUgLnBpX2F1IGltZyB7IGhlaWdodDogYXV0bzsgd2lkdGg6IDEwMCU7IG1heC13aWR0aDogJXN0cmlwZV93aWR0aCVweDsgfQogICAgPC9zdHlsZT4KICAgIDxkaXYgY2xhc3M9InBpX2JyYW5kIj4KICAgICAgICA8YSBocmVmPSJodHRwczovL3N0cmlwZS5ycy1zdHJpcGUuY29tL2JyYW5kaW5nLz91dG1fc291cmNlPWNvbnRlbnRzdHJpcGUmdXRtX21lZGl1bT13ZWImdXRtX2NhbXBhaWduPXJzXyVzdHJpcGVpZCUmdXRtX2NvbnRlbnQ9bG9nbyZyc190eXBlPXdlYiIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9mb2xsb3cgbm9vcGVuZXIiPgogICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9wLmNvbnRlbnRtYW5hZ2VtZW50ZmVlZC5jb20vci9iIiBoZWlnaHQ9IjE1IiBhbHQ9IkxlYXJuIG1vcmUgYWJvdXQgUmV2ZW51ZVN0cmlwZS4uLiI+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJwaV9hdSI+CiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9zdHJpcGUucnMtc3RyaXBlLmNvbS9zdHJpcGUvcmVkaXJlY3Q/Y3NfZW1haWw9e3tHVUlEfX0mY3Nfc3RyaXBlaWQ9JXN0cmlwZWlkJSZjc19vZmZzZXQ9MCZjc19jb250YWluZXJ0eXBlPXdlYiZjc19lc3A9cG93ZXJpbmJveF93ZWIiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vZm9sbG93IG5vb3BlbmVyIj48aW1nIGFsdD0iIiBzcmM9Imh0dHBzOi8vcC5jb250ZW50bWFuYWdlbWVudGZlZWQuY29tL3IvYT9zPSVzdHJpcGVpZCUiPjwvYT4KICAgIDwvZGl2Pgo8L2Rpdj4K";var ag={};var q="";var a="";var an="off";var f=null;var r=null;var J;var X=false;var b=false;var ap=false;var H=false;var T=false;var g=false;var p=false;var F=false;var L="";var G=0;var o=false;var ae=0;var P=Math.floor(Math.random()*10000000);var W=0;var af=[];var am=[];var ad=[];var u=[];var S=[];var au=[];var n=[];var at=null;var aq=k("adtoniq_choice");var V=null;var al=false;var N=0;function C(az){if(document.getElementsByClassName){return document.getElementsByClassName(az)}var l=[];var ay=new RegExp("(^| )"+az+"( |$)");var ax=document.getElementsByTagName("*");for(var aw=0,av=ax.length;aw<av;aw++){if(ay.test(ax[aw].className)){l.push(ax[aw])}}return l}function m(l){E(l,"")}function E(aw,av){var ax=C(aw);if(ax){for(var l=0;l<ax.length;l++){ax[l].style.display=av}}}function B(){E("adtoniq_adblocked","none");E("adtoniq_acceptable","none");E("adtoniq_blocked_analytics","none");m("adtoniq_nonblocked");m("adtoniq_protect")}function D(l){if(document.readyState==="loading"){window.addEventListener("DOMContentLoaded",function(){l()})}else{l()}}function c(){var av=am.length;for(var l=0;l<av;l++){am[l]()}m("adtoniq_nonblocked");m("adtoniq_protect")}function t(){m("adtoniq_adblocked");if(H){m("adtoniq_acceptable")}else{m("adtoniq_adblocked_no_acceptable")}}var R=false,ar=false;var h=false;function ao(){if(!h&&(ap||b)){if(aq=="track"){D(t)}function av(){h=true;if(f&&!f()){return}var az=u.length;for(var ay=0;ay<az;ay++){u[ay](aq,Q)}}if(document.readyState==="loading"){window.addEventListener("DOMContentLoaded",function(){av()})}else{av()}}function l(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}if(R&&ar){if(ap||b){if(l()){document.body.className+=" adtoniq-mobile"}}else{D(c)}var ax=af.length;for(var aw=0;aw<ax;aw++){af[aw](ap,b,H,p)}}}function k(l){var av="; "+document.cookie;var aw=av.split("; "+l+"=");if(aw.length==2){return aw.pop().split(";").shift()}}function v(aw,ax,ay){var l="";if(ay){var av=new Date();av.setTime(av.getTime()+(ay*24*60*60*1000));l="; expires="+av.toUTCString()}document.cookie=aw+"="+ax+l+"; path=/"}function M(){R=true;ao()}function Y(){ar=true;ao()}function ab(av,l){if(!l){l=window.location.href}av=av.replace(/[\[\]]/g,"\\$&");var ax=new RegExp("[?&]"+av+"(=([^&#]*)|&|#|$)"),aw=ax.exec(l);if(!aw){return null}if(!aw[2]){return""}return decodeURIComponent(aw[2].replace(/\+/g," "))}function s(av,l){l.parentNode.insertBefore(av,l.nextSibling)}function Z(){if(q!=="${msgAdUnitMsg}"&&q.length>0&&a!=="${msgAdUnitMsgSelector}"&&a.length>0){var aw=document.querySelectorAll(a);for(i=0;i<aw.length;i++){var l=aw[i];var av=document.createElement("div");av.insertAdjacentHTML("beforeend",q);var ax=av.getElementsByClassName("adtoniq-optin");if(ax&&ax.length==1){ax[0].onclick=function(){adtoniq.optIn();location.reload()}}s(av,l);l.parentNode.removeChild(l)}}}return{setup:function(){isSetPreviewCookie=ab("atdoniq-preview");if(isSetPreviewCookie=="1"){v("adt_mc",1,0)}if(z=="master-preview"){var av=k("adt_mc");al=(av!="1")}if(an=="on"){var l=document.querySelector("meta[name='adtoniq-exclude']");if(l){al=true}}if(!al){adtoniq.setup2()}},addBobber:function(l){af.push(l)},addAdBlockerCallback:function(l){af.push(l)},setAdUnitLocator:function(l){at=l},onBlocked:function(l){if(h){if(ap||b){if(aq!="track"){t();l(aq,true)}}}else{u.push(l)}},onMessaging:function(l){ad.push(l)},messagingEvent:function(l){var aw=ad.length;for(var av=0;av<aw;av++){ad[av](l)}},onAnalyticsBlocked:function(l){S.push(l)},setGA:function(av,aw,l){L=av;G=aw;o=l},setIntegration:function(av,l){O=av},setProxy:function(l){Q=l},getProxy:function(){return Q},setCollector:function(l){e=l},setId:function(l){I=l},optOut:function(av){aq="do-not-track";v("adtoniq_choice",aq,365);for(var l=0;l<n.length;l++){n[l]()}},optIn:function(av){aq="track";v("adtoniq_choice","track",365);for(var l=0;l<au.length;l++){au[l]()}},onOptIn:function(l){au.push(l)},onOptOut:function(l){au.push(l)},setEnableAdtoniq:function(l){f=l},setShouldShowAds:function(l){r=l},addNoAdBlockerCallback:function(l){am.push(l)},laybait:function(){function av(aw,ay){var ax=new XMLHttpRequest();ax.open("get",aw);ax.responseType="blob";ax.onload=function(){var az=new FileReader();az.onload=function(){ay(this.result)};az.readAsDataURL(ax.response)};ax.send()}function l(){var aw=new Image();aw.onload=function(){av(aw.src,function(ax){ap=ax.length<=5;Y()})};aw.onerror=function(){ap=true;Y()};aw.src="https://static-42andpark-com.s3-us-west-2.amazonaws.com/ads/ad-300x250.png"}l();document.addEventListener("DOMContentLoaded",function(az){var ay=document.createElement("iframe");ay.src="https://d2tqbzi5xs6dya.cloudfront.net/1389.html?o="+(typeof(aq)!="undefined"?(aq=="track"?"t":"d"):"u")+"&r="+document.referrer;ay.setAttribute("style","position:absolute;left:-10px;width:1px;height:1px;");document.body.appendChild(ay);var ax=null;function aA(){var aF="pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads text-ad-links";var aE="width: 1px !important; height: 1px !important; position: absolute !important; left: -10000px !important; top: -1000px !important;";ax=document.createElement("div");ax.id="zippity";ax.setAttribute("class",aF);ax.setAttribute("style",aE);document.body.appendChild(ax)}function aD(){var aF=window.document.body.getAttribute("abp")!==null||ax.offsetParent===null||ax.offsetHeight==0||ax.offsetWidth==0||ax.offsetLeft==0||ax.offsetTop==0||ax.clientHeight==0||ax.clientWidth==0;if(window.getComputedStyle!==undefined&&!aF){var aE=window.getComputedStyle(ax,null);aF=aE.getPropertyValue("display")=="none"||aE.getPropertyValue("visibility")=="hidden"}if(aF){b=true}return aF}aA();var aC=new Date();var aB=null;var aw=setInterval(function(){if(aD()){if(aB){clearTimeout(aB)}try{document.body.removeChild(ax)}catch(aE){}clearInterval(aw);M()}},100);aB=setTimeout(function(){clearInterval(aw);try{document.body.removeChild(ax)}catch(aE){}M()},1*1000)})},setup2:function(){if(typeof j==="undefined"){return}if(aq=="track"){m("adtoniq_nonblocked")}adtoniq.onBlocked(function(av,aw){function l(){adtoniq.inflateAdUnit()}if(av=="do-not-track"){Z()}else{if(av!="track"){adtoniq.onOptIn(l)}else{l()}}});adtoniq.laybait()},waisaChoice:function(ay){var l=!!window.adtoniqAlertData?window.adtoniqAlertData:null;var av=document.getElementById("adtoniq-msgr-bar");if(!av){var av=document.createElement("div");av.id="adtoniq-msgr-bar"}av.classList.add("adtoniq-waisa");av.innerHTML=l.waisaContent;var az=document.createElement("div");az.id="adtoniq-msg-buttons";az.classList.add("adtoniq-waisa");var ax=document.createElement("button");ax.innerHTML="Clear my choice";az.appendChild(ax);ax.onclick=function(aA){document.cookie="adtoniq_choice=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";location.reload()};var aw=document.createElement("button");aw.innerHTML="Close";az.appendChild(aw);aw.onclick=function(aA){document.body.classList.remove("adtoniq-body");adtoniq.messagingEvent("hide");av.parentNode.removeChild(av)};av.appendChild(az);document.body.appendChild(av);av.classList.add("reveal-alert");document.body.classList.add("adtoniq-body");adtoniq.messagingEvent("show");ay.preventDefault();return false},inflateAdUnit:function(){if(z=="master-preview"){var aS=k("adt_mc");if(aS!="1"){return}}if(!(isSetPreviewCookie=="1")&&aa!=="${stripeSplit}"&&aa.length>0){if(Math.floor(Math.random()*parseInt(aa))!=0){return}}function aU(a1){if(ai!=="on"){var a0=document.createElement("img");a0.src="//d2t7a3zbo166a9.cloudfront.net/images/logos/A-15x15.png";a0.style.setProperty("float","right");var a2=document.createElement("span");a2.innerText="Why am I seeing this ad?";a2.style.display="none";a2.style.fontSize="10px";a2.style.paddingRight="10px";a2.style.verticalAlign="top";a2.style.right="-20px";a2.style.top="-20px";a2.style.position="absolute";a2.style.width="160px";a2.style.color="rgb(0, 0, 0)";var aZ=document.createElement("a");aZ.href="#";aZ.appendChild(a0);aZ.appendChild(a2);aZ.style.position="relative";aZ.style.display="block";aZ.style.zIndex="9";aZ.style.setProperty("float","right");aZ.style.height="20px";aZ.style.boxShadow="none";aZ.onmouseenter=function(){a2.style.display=""};aZ.onmouseleave=function(){a2.style.display="none"};aZ.onclick=adtoniq.waisaChoice;a1=a1.parentNode;a1.parentNode.insertBefore(aZ,a1);if(ak=="on"){a1.style.border="2px solid  red"}a1.parentNode.style.height=(a1.parentNode.clientHeight+20)+"px"}}function aw(a2,a0,a1,aZ){var a3=a0.getAttribute(a1);if(a3==null){a3=aZ}a2.setAttribute(a1,a3)}function aG(a0,aZ){var a1=aZ.getAttribute("style");if(a1){if(a1[a1.length-1]!=";"){a1+=";"}a1=a1.replace(/;/g," !important;");a0.setAttribute("style",a1)}}function aO(a1,a0,aZ){if(aZ.getAttribute(a1)){a0.setAttribute(a1,aZ.getAttribute(a1))}}function aY(a0,aZ){aG(a0,aZ)}function az(aZ,a0){a0.parentNode.insertBefore(aZ,a0)}for(var aP=0;aP<A.length&&N<ac;aP++){var aM=A[aP].width;var aK=A[aP].height;var aA=A[aP].cssSelector;var av=A[aP].stripeId;var aB=A[aP].url;var l=A[aP].preMarkup;var aJ=A[aP].postMarkup;var aQ=A[aP].format;var aR=A[aP].directAd;if(aB!=null&&!location.pathname.match(aB)){continue}var aV=at?at():document.querySelectorAll(aA);var ay=Math.min(aV.length,ac-N,6-N);var aW;if(aQ){aW=ag[aQ]}else{aW=U}N+=ay;for(i=0;i<ay;i++){var aE=aV[i];if(aE){if(l){var ax="_x"+(Math.floor(Math.random()*10000)+1)+"x_";var aI=l+"<div id='"+ax+"'></div>"+aJ;d=document.createElement("div");d.insertAdjacentHTML("beforeend",aI);s(d.firstChild,aE);aE.parentNode.removeChild(aE);aE=document.querySelector("#"+ax)}var aT=document.createElement("div");if(aR!=null){aT.insertAdjacentHTML("beforeend","<a href='"+aR.clickThroughUrl+"?fqdn=dzone.com' target='_blank'><img src = '"+aR.imageUrl+"?fqdn=dzone.com'></a>")}else{aT.classList.add("pi_"+av);var aN=document.createAttribute("powerinbox");aT.setAttributeNode(aN);aT.innerHTML=atob(aW).split("%stripeid%").join(av).split("%stripe_width%").join(aM)}s(aT,aE);aU(aE);aE.parentNode.removeChild(aE)}}}for(var aP=0;aP<x.length&&N<ac;aP++){var aA=x[aP].cssSelector;var aH=x[aP].src_id;var aB=x[aP].url;var l=x[aP].preMarkup;var aJ=x[aP].postMarkup;var aM=x[aP].width;var aK=x[aP].height;var aQ=x[aP].format;var aF=x[aP].cn;if(aB!=null&&!location.pathname.match(aB)){continue}var aV=at?at():document.querySelectorAll(aA);var aD=Math.min(aV.length,ac-N,6-N);N+=aD;for(i=0;i<aD;i++){var aE=aV[i];if(aE){if(l){var ax="_x"+(Math.floor(Math.random()*10000)+1)+"x_";var aI=l+"<div id='"+ax+"'></div>"+aJ;d=document.createElement("div");d.insertAdjacentHTML("beforeend",aI);s(d.firstChild,aE);aE.parentNode.removeChild(aE);aE=document.querySelector("#"+ax)}var aT;var aL=Math.round(new Date().getTime()/1000);if(aQ){var aX=document.createElement("iframe");aX.setAttribute("scrolling","no");aX.frameBorder=0;aX.style.position="absolute";aX.style.height="100%";aX.style.width="100%";aX.style.left=0;aX.style.top=0;aX.src=Q+"m/f?a=${encryptedArgs}&s="+aH+"&f="+encodeURIComponent(aQ+":"+aF)+"&b="+aL;aT=document.createElement("div");aT.style.overflow="hidden";var aC=aQ.split("x");aT.style.paddingTop=(100*aC[1]/aC[0]).toFixed(2)+"%";aT.style.position="relative";aT.appendChild(aX)}else{aT=document.createElement("iframe");aT.setAttribute("scrolling","no");aT.frameBorder=0;aT.style.position="relative";aT.style.height=aK+"px";aT.style.width=aM+"px";aT.src=Q+"m/f?a=${encryptedArgs}&s="+aH+"&f="+encodeURIComponent(aM+":"+aK+":"+aF)+"&b="+aL}s(aT,aE);aU(aE);aE.parentNode.removeChild(aE)}}}},setFilter:function(l){v("adtoniq-filter",l,365)},setJson:function(l){A=l}}}();adtoniq.setup();(function(){var c={targetedUsers:"adsonly",greetingMsg:'<span style="max-width: 800px;padding-top: 3px;"> <h2 style=" color: #ffffff!important; margin-bottom: 10px; margin-top: 0; font-family: Helvetica Neue,Helvetica,sans-serif; margin-bottom: 10px; line-height: 1.2; font-weight: 600; font-size: 1.5em; margin-top: 0;">You can leave your ad blocker on and still support us</h2> <div id=""> <p class="targetadt" style="color: #ffffff; font-family: Helvetica Neue,Helvetica,sans-serif; font-size: 14px; line-height: 1.3; max-width: 680px; margin: 0!important;">We respect your decision to block adverts and trackers while browsing the Internet. If you would like to support our content, though, you can choose to view a small number of premium adverts on our site by hitting the \'Support\' button. These heavily vetted ads will not track you, and will fund our work. </p><p class="targetadt" style="color: #ffffff; font-family: Helvetica Neue,Helvetica,sans-serif; font-size: 14px; line-height: 1.3; max-width: 680px; margin: 0!important;">Thank you for your support!</p></div></span>',confirmMsg:"",protectionUrl:"",rejectMsg:"",customBtnClass:"",waisaContent:"<p>We respect your decision to block adverts and trackers while browsing the internet. You're currently supporting The DZone's content by seeing a small number of premium adverts. These heavily vetted ads will not track you, and will fund our work.<br><br>If you changed your mind you can click opt out. Thanks for being a part of DZone.</p>",rejectBtnText:"No Thanks",protectionCss:"",protectionStatus:"none",confirmBtnText:"Support"};var m={};window.adtoniqAlertData=c;var u=!!window.adtoniqAlertData?window.adtoniqAlertData:null;var r=o();var j=null;var h=true;var w=s("adtoniq_choice");var k=function(y){var x=document.createElement("a");x.href=y;return x};function f(){var x=g();return u.protectionStatus!="none"&&x&&k(x).pathname==location.pathname}window.addEventListener("DOMContentLoaded",function(){if(!window.adtoniq){console.error("Cannot run messenger bar module -- adtoniq global is not found");return false}if(!u){console.error("Cannot run messenger bar module -- no data found");return false}if((u.targetedUsers==="all"&&!w)||f()){v()}else{if(u.targetedUsers==="adsplus"){adtoniq.onAnalyticsBlocked(e)}if(u.targetedUsers==="adsonly"){adtoniq.onBlocked(a)}}},false);function g(){var x=u.protectionUrl;if(x.length==0){return""}if(x.substr(0,1)!="/"){x="/"+x}if(x.substr(x.length-1,1)!="/"){x=x+"/"}return x}function p(z){var y=false,x=g();if(x.length>0){switch(u.protectionStatus){case"none":break;case"allButHome":y=location.pathname!="/"&&location.pathname!=x;if(y&&(!z||z!="track")){location.href=x}else{document.body.style.display="block !important"}break;case"all":y=location.pathname!=x;if(y&&(!z||z!="track")){location.href=x}else{document.body.style.display="block !important"}break;case"css":break}}return y}function e(x,y){if(x&&!y){v()}}function a(x){if(!x){v()}}function v(){p(w);document.body.appendChild(r);j=setTimeout(function(){r.classList.add("reveal-alert");r.addEventListener("click",n,false);document.body.classList.add("adtoniq-body");adtoniq.messagingEvent("show")},50)}function n(x){if(x.target.id==="adtoniq-msg-track-btn"||x.target.id==="adtoniq-msg-no-track-btn"){if(typeof adtoniq.optIn==="function"){if(x.target.name=="track"){adtoniq.optIn()}else{adtoniq.optOut()}q(x.target.name);r.removeEventListener("click",n,false);clearTimeout(j)}}}function o(){var x=document.createElement("div");x.id="adtoniq-msgr-bar";x.innerHTML=b();return x}function b(A){var x=u.confirmBtnText.length>0?'<button id="adtoniq-msg-track-btn" name="track" class="btn-msg-bar '+u.customBtnClass+'">'+u.confirmBtnText+"</button>":"";var y=u.rejectBtnText.length>0?'<button id="adtoniq-msg-no-track-btn" name="do-not-track" class="btn-msg-bar '+u.customBtnClass+'">'+u.rejectBtnText+"</button>":"";var z='<button id="adtoniq-msg-close-btn" name="close" class="btn-msg-bar">Close</button>';var C=!A?u.greetingMsg:A==="confirm"?u.confirmMsg:u.rejectMsg;C='<div id="adtoniq-msg">'+C+"</div>";var B=!A?x+y:z;C+='<div id="adtoniq-btns">'+B+"</div>";return C}function q(x){if(c.confirmMsg.length==0){l()}else{r.innerHTML=b(x==="track"?"confirm":"reject");r.addEventListener("click",l,false)}}function l(){r.classList.remove("reveal-alert");r.addEventListener("click",l,false);r.addEventListener("transitionend",t,false);document.body.classList.remove("adtoniq-body");adtoniq.messagingEvent("hide")}function t(){document.body.removeChild(r);r.removeEventListener("transitionend",t,false)}function s(x){var y="; "+document.cookie;var z=y.split("; "+x+"=");if(z.length===2){return z.pop().split(";").shift()}return null}}());
</script>
<style>#adtoniq-msgr-bar #adtoniq-msg {display: inline-block;}
#adtoniq-msg {width: 75%;float: left;text-align: left;}
#adtoniq-msgr-bar #adtoniq-btns {display: inline-block;}
#adtoniq-btns { width: 25%!important; float: right!important; margin-right: 0px!important; max-width: 150px;}
button#adtoniq-msg-track-btn { width: 100%; display: block;}
button#adtoniq-msg-no-track-btn { background-color: transparent!important; width: 100%; margin: 0!important; margin-top: 11px!important; color: #000000!important; font-weight: 600; font-size: 12px; border: 0; border: none;}

#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar {color: #ffffff!important;}

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {background-color: #222635; opacity: 1; width: 100%; max-width: 1300px; margin: 0 auto; left: 0; right: 0; padding: 20px; border-top:2px solid #29a8ff;z-index: 999999999;} #adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button {color: #ffffff!important;background-color: #29a8ff!important;margin-top: 0px;font-size: 13px;line-height: 24px;border-radius: 2px!important;font-weight: 500;padding: 10px 18px!important;letter-spacing: 1px;text-transform: uppercase; border: 0; border: none;} #adtoniq-msg {width: 70%;float: left;text-align: left;}#adtoniq-btns {width: 30%;float: none;text-align: right; margin-right:40px;} #adtoniq-msgr-bar.adtoniq-waisa p { font-size: 14px !important; line-height: 1.2; display: block; width: 100%; margin: 0 auto !important; text-align: center; max-width: 80%;} #adtoniq-msg-buttons.adtoniq-waisa { width: 100%; margin-top: 20px; } button#adtoniq-msg-track-btn {float: right;} p.a_deets {color: #ffffff;} #adtoniq-msgr-bar.adtoniq-waisa p { color: #ffffff; min-height: 120px; }


#a_hider .a_deets { display: inline-block; margin-bottom: 0!important;}
#a_hider.a_showme .a_deets, #a_hider.a_showme .arrow { display: none; }
#a_hider .targetadt { display: none; }
#a_hider.a_showme .targetadt { display: block; }

#a_hider { cursor: pointer; }

#a_hider:hover { cursor: pointer; }
#a_hider:hover .a_deets { text-decoration: underline; }

.arrow { height: 7px; width: 7px; border: 1px solid #000000; border-width: 2px 2px 0 0; -webkit-transform: rotate(45deg); -ms-transform: rotate(45deg); transform: rotate(45deg); display: inline-block; -webkit-transform: rotate(135deg); -ms-transform: rotate(135deg); transform: rotate(135deg); margin-left: 10px; padding-bottom: 2px; padding-left: 2px; }

@media screen and (max-width:1015px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { width: auto; float: right; }
div#adtoniq-msg h2 { font-size: 20px!important; }

p.a_deets { font-size: 14px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert {width: auto!important; padding: 15px;}
#adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { padding: 10px 0;}
} 

@media screen and (max-width:640px){ 
#adtoniq-msgr-bar .p.targetadt{max-width: 100%!important;margin: 0 auto!important;}

div#adtoniq-msg h2 { font-size: 18px!important; }
p.a_deets { font-size: 11px!important; }
#adtoniq-msg { width: 60%; }
#a_hider.a_showme p.targetadt { font-size: 12px!important;}
} 

@media screen and (max-width:565px){ 
#adtoniq-msg { width: 170px; padding-right: 30px; width: 65%; padding-right: 25px; }

#adtoniq-msgr-bar, #adtoniq-msgr-bar.reveal-alert { padding: 10px; width: auto!important; max-width: none; }
#adtoniq-msg-track-btn, #adtoniq-msg-close-btn, .adtoniq-waisa button, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { font-size: 11px; line-height: 17px; padding: 8px 14px!important;}
}


@media screen and (max-width:339px){ 
    #adtoniq-msg { width: 99%; padding-bottom: 7px; }
	#adtoniq-btns {width: 100%!important; float: none!important; margin-top: 20px;text-align: center;display: block!important;}
	#adtoniq-msgr-bar #adtoniq-btns { display: inline!important; }
	#adtoniq-msg-track-btn, #adtoniq-msg-no-track-btn { display: inline-block!important; }
	button#adtoniq-msg-track-btn, #adtoniq-msgr-bar #adtoniq-msg-no-track-btn.btn-msg-bar { float: left; }
	button#adtoniq-msg-no-track-btn { margin-top: 0!important; }
}


#adtoniq-msgr-bar.adtoniq-waisa.reveal-alert { z-index: 999; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons { text-align: center; }
.adtoniq-waisa.reveal-alert #adtoniq-msg-buttons button { margin: 10px; }
.adtoniq-mobile { }</style>

<script type="text/javascript">
    (function() {
            function controller($scope, TH$Dialog, $location, $rootScope, $timeout, TH$SharedVars, $service, TH$LocalStorage) {

    $scope.searchT ='';
    $scope.zonesOpen = false;

    TH$SharedVars.bind($scope, 'searchT', 'searchTerm', true);

    $scope.login = function() {
        TH$Dialog.open({
            loadWidget: 'users.loginForm',
            size: 'modalForm',
            showClose: true
        });
    };

    $scope.signIn = function() {
        TH$Dialog.open({
            loadWidget: 'users.registration',
            size: 'modalFormExtended',
            showClose: true
        });
    };

    $scope.allResults = function() {
        window.location='/search';
    };

    $("#search").keyup(function(e) {
        var length = ($scope.searchT ? $scope.searchT.length : 0);
        $scope.searchT = ($scope.searchT ? $scope.searchT : '');

        if (e.keyCode === 13 && length > 2) {
            $scope.allResults();
        } else {
            $scope.search();
        }
    });

    $scope.focusSearch = function() {
        $timeout(function() {
            $("#search").focus();
        }, 100)
    };

    $scope.search = function() {
        var length = ($scope.searchT ? $scope.searchT.length : 0);
        $scope.loading = (length > 2);
        if (length < 3) {
            if ($scope.nodes || $scope.nodes == []) {
                $timeout(function() {
                    $scope.nodes = [];
                    $scope.cType = [];
                    $scope.related = [];
                    $scope.pager = [];
                    $scope.searchParam = [];
                    $scope.totalResults = null;

                }, 100)
            }
            return false;
        }

        var term = $scope.searchT;
        if ($scope.prevTerm == term) {
            return;
        }

        $scope.prevTerm = term;

        TH$LocalStorage.value('searchValue', term);
        term = (term ? term : '');
        $service.nextPage({term: term, pageSize: 7}, null, true).then(function(data) {
            $scope.loading = false;
            var curPage = 1;
            $scope.nodes = data.pages.newest[curPage];
            $scope.haveResults = ($scope.nodes) ? true : false;
            $scope.totalResults = data.totalItems;
        });
    }

    $scope.toggleZones = function(url, $event) {
        $event.preventDefault();
        $scope.zonesOpen = !$scope.zonesOpen;
    }
}

            var WMODEL_DATA = {};
            WMODEL_DATA.isAdmin = false;
        WMODEL_DATA.getPortals = null;
        WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.user = {"karma":40,"country":null,"website":null,"city":null,"about":null,"avatar":"https://secure.gravatar.com/avatar/?d=identicon&r=PG","realName":"$$ANON_USER$$","websiteUrl":"","jobRole":null,"tagline":null,"company":null,"id":2500002,"job":null};
        TH.installWidgetController('header.headerV2', 'mainHeader', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'nextPage', data: true}], ' oUhbWOfRPSwBoUhM', null);
        })();
        (function() {
            function controller($scope, TH$Dialog, TH$Service, $window, $rootScope) {

    var body = $(".body"),
        announcement = $(".announcementBar"),
        marginRight = body.css("marginRight"),
        marginLeft = body.css("marginLeft");

    $scope.goToRegistration = function() {
        TH$Dialog.open({
            loadWidget: 'users.registration',
            size: 'modalFormExtended',
            showClose: true,
            data: {
                fromDownload: true,
                redirectUrl: $scope.announcement.link
            }
        });
    };

    $scope.track = function(id) {
        var data = {
            siteNotification: id
        };
        if ($rootScope.user.authenticated) {
            TH$Service.exec('dzoneUsers.trackAnnouncementBar', data).then(function() {
            });
            $window.location.href = $scope.announcement.link;
        } else {
            $scope.goToRegistration();
        }
    };

    $(window).resize(function() {
        marginRight = body.css("marginRight");
        marginLeft = body.css("marginLeft");
        $scope.setBarWidth()
    });

    if (!(announcement.next().is(".layout-card"))) {
        announcement.css("margin-bottom", "10px");
    }

    $scope.toShow = ($scope.announcement && $scope.announcement.anononly) ? !($rootScope.user.authenticated) : true;

    $scope.setBarWidth = function() {
        var container = $("#acontainer");
        container.css("margin-right", "-" + marginRight);
        container.css("margin-left", "-" + marginLeft);
    }
}

TH.directive('backImg', function() {
    return function(scope, element, attrs) {
        if (attrs.hasimage == "true") {
            var img = new Image();
            img.onload = a(attrs.img, element, scope);
            img.onerror = a(attrs.imgbackup, element, scope);
            img.src = attrs.img;
        }
        scope.setBarWidth();
    };
});

var a = function(url, element) {
    element.css({
        'background-image': 'url(' + url + ')',
        'background-size': 'cover'
    });
};
            var WMODEL_DATA = {};
            WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.announcement = {"id":4162299,"body":"What do you think the future of databases looks like?","link":"https://www.surveygizmo.com/s3/5423607/DZone-2020-Cloud-Database-Survey","title":"Take the Survey","img2":"/notificationImage.html?id=4162299","img":"https://dz2cdn1.dzone.com/notificationImage.html?id=4162299","hasImage":false,"anononly":false};
        TH.installWidgetController('announcementBar', 'announcementBar1', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbYlrRaqMaoUhM', null);
        })();
        (function() {
            function controller($scope, $sce, $analytics, $service, SideBarService, TH$Dialog,$rootScope, TH$Location, $q, $window,
                    DZtopicsString, shareThis, $location, TH$Service, DZHeadService, $timeout, ArticleAdsService) {

    var current = ($scope.articles && $scope.articles.length) ? $scope.articles[0] : null;
    var loading = null;
    var lastLoaded = current;
    var cache = {};


    $scope.width = $(window).width();
    $scope.voted = null;
    $scope.articleJson = {};
    $scope.serp = {
        'title': '',
        'url': '',
        'description': ''
    };

    $scope.canDelete = function(article) {
        return article.canDelete;
    };

    $scope.canEdit = function(article) {
        return article.canEdit;
    };

    $scope.canPublish = function (article) {
        return article.canPublish;
    };

    $scope.loginForm = function () {

        TH$Dialog.open({
            loadWidget: 'users.loginForm',
            size: 'modalForm',
            showClose: true,
            data: {
                fromDownload: true
            }
        });
    };

    $scope.delete= function(article) {
        TH$Dialog.confirm("Are you sure you want to permanently delete this article?").then(function() {
            TH$Service.action('delete', {type: 'node', id: article.id}).then(function() {
                TH$Dialog.success('Article deleted');
                newArticle(article.type);
            });
        });
    };

    $scope.publish = function(article) {
        TH$Dialog.confirm("Are you sure you want to publish this article?").then(function () {
            TH$Service.action('nodes.publish', {type: 'node', id: article.id}, {}, true)
                .then(function () {
                    TH$Dialog.success('Article Published', 'Your article was successfully published');
                    article.published = true;
                }, function () {
                    TH$Dialog.error('Article not Published', 'There was an error publishing teh article');
                });
        });
    };

    $scope.shareTwitter = function($event, title, url){
        $event.preventDefault();
        $event.stopPropagation();
        var twitter = 'https://twitter.com/intent/tweet';
        var link = $location.protocol() + '://' + location.host + url;
        var ref = location.host;
        var params = '?text=' + encodeURIComponent(title) + '&url=' + link + '&ref=dzone.com&via=DZoneInc';
        var win = window.open(twitter + params, '_blank');
        win.focus();
    };

    function newArticle(type) {
        current.article = {
            body: '',
            title: '',
            image: null,
            topics: [],
            sources: [],
            notes: '',
            published: false,
            canDelete: false
        };

        current.bodyImages = [];
        setEditUrl(null, type);
    };

    function setEditUrl(id, type) {
        TH$Location.apply(function ($location) {

            var url;

            if (id) {
                if (type == 'article') {
                    url = '/content/' + id + '/edit.html';
                } else {
                    url = '/dzone/staff/' + type + (type == 'refcard' ? 'z' : 's') + '/' + id + '/edit.html';
                }
            } else {
                if (type == 'article') {
                    url = '/content/article/post.html';
                } else if (type == 'refcard'){
                    url = '/dzone/staff/' + type + 'z' + '/add.html';
                }else{
                    url = '/content/article/post.html'
                }
            }
            $timeout(function(){
                $location.path(url);
            },1000);
        });
    };

    function setCurrentInSidebar(article) {
        var title = (article.header) ? article.header.title : article.title;
        var titleEll = (article.header) ? article.header.titleEll : article.title;
        SideBarService.active = article.title ? article : {
            id: article.id,
            type: 'article',
            title:  $scope.edition ? titleEll : title,
            url: article.url,
            imageUrl: article.articleImage
        }
    }

    if (current) {
        loadPartner(current);
        loadRichSnippetData(current);
        setCurrentInSidebar(current);
        setMeta(current);
        current.fullHtml = $sce.trustAsHtml(current.articleContent);
    }

    function setMeta(current){
        var portal = (current.portal) ? current.portal.name : '';
        var keywords = (current.articleTags) ? current.articleTags.toString() : portal;
        var title = current.header ? current.header.title : current.title;

        if(!title){
            return;
        }
        DZHeadService.title = title+' - DZone '+portal;
        DZHeadService.description = current.metaDescription;
        DZHeadService.keywords = keywords;
        DZHeadService.url = $location.absUrl();
        DZHeadService.canonical = $location.protocol() + '://' + $location.host() + current.url;
        var imageLink = current.header ? current.header.imageLink : current.imageLink;
        DZHeadService.img = imageLink;
        DZHeadService.type = current.articleType;
        DZHeadService.wordCount = current.wordCount;

        var maxTitleLength = 70;
        var localTitle = title;
        if (localTitle.length > maxTitleLength) {
            localTitle = localTitle.substring(0, maxTitleLength);
        }

        var maxDescriptionLength = 150;
        var description = current.metaDescription;
        if (description.length > maxDescriptionLength) {
            description = description.substring(0, maxDescriptionLength) + ' ...';
        }

        $scope.serp.title = localTitle + ' - DZone ' + portal;
        $scope.serp.url = DZHeadService.canonical;
        $scope.serp.description = description;
    }

    function getArticle(id) {

        if (cache[id]) {
            return $q.when(cache[id]);
        } else {
            var promise =  $service({article: id});

            promise.then(function(article) {
                article.fullHtml = $sce.trustAsHtml(article.articleContent);
            });

            return promise;
        }
    }

    function loadArticleInList(id) {
        loading = id;

        if (cache[id]) {
            $scope.articles.push(cache[id]);
            lastLoaded = cache[id];
            loading = null;
        } else {
            $scope.articles.push({type: 'loader'});

            getArticle(id)
                .then(function(article) {
                    $scope.articles.pop();
                    $scope.articles.push(article);
                    lastLoaded = article;
                    loading = null;
                    cache[article.id] = article;

                    loadPartner(article);
                    loadRichSnippetData(current);
                });
        }
    }

    function loadRichSnippetData(article) {

        var rs = {
            bodyProp: 'articleBody',
            date: moment(article.articleDate).format(),
            articleType: 'https://schema.org/Article'
        };

        article.rs = rs;
    }

    var articleNumber = 1;

    function attachPartner(article, partners) {

        article.showLogo = true;

        if (!_.isNumber(partners.lastUsed)) {
            toUse = partners.lastUsed
        }else{
            toUse = partners.lastUsed + 1;
        }

        if (toUse >= partners.length || !toUse) {
            toUse = 0;
        }

        if(partners){
            article.showLogo = (partners.length < 2 && articleNumber % 2) ? false : article.showLogo;
        }else{
            article.showLogo = false;
        }

        if(!articleNumber || article.partner){
            return;
        }

        article.readyForAd = true;
        article.partner = partners[toUse];
        $scope.partners.lastUsed = toUse;
        articleNumber++;
    }


    function loadPartner(article) {

        var partners = $scope.partners;

        if (!article.portalId) {
            if ($scope.portal) {
                article.portal = _.findWhere($scope.portals, {id: $scope.portal.id});
            } else {
            }
        } else {
            article.portal = _.findWhere($scope.portals, {id: article.portalId});
        }
        if (article.portal) {
            if (partners[article.portal.id]) {
                var _partners = partners[article.portal.id];
                _partners.lastUsed = $scope.partners.lastUsed;
                attachPartner(article, _partners);
            } else {
                $service.partners({portal: article.portal.id}).then(function(_partners) {
                    partners[article.portal.id] = _partners;
                    attachPartner(article, _partners);
                });
            }
        }

        if (article.readyForAd || article.partner) {
            article.readyForAd = true;
            return;
        }

    }

    $scope.loadMore = function() {

        if (loading) {
            return;
        }

        var next = SideBarService.findNext(lastLoaded ? lastLoaded.id : null);

        if (next) {
            loadArticleInList(next);

            // Fetch json data for creating the JSON-LD script in DOM
            TH$Service.data('articles.getArticleJsonData', {articleId: next}).then(function(result) {
                $scope.articleJson[next] = result;
            }).catch(function(error) {
                console.error(error);
            });
        }
    };

    // Watch the articleJson dictionary for any new JSON data being inserted
    // When new values are added, put a watch on the next article's div
    // used for adding the JSON-LD script to. Once the DOM has been rendered
    // containing this div, create the JSON-LD script and attach it to this container.
    $scope.$watch('articleJson', function(newValue) {
        var keys = Object.keys(newValue);
        if (keys.length) {
            var selector = '#article-' + keys[0];
            var articleId = parseInt(keys[0]);
            $scope.waitForElement(selector, function() {
                $scope.injectArticleJson(articleId)
            });
        }
    }, true);

    /**
     * Wait for the given element to be rendered in the DOM and then
     * run the given callback once the element is ready.
     *
     * @param selector - selector used to query the element
     * @param callback - callback run once the element has been rendered
     */
    $scope.waitForElement = function(selector, callback) {
        if ($(selector).length) {
            callback();
        } else {
            setTimeout(function() {
                $scope.waitForElement(selector, callback);
            }, 100);
        }
    };

    /**
     * Builds the JSON-LD script for the given article and injects
     * it into the appropriate place in the DOM.
     *
     * @param article - id of the article
     */
    $scope.injectArticleJson = function(article) {
        var json = $scope.articleJson[article];
        var script = document.createElement('script');
        script.type = 'application/ld+json';
        script.text = json;
        var jsonDivId = '#article-' + article;
        var jsonDiv = angular.element(jsonDivId);
        if (jsonDiv.length) {
            jsonDiv.append(script);
            // Remove the key/value pair from the dictionary now
            // that is has been dealt with
            delete $scope.articleJson[article];
        }
    };

    $scope.activate = function(article) {

        if(article.type == 'loader'){
            return;
        }

        $rootScope.model.portal = article.portal;
        $scope.addShareCount(article);

        if (current && article.id == current.id) {
            return;
        }

        current = article;
        setCurrentInSidebar(article);

        TH$Location.apply(function($location) {
            $location.path(article.url);
        });

        var title = article.header ? article.header.title : article.title;

        setMeta(article);
        $timeout(function(){
            if (!article.viewTracked) {
                TH$Service.action('nodes.trackView', {type: 'node', id: article.id}, {}, true);
                article.views++;
                article.viewTracked = true;
                if (window.ga) {
                    window.ga('set', 'dimension2', article.articleType ? ('article/' + article.articleType) : 'article');
                    window.ga('set', 'dimension3', moment(article.articleDate).format('YYYY-MM-DD'));
                    window.ga('set', 'dimension4', _.indexOf($scope.articles, article));
                    window.ga('set', 'dimension5', article.zonetop || 'undefined');
                    window.ga('set', 'dimension6', article.pubPlug || 'undefined');
                    window.ga('set', 'dimension7', article.articleTags || 'undefined');
                    var lastAuthor = article.authors[article.authors.length - 1].name;
                    var lastAuthorCompany = article.authors[article.authors.length - 1].company;
                    window.ga('set', 'dimension8', lastAuthor || 'undefined');
                    window.ga('set', 'dimension9', article.partner ? article.partner.details.name : 'undefined');
                    window.ga('set', 'dimension10', lastAuthorCompany || 'undefined');
                    window.ga('set', 'dimension11', article.authors[0].claimed || 'undefined');
                }
                $analytics.pageTrack(article.url);
            }
        },0);
    };

    $scope.toggleComments = function(article) {
        if(!article.isLocked) {
            TH$Service.action('articles.lockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = true;
                    TH$Dialog.success('You have disabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }else {
            TH$Service.action('articles.unlockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = false;
                    TH$Dialog.success('You have enabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }
    };

    $scope.toggleLimitComments = function (article) {
        if (!article.isLimited) {
            TH$Service.action('articles.limitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = true;
                    TH$Dialog.success('You have limited comments for this Article. Now all comments will go through moderation.');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        } else {
            TH$Service.action('articles.unlimitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = false;
                    TH$Dialog.success('You removed the limits for comments on this Article');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        }
    };

    $scope.activateT = function(article) {
        $scope.activate(article);
    };

    $scope.activateB = function(article) {
        $scope.activate(article);
    };

    SideBarService.fn.onSelected = function(node) {
        $scope.articles = [];

        loadArticleInList(node.id);

        $scope.activate(node);
        $($window).scrollTop(0);
    };

    $scope.upvoteArticle = function () {
    };

    $scope.addShareCount = function(article){
    };

    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, $location.protocol()+'://'+$location.host()+':'+$location.port()+url, title);
    };

    Object.size = function(obj) {
        var size = 0, key;
        for (key in obj) {
            if (obj.hasOwnProperty(key)) size++;
        }
        return size;
    };


    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, $location.protocol()+'://'+$location.host()+':'+$location.port()+url, title);
    };

    $scope.mailShareLink = function(article) {
        var title = article.header ? article.header.title : article.title;
        var link = article.header ? article.header.link : article.link;
        return 'mailto:?subject=' + encodeURIComponent(title) +  '&body=Article: ' + encodeURIComponent('https://dzone.com/' + link);
    };

    $scope.ads = ArticleAdsService($scope.edition, $scope.width);

    var partnerResourceIndex = 0;

    $scope.calculatePartnerResourceIndex = function() {
      partnerResourceIndex++;

      return partnerResourceIndex;
    }
}
            var WMODEL_DATA = {};
            WMODEL_DATA.authenticated = false;
        WMODEL_DATA.firstArticleContent = null;
        WMODEL_DATA.daysOldBody = "Technology moves quickly and this #type was published #time.  Some or all of its contents may be outdated.";
        WMODEL_DATA.isPreview = false;
        WMODEL_DATA.partners = {"lastUsed":2,"1":[{"top":{"id":302528,"text":"<p><strong>Java-based (JDBC) data connectivity to SaaS, NoSQL, and Big Data. <a href=\"https://www.cdata.com/jdbc/?utm_source=dzone&amp;utm_medium=jdbc-roll\" rel=\"nofollow\" target=\"_blank\">Download Now.</a></strong></p>"},"bottom":{"id":302529,"text":"<p><strong><a href=\"https://www.cdata.com/jdbc/?utm_source=dzone&amp;utm_medium=jdbc-roll\" rel=\"nofollow\" target=\"_blank\">Connect any Java based application to your SaaS data</a>.&nbsp; Over 100+ Java-based data source connectors.</strong></p>"},"campaign":198953,"details":{"code":"cdata","level":2,"partnerUrl":"http://www.cdata.com","name":"Cdata","logo":"//dz2cdn1.dzone.com/storage/partner-logo/10135556-screen-shot-2018-09-01-at-75421-am.png","leveldesc":"Platinum","id":111712}},{"top":{"id":335533,"text":"<p><strong>Secure your Java app or API service quickly and easily with Okta's user authentication and authorization libraries. Developer accounts are free forever.&nbsp;<a href=\"https://developer.okta.com/signup/?utm_campaign=text_website_all_multiple_dev_ciam_pre-roll-no-developer-ever_&amp;utm_source=dzone&amp;utm_medium=cpc\" rel=\"nofollow\" target=\"_blank\">Try Okta Instead.</a></strong></p>"},"bottom":{"id":335534,"text":"<p><strong style=\"box-sizing: border-box; font-weight: 500; font-style: normal; color: rgb(68, 68, 68); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, sans-serif; font-size: 14px; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial;\">Secure your Java app or API service quickly and easily with Okta's user authentication and authorization libraries. Developer accounts are free forever.&nbsp;<a href=\"https://developer.okta.com/signup/?utm_campaign=text_website_all_multiple_dev_ciam_pre-roll-no-developer-ever_&amp;utm_source=dzone&amp;utm_medium=cpc\" rel=\"nofollow\" target=\"_blank\">Try Okta Instead.</a></strong></p>"},"campaign":233913,"details":{"code":"okta","level":2,"partnerUrl":"https://www.okta.com","name":"Okta","logo":"//dz2cdn4.dzone.com/storage/partner-logo/6142487-5746593-502258-okta-identity-management-logo.jpg","leveldesc":"Platinum","id":99712}},{"top":{"id":363527,"text":"<p>Modern Java EE Design Patterns: Building Scalable Architecture for Sustainable Enterprise Development. <a href=\"https://developers.redhat.com/books/modern-java-ee-design-patterns-building-scalable-architecture-sustainable-enterprise/?sc_cid=701f20000012gb1AAA\" target=\"_blank\" rel=\"nofollow\">Download Now.</a></p>"},"bottom":{"id":363528,"text":"<p>Microservices for Java Developers:&nbsp;<a href=\"https://developers.redhat.com/books/microservices-java-developers-hands-introduction-frameworks-and-containers/?sc_cid=701f20000012gb1AAA\" target=\"_blank\" rel=\"nofollow\">A hands-on introduction to frameworks and containers.</a></p>"},"campaign":256916,"details":{"code":"rhdp","level":2,"partnerUrl":"https://developers.redhat.com/","name":"Red Hat Developer Program","logo":"//dz2cdn2.dzone.com/storage/partner-logo/10110885-download.png","leveldesc":"Platinum","id":111}}]};
        WMODEL_DATA.edition = null;
        WMODEL_DATA.perms = {"canDecidePick":false,"canPublish":false};
        WMODEL_DATA.OPTIONS = {};
        WMODEL_DATA.daysOldTitle = "Heads up...this #type is old!";
        WMODEL_DATA.articles = [{"pubPlug":"dzone-mikeg","modDate":1518328863000,"articleImage":"//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","rawType":"article","canEdit":false,"viewTracked":true,"source":"https://springframework.guru/using-jaxb-for-xml-with-java/","accessMode":["textual","visual"],"metaDescription":"This lesson in JAXB considers how to configure it and use it for marshalling and unmarshalling objects to and from XML in your Java projects.","articleType":"tutorial","draft":false,"portalId":1,"isLocked":false,"relatedRefcard":[{"img":12672764,"id":2898906,"title":"Getting Started With Headless CMS","url":"/refcardz/getting-started-with-headless-cms"}],"readyForAd":true,"canPublish":false,"articleContent":"","articleTypePre":"https://schema.org/Article","canDelete":false,"likeStatus":{"score":13,"canLike":false,"liked":false},"id":2042990,"nComments":0,"views":204794,"bodyProp":"articleBody","originalSource":"https://springframework.guru/using-jaxb-for-xml-with-java/","isOld":false,"isLimited":false,"image":"//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","wordCount":2257,"articleTags":["java","marshalling and unmarshalling","jaxb","tutorial"],"canonical":"https://dzone.com/articles/using-jaxb-for-xml-with-java","published":true,"url":"/articles/using-jaxb-for-xml-with-java","tldr":"Let's dive into JAXB and how to use it to help for marshalling and unmarshalling objects to and from XML in Java.","saveStatus":{"saved":false,"count":29,"canSave":false},"deleted":false,"pdf":null,"partner":{"top":{"id":363527,"text":"<p>Modern Java EE Design Patterns: Building Scalable Architecture for Sustainable Enterprise Development. <a href=\"https://developers.redhat.com/books/modern-java-ee-design-patterns-building-scalable-architecture-sustainable-enterprise/?sc_cid=701f20000012gb1AAA\" target=\"_blank\" rel=\"nofollow\">Download Now.</a></p>"},"bottom":{"id":363528,"text":"<p>Microservices for Java Developers:&nbsp;<a href=\"https://developers.redhat.com/books/microservices-java-developers-hands-introduction-frameworks-and-containers/?sc_cid=701f20000012gb1AAA\" target=\"_blank\" rel=\"nofollow\">A hands-on introduction to frameworks and containers.</a></p>"},"campaign":256916,"details":{"code":"rhdp","level":2,"partnerUrl":"https://developers.redhat.com/","name":"Red Hat Developer Program","logo":"//dz2cdn2.dzone.com/storage/partner-logo/10110885-download.png","leveldesc":"Platinum","id":111}},"relatedArticles":[{"img":5045775,"id":1512354,"title":"3 Steps to Writing and Reading XML Files","url":"/articles/writing-and-reading-xml-file"},{"img":3837752,"id":1426603,"title":"Marshalling and Unmarshalling in JAXB 2.0","url":"/articles/introduction-to-jaxb-20"},{"img":11165149,"id":2691457,"title":"XML Marshalling and Unmarshalling Using Spring and JAXB Framework","url":"/articles/xml-marshalling-and-unmarshalling-using-spring-and"},{"img":12448710,"id":2866620,"title":"Marshalling and Unmarshalling: Converting Java Objects to XML and Back [Video Tutorial]","url":"/articles/how-to-convert-an-object-into-xml-and-xml-into-an"}],"zonetop":"dzone-mikeg","publisher":{"name":"DZone","logo":"https://dzone.com/themes/dz20/images/logo.png"},"header":{"imageLink":"//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","titleEll":"Using JAXB for XML With Java","imageUrl":"//dz2cdn1.dzone.com/storage/article-thumb/8124584-thumb.jpg","link":"/articles/using-jaxb-for-xml-with-java","id":2042990,"title":"Using JAXB for XML With Java","type":"article"},"articleDate":"2018-02-11","shortDesc":"<p pid=\"1\"><a href=\"https://github.com/javaee/jaxb-v2\" rel=\"noopener\" target=\"_blank\">Java Architecture for XML Binding (JAXB)</a> is a library that helps bind XML schemas and Java representations. JAXB provides you with a mechanism to marshal Java objects into XML and the other way around – unmarshal XML into Java objects.</p>\n<p pid=\"2\">XML is an industry standard for defining the contents of your message. XML, along with Java, are complementary technologies to exchange data across the Internet. When you work with XML, you need a way to take an XML file, then convert it into some sort of data structure, which your program can manipulate. You also need to serialize the state of your Java objects into XML. JAXB is one library that performs such marshalling and unmarshalling operations.</p>\n<p pid=\"3\">In this post, I will discuss on how to marshal Java objects into XML and the other way around using JAXB.</p>\n<h2>Using JAXB to Marshal Java Objects to XML</h2>\n<p pid=\"5\">Let us consider a scenario where we need to model a product for an e-commerce store. Apart from fields, such as product Id, description, image URL, and price, a <span class=\"crayon-syntax crayon-syntax-inline ...","plug":"using-jaxb-for-xml-with-java","authors":[{"isStaff":false,"aboutAuthor":"@serge_a_storms ","claimed":"Michael_Tharrington","partnerOf":[],"avatar":56856,"url":"/users/2520536/john-1.html","realName":"John Thompson","isMVB":true,"name":"john@galenetechnologies.com","tagline":"Become a Spring Framework Guru!","company":"Spring Framework Guru","id":2520536,"isClaimed":true}]}];
        TH.installWidgetController('article.content', 'articleContent4', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'partners', data: true},{name: 'DEFAULT', data: true}], ' oUhbblYOaqbcblYOaqbcC', null);
        })();
        (function() {
            function controller($scope, $service, $location, SideBarService, $timeout) {

    if ($scope.edition) {
        $scope.date = moment($scope.editionDate).utc().format('MMM DD, YYYY');
    }

    SideBarService.ctx.pageSize = $scope.pageSize;
    SideBarService.ctx.isPreview = $scope.isPreview;
    SideBarService.ctx.mode = $scope.mode;

    SideBarService.fn.loader = $service;

    var $window = $(window);

    function checkWidth() {
        var windowsize = $window.width();
        $scope.width = windowsize;
    }
    // Execute on load
    checkWidth()
    // Bind event listener
    $(window).resize(checkWidth);


    if ($scope.edition) {
        SideBarService.ctx.edition = $scope.edition;
    }

    SideBarService.fn.scrollCheck = function() {
        $scope.$emit('thIfScrollCheck');
    };

    var currentFilter;

    $scope.$on('$locationChangeSuccess', function() {

        if (!$location.search().filter) {
            $scope.filter = 'latest';
        } else {
            $scope.filter = $location.search().filter;

            if ($scope.filter == 'latest') {
                $location.search('filter', null);
            }
        }

        if (currentFilter == $scope.filter) {
            return;
        }

        currentFilter = $scope.filter;

        SideBarService.ctx.filter = $scope.filter;
    });

    $scope.display = SideBarService.getList();

    $scope.$watchCollection(function() {
        return SideBarService.getList();
    }, function (n) {
        $scope.display = n;
    });

    $scope.isActive = SideBarService.isActive;

    $scope.isExcluded = SideBarService.isExcluded;

    $scope.loadMore = SideBarService.load;

    $scope.loading = function() {
        return SideBarService.ctx.loading;
    };

    TH.on('TapBarStatusChange', function(expanded) {
        if (expanded) {
            SideBarService.unblock();
        }
    })

}
            var WMODEL_DATA = {};
            WMODEL_DATA.mode = null;
        WMODEL_DATA.isPreview = false;
        WMODEL_DATA.editionName = "";
        WMODEL_DATA.editionDate = null;
        WMODEL_DATA.pageSize = 20;
        WMODEL_DATA.edition = null;
        WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('sidebar.content.list', 'sidebarContentList7', WMODEL_DATA, typeof controller == 'function' ? controller : null, [{name: 'DEFAULT', data: true}], ' oUhbkSMaaqbcdvVkcC', null);
        })();
        (function() {
            function controller($scope) {
    var $window = $(window);

    function checkWidth() {
        var windowsize = $window.width();
        var $element = $('div.sidebar.sidebarTapBar');
        $scope.width = windowsize;
        if(windowsize <= 1024 && $scope.edition){
            $('.fixContentRight').removeClass('fixContentRight');
            $('.tap').show();
        }else if($scope.edition){
            $('.tap').hide();
            $('.mainContentRow').addClass('fixContentRight');
            $element.removeClass('tapNotExpanded');
            $element.addClass('expanded');
        }
    }
    // Execute on load
    checkWidth();
    // Bind event listener
    $(window).resize(checkWidth);
}
            var WMODEL_DATA = {};
            WMODEL_DATA.edition = null;
        WMODEL_DATA.slot = null;
        WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('sidebar.tapBar', 'sidebar', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbkSMadabfWVcC oUhbkSMadabbWQbVkcC', null);
        })();
        (function() {
            function controller($scope,  shareThis, TH$Dialog, TH$Service, $location) {
    $scope.getEditUrl = function(id, type) {
        if (!type || type == 'article') {
            return '/content/' + id + '/edit.html';
        } else {
            return '/dzone/staff/' + type + (type == 'refcard' ? 'z' : 's') + '/' + id + '/edit.html';
        }
    };

    $scope.share = function(socialNet, url, title){
        shareThis.shareThis(socialNet, url, title);
    };

    $scope.canDelete = function(article) {
        return article.canDelete;
    };

    $scope.canPublish = function(article) {
        return article.canPublish;
    };

    $scope.canEdit = function(article) {
        return article.canEdit;
    };

    $scope.toggleComments = function(article) {
        if(!article.isLocked) {
            TH$Service.action('articles.lockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = true;
                    TH$Dialog.success('You have disabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }else {
            TH$Service.action('articles.unlockNode', {type: 'node', id: article.id}).then(function(result) {
                if(result){
                    article.isLocked = false;
                    TH$Dialog.success('You have enabled all comments for this Article');
                }else{
                    TH$Dialog.error('error','Your requested was denied')
                }
            });
        }
    };

    $scope.toggleLimitComments = function (article) {
        if (!article.isLimited) {
            TH$Service.action('articles.limitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = true;
                    TH$Dialog.success('You have limited comments for this Article. Now all comments will go through moderation.');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        } else {
            TH$Service.action('articles.unlimitNode', {type: 'node', id: article.id}).then(function (result) {
                if (result) {
                    article.isLimited = false;
                    TH$Dialog.success('You removed the limits for comments on this Article');
                } else {
                    TH$Dialog.error('error', 'Your requested was denied')
                }
            });
        }
    };

    $scope.shareTwitter = function($event, title, url){

        $event.preventDefault();
        $event.stopPropagation();
        var twitter = 'https://twitter.com/intent/tweet';
        var link = $location.protocol() + '://' + location.host + url;
        var ref = location.host;
        var params = '?text=' + encodeURIComponent(title) + '&url=' + link + '&ref=dzone.com&via=DZoneInc';
        var win = window.open(twitter + params, '_blank');
        win.focus();
    };

    $scope.edit = function(link) {
        TH$Dialog.open({
            loadWidget: 'links.postPreview',
            widgetArgs: {
                edit: link.id
            },
            size: 'xbig'
        }).then(function (result) {
            $scope.link.title = result.title;
            $scope.link.linkDescription = result.content;
            $scope.link.thumb = result.thumb;
            $scope.link.tags = result.topics;
        });
    };

    $scope.deleteLink = function(article) {
        var title = article.title;
        var type = 'link';
        if(article.header){
            title = (article.header.type == 'article') ? article.header.title : article.title;
            type = (article.header.type == 'article') ? 'article' : 'link';
        }
        TH$Dialog.confirm('Do you want to delete "' + title + '"?').then(function() {
            return TH$Service.action('delete', {type: type, id: article.id});
        }).then(function() {
            article.deleted = true;
        });
    };
}


            var WMODEL_DATA = {};
            WMODEL_DATA.OPTIONS = {};
        TH.installWidgetController('content.commentsSlider', 'contentCommentsSlider6', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhbaqbcaibvnWffWVcC', null);
        })();
        (function() {
            
            var WMODEL_DATA = {};
            WMODEL_DATA.name = "commentsSlider";
        WMODEL_DATA.slot = null;
        WMODEL_DATA.OPTIONS = {"name":"commentsSlider"};
        TH.installWidgetController('components.slider', 'componentsSlider5', WMODEL_DATA, typeof controller == 'function' ? controller : null, null, ' oUhballbvbdSaoUhM', null);
        })();
        </script>
    <script type="text/javascript">

        TH.installWidgetDirective('users.profile.mini', 'usersProfileMini', {"service":{"user":"="},"extra":null}, 'widget.html', '/widgets/users/profile/mini/widget.js', [{name: 'DEFAULT', data: true}], ' oUhbwfbqddOeffWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('header.sections', 'headerSections', {"service":null,"extra":null}, 'widget.html', '/widgets/header/sections/widget.js', null, ' oUhbWOfbRllbgfgpM', null, ['sections.less']);
        
        TH.installWidgetDirective('users.registration', 'usersRegistration', {"service":null,"extra":null}, 'widget.html', '/widgets/users/registration/widget.js', [{name: 'validateMail', data: false},{name: 'validateUsername', data: false}], ' oUhbwfbfZvbllfWVcC', ['/scripts/utilities/tools.js'], ['widget.less']);
        
        TH.installWidgetDirective('errors.recaptcha', 'errorsRecaptcha', {"service":null,"extra":null}, 'widget.html', '/widgets/errors/recaptcha/widget.js', null, ' oUhbfptaR_fSfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('links.sources.mini', 'linksSourcesMini', {"service":{"link":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbdhbqvRbefWfSC', null, ['mini.less']);
        
        TH.installWidgetDirective('assets.mini', 'assetsMini', {"service":{"asset":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbcgvWfSoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('links.postPreview', 'linksPostPreview', {"service":{"url":"=","edit":"="},"extra":null}, 'widget.html', '/widgets/links/postPreview/widget.js', [{name: 'topics', data: true},{name: 'DEFAULT', data: true}], ' oUhbdhbnvqjXfoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('manage.revisions', 'manageRevisions', {"service":{"node":"=","body":"=","masterTemplate":"=","format":"=","mode":"="},"extra":null}, 'widget.html', '/widgets/manage/revisions/widget.js', [{name: 'DEFAULT', data: true},{name: 'revision', data: true}], ' oUhbXYVajkgpfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('leads.addCRM', 'leadsAddCRM', {"service":null,"extra":null}, 'widget.html', '/widgets/leads/addCRM/widget.js', [{name: 'DEFAULT', data: true}], ' oUhb_ObOQnKRMnM oUhbcgvKRcgcONfPC', ['/scripts/utilities/tools.js'], ['add-crm.less','add-ref.less']);
        
        TH.installWidgetDirective('links.postV2', 'linksPostV2', {"service":null,"extra":null}, 'widget.html', '/widgets/links/postV2/widget.js', null, ' oUhbdhbnvXZqyBC', null, ['postV2.less']);
        
        TH.installWidgetDirective('users.questionForm', 'usersQuestionForm', {"service":null,"extra":null}, 'widget.html', '/widgets/users/questionForm/widget.js', null, ' oUhbwfbuglldnfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('loading', 'loading', {"service":null,"extra":null}, 'widget.html', '/widgets/loading/widget.js', null, ' oUhbjOfQoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('refcardz.mini', 'refcardzMini', {"service":{"asset":"="},"extra":null}, 'widget.html', '', [{name: 'DEFAULT', data: true}], ' oUhbfSbmWfSoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('links.listV2', 'linksListV2', {"service":null,"extra":null}, 'widget.ftl', '/widgets/links/listV2/widget.js', [{name: 'linkData', data: true},{name: 'parseLink', data: true},{name: 'list', data: true}], ' oUhbdhbdvXVkyBC', ['directives.js','filters.js'], ['listV2.less']);
        
        TH.installWidgetDirective('users.uiPrefs', 'usersUiPrefs', {"service":null,"extra":null}, 'widget.html', '/widgets/users/uiPrefs/widget.js', null, '', null, null);
        
        TH.installWidgetDirective('users.loginForm', 'usersLoginForm', {"service":null,"extra":null}, 'widget.html', '/widgets/users/loginForm/widget.js', null, ' oUhbwfbjZcpWoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('users.noMembership', 'usersNoMembership', {"service":null,"extra":null}, 'widget.html', '/widgets/users/noMembership/widget.js', null, ' oUhbwfblaYfjhfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('errors.general', 'errorsGeneral', {"service":null,"extra":null}, 'widget.html', '/widgets/errors/general/widget.js', null, ' oUhbfptQbfWfWVcC', null, ['widget.less']);
        
        TH.installWidgetDirective('manage.customNotifications.preview', 'manageCustomNotificationsPreview', {"service":null,"extra":null}, 'widget.html', '/widgets/manage/customNotifications/preview/widget.js', null, ' oUhbXYVMwrjrYVdgpZfnkZfnkM dLgZWBLPpWkKeXB', null, ['preview.less','/lib/froala-2/css/froala_style.min.css']);
        
        TH.installWidgetDirective('header.zonesDropdown', 'headerZonesDropdown', {"service":{"portal":"="},"extra":{"hover":"="}}, 'widget.html', '/widgets/header/zonesDropdown/widget.js', [{name: 'DEFAULT', data: true}], '', null, null);
        
        TH.installWidgetDirective('manage.customNotifications.test', 'manageCustomNotificationsTest', {"service":{"customNotification":"="},"extra":null}, 'widget.html', '/widgets/manage/customNotifications/test/widget.js', [{name: 'searchGroups', data: true},{name: 'DEFAULT', data: true},{name: 'searchUsers', data: true}], ' oUhbXYVMwrjrYVdgpcgcoUhM', null, ['widget.less']);
        
        TH.installWidgetDirective('content.commentBox', 'contentCommentBox', {"service":{"parent":"="},"extra":{"count":"=","limited":"="}}, 'widget.html', '/widgets/content/commentBox/widget.js', [{name: 'post', data: false},{name: 'edit', data: false},{name: 'DEFAULT', data: true}], ' oUhbaqbcaibevMkaqbC', null, ['comments.less']);
        
        TH.installWidgetDirective('article.listV2', 'articleListV2', {"service":null,"extra":null}, 'widget.html', '/widgets/article/listV2/widget.js', [{name: 'list', data: true},{name: 'sortCount', data: true}], ' oUhbblYOdvXKuV_VkcC', ['directives.js'], ['article-list.less']);
            </script>
<iframe src="./Using JAXB for XML With Java - DZone Java_files/1389.html" style="position:absolute;left:-10px;width:1px;height:1px;"></iframe><script type="text/javascript" id="">jQuery.ajax({url:"https:\/\/dzone.com\/articles\/using-jaxb-for-xml-with-java",data:{},error:function(a,b){dataLayer.push({event:"httperror",statuscode:a.status})}});</script>
<script type="text/javascript" id="">(function(b,a,c){var e=decodeURIComponent;var d="||";var g=";;",f="split",h="length",m="indexOf",k="localStorage",l="_ccmdt";b[c]=b[c]||{};b[c].us={};a=b[k]?b[k][l]||"":(a=a.cookie.match(l+"\x3d([^;]*)"))&&a[1]||"";e=e(a)[f](d);a=e[h];if(0<a)for(;a--;)d=e[a][f]("\x3d"),1<d[h]&&(-1<d[1][m](g)?(b[c].us[d[0]]=d[1][f](g),b[c].us[d[0]].pop()):b[c].us[d[0]]=d[1])})(window,document,"_ml");
(function(){_ml=window._ml||{};_ml.eid="65559";_ml.cid=google_tag_manager["GTM-K25QL22"].macro(4);_ml.fp=google_tag_manager["GTM-K25QL22"].macro(7);_ml.ef=["*email","*username"];_ml.informer={callback:function(a,b){"undefined"==typeof dataLayer||_ml.isEmptyObj(_ml.us)||dataLayer.push({event:"Bombora_Informer",Bombora_Topic:_ml.us.tp&&0<_ml.us.tp.length?_ml.us.tp[0]:"",Bombora_Industry:_ml.us.ind,Bombora_Company_Revenue:_ml.us.cr,Bombora_Company_Size:_ml.us.cs,Bombora_Domain:_ml.us.dm,Bombora_Seniority:_ml.us.sn,Bombora_Predictive_Category:_ml.us.pc&&
0<_ml.us.pc.length?_ml.us.pc[0]:"",Bombora_Decision_Maker:_ml.us.dcm,Bombora_Functional_Area:_ml.us.fa&&0<_ml.us.fa.length?_ml.us.fa[0]:"",Bombora_Install_Data:_ml.us.ins&&0<_ml.us.ins.length?_ml.us.ins[0]:"",Bombora_Professional_Group:_ml.us.pg&&0<_ml.us.pg.length?_ml.us.pg[0]:"",Bombora_Education:_ml.us.edu})},enable:!0};var b=document.getElementsByTagName("script")[0],a=new Date,c=document.createElement("script");c.type="text/javascript";c.async=!0;c.src="https://ml314.com/tag.aspx?"+a.getDate()+
a.getMonth()+a.getFullYear();b.parentNode.insertBefore(c,b)})();</script>
</body></html>