<!DOCTYPE html>
<!-- saved from url=(0061)https://www.pegaxchange.com/2018/01/28/websocket-server-java/ -->
<html lang="en-US"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<meta name="yandex-verification" content="c72251b33c31e7c3">

<title>Example of Creating a WebSocket Server in Java - Pega Exchange</title>
<link rel="profile" href="https://gmpg.org/xfn/11">
<link rel="pingback" href="https://www.pegaxchange.com/xmlrpc.php">
<!--[if lt IE 9]>
<script src="https://www.pegaxchange.com/wp-content/themes/duster/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel="stylesheet" href="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/prettify.css" type="text/css" media="all">

<meta name="description" content="This post shows how to implement a WebSocket server in Java using the @ServerEndpoint annotation and deploy it to Apache Tomcat 9. WebSocket is a technology for establishing a persistent, low-latency, full-duplex channel over a single http connection for real-time communication between a server and client.">
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1">
<link rel="canonical" href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Example of Creating a WebSocket Server in Java - Pega Exchange">
<meta property="og:description" content="This post shows how to implement a WebSocket server in Java using the @ServerEndpoint annotation and deploy it to Apache Tomcat 9. WebSocket is a technology for establishing a persistent, low-latency, full-duplex channel over a single http connection for real-time communication between a server and client.">
<meta property="og:url" content="https://www.pegaxchange.com/2018/01/28/websocket-server-java/">
<meta property="og:site_name" content="Pega Exchange">
<meta property="article:section" content="Java Development">
<meta property="article:published_time" content="2018-01-28T04:21:09+00:00">
<meta property="article:modified_time" content="2018-03-27T05:03:05+00:00">
<meta property="og:updated_time" content="2018-03-27T05:03:05+00:00">
<meta property="og:image" content="https://www.pegaxchange.com/wp-content/uploads/2018/01/3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png">
<meta property="og:image:secure_url" content="https://www.pegaxchange.com/wp-content/uploads/2018/01/3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:description" content="This post shows how to implement a WebSocket server in Java using the @ServerEndpoint annotation and deploy it to Apache Tomcat 9. WebSocket is a technology for establishing a persistent, low-latency, full-duplex channel over a single http connection for real-time communication between a server and client.">
<meta name="twitter:title" content="Example of Creating a WebSocket Server in Java - Pega Exchange">
<meta name="twitter:image" content="https://www.pegaxchange.com/wp-content/uploads/2018/01/3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png">
<script async="" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/analytics.js"></script><script type="application/ld+json" class="yoast-schema-graph yoast-schema-graph--main">{"@context":"https://schema.org","@graph":[{"@type":["Person","Organization"],"@id":"https://www.pegaxchange.com/#/schema/person/5592312f73deddf0e6ce8c728e029aa6","name":"Bruno","logo":{"@id":"https://www.pegaxchange.com/#personlogo"},"sameAs":[]},{"@type":"WebSite","@id":"https://www.pegaxchange.com/#website","url":"https://www.pegaxchange.com/","name":"Pega Exchange","description":"Pega 7 and Java EE Examples","publisher":{"@id":"https://www.pegaxchange.com/#/schema/person/5592312f73deddf0e6ce8c728e029aa6"},"potentialAction":{"@type":"SearchAction","target":"https://www.pegaxchange.com/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"ImageObject","@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#primaryimage","url":"https://www.pegaxchange.com/wp-content/uploads/2018/01/3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png","width":853,"height":889},{"@type":"WebPage","@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#webpage","url":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/","inLanguage":"en-US","name":"Example of Creating a WebSocket Server in Java - Pega Exchange","isPartOf":{"@id":"https://www.pegaxchange.com/#website"},"primaryImageOfPage":{"@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#primaryimage"},"datePublished":"2018-01-28T04:21:09+00:00","dateModified":"2018-03-27T05:03:05+00:00","description":"This post shows how to implement a WebSocket server in Java using the @ServerEndpoint annotation and deploy it to Apache Tomcat 9. WebSocket is a technology for establishing a persistent, low-latency, full-duplex channel over a single http connection for real-time communication between a server and client."},{"@type":"Article","@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#article","isPartOf":{"@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#webpage"},"author":{"@id":"https://www.pegaxchange.com/#/schema/person/5592312f73deddf0e6ce8c728e029aa6"},"headline":"Example of Creating a WebSocket Server in Java","datePublished":"2018-01-28T04:21:09+00:00","dateModified":"2018-03-27T05:03:05+00:00","commentCount":0,"mainEntityOfPage":{"@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#webpage"},"publisher":{"@id":"https://www.pegaxchange.com/#/schema/person/5592312f73deddf0e6ce8c728e029aa6"},"image":{"@id":"https://www.pegaxchange.com/2018/01/28/websocket-server-java/#primaryimage"},"articleSection":"Java Development"}]}</script>

<link rel="dns-prefetch" href="https://pagead2.googlesyndication.com/">
<link rel="dns-prefetch" href="https://s.w.org/">
<link rel="alternate" type="application/rss+xml" title="Pega Exchange » Feed" href="https://www.pegaxchange.com/feed/">
<link rel="alternate" type="application/rss+xml" title="Pega Exchange » Comments Feed" href="https://www.pegaxchange.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="Pega Exchange » Example of Creating a WebSocket Server in Java Comments Feed" href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/feed/">
<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/12.0.0-1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/12.0.0-1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.pegaxchange.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.3.2"}};
			!function(e,a,t){var r,n,o,i,p=a.createElement("canvas"),s=p.getContext&&p.getContext("2d");function c(e,t){var a=String.fromCharCode;s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,e),0,0);var r=p.toDataURL();return s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,t),0,0),r===p.toDataURL()}function l(e){if(!s||!s.fillText)return!1;switch(s.textBaseline="top",s.font="600 32px Arial",e){case"flag":return!c([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])&&(!c([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!c([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]));case"emoji":return!c([55357,56424,55356,57342,8205,55358,56605,8205,55357,56424,55356,57340],[55357,56424,55356,57342,8203,55358,56605,8203,55357,56424,55356,57340])}return!1}function d(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(i=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},o=0;o<i.length;o++)t.supports[i[o]]=l(i[o]),t.supports.everything=t.supports.everything&&t.supports[i[o]],"flag"!==i[o]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[i[o]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(r=t.source||{}).concatemoji?d(r.concatemoji):r.wpemoji&&r.twemoji&&(d(r.twemoji),d(r.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/wp-emoji-release.min.js" type="text/javascript" defer=""></script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="stylesheet" id="wp-block-library-css" href="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/style.min.css" type="text/css" media="all">
<link rel="stylesheet" id="duster-css" href="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/style.css" type="text/css" media="all">
<script type="text/javascript" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/f.txt"></script>
<link rel="stylesheet" type="text/css" href="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/prettify(1).css">
<script type="text/javascript" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/lang-sql.js"></script>
<link rel="https://api.w.org/" href="https://www.pegaxchange.com/wp-json/">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.pegaxchange.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.pegaxchange.com/wp-includes/wlwmanifest.xml">
<meta name="generator" content="WordPress 5.3.2">
<link rel="shortlink" href="https://www.pegaxchange.com/?p=3124">
<link rel="alternate" type="application/json+oembed" href="https://www.pegaxchange.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F">
<link rel="alternate" type="text/xml+oembed" href="https://www.pegaxchange.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;format=xml">
<style type="text/css"></style>
<style type="text/css">
.synved-social-resolution-single {
display: inline-block;
}
.synved-social-resolution-normal {
display: inline-block;
}
.synved-social-resolution-hidef {
display: none;
}

@media only screen and (min--moz-device-pixel-ratio: 2),
only screen and (-o-min-device-pixel-ratio: 2/1),
only screen and (-webkit-min-device-pixel-ratio: 2),
only screen and (min-device-pixel-ratio: 2),
only screen and (min-resolution: 2dppx),
only screen and (min-resolution: 192dpi) {
	.synved-social-resolution-normal {
	display: none;
	}
	.synved-social-resolution-hidef {
	display: inline-block;
	}
}
</style>
<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #aeb6bf; }
</style>
<link rel="amphtml" href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/amp/"><link rel="icon" href="https://www.pegaxchange.com/wp-content/uploads/2017/07/cropped-pgx-icon-512x512-32x32.png" sizes="32x32">
<link rel="icon" href="https://www.pegaxchange.com/wp-content/uploads/2017/07/cropped-pgx-icon-512x512-192x192.png" sizes="192x192">
<link rel="apple-touch-icon-precomposed" href="https://www.pegaxchange.com/wp-content/uploads/2017/07/cropped-pgx-icon-512x512-180x180.png">
<meta name="msapplication-TileImage" content="https://www.pegaxchange.com/wp-content/uploads/2017/07/cropped-pgx-icon-512x512-270x270.png">

<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-74638106-1', 'auto');
  ga('send', 'pageview');
</script>

</head>
<body>
<div id="page" class="hfeed">
<header id="branding" role="banner">
<div id="billboardArea">
<div class="billboard">
<ins class="adsbygoogle" style="display:inline-block;width:970px;height:250px;background-color:white;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="4695721279"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script>
</div>
</div> <nav id="access" role="navigation">
<h1 class="section-heading">Main menu</h1>
<div class="skip-link screen-reader-text"><a href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/#content" title="Skip to content">Skip to content</a></div>
<div class="menu"><ul>
<li><a href="https://www.pegaxchange.com/">Home</a></li><li class="page_item page-item-3264"><a href="https://www.pegaxchange.com/references/">References</a></li>
</ul></div>
</nav>
</header>
<div id="main">
<div id="primary">
<div id="content" role="main">
<article id="post-3124" class="post-3124 post type-post status-publish format-standard hentry category-java-development">
<header class="entry-header">
<h1 class="entry-title">Example of Creating a WebSocket Server in Java</h1>
<div class="entry-meta">
<span class="sep">Posted on </span><a href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/" rel="bookmark"><time class="entry-date" datetime="2018-01-28T04:21:09+00:00" pubdate="">January 28, 2018</time></a> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="https://www.pegaxchange.com/author/brunob1979/" title="View all posts by Bruno">Bruno</a></span> </div>
</header>
<div class="entry-content">
<div class="synved-social-container synved-social-container-share" style="text-align: center"><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-facebook nolightbox" data-provider="facebook" target="_blank" rel="nofollow" title="Share on Facebook" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;t=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java&amp;s=100&amp;p[url]=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;p[images][0]=https%3A%2F%2Fwww.pegaxchange.com%2Fwp-content%2Fuploads%2F2018%2F01%2F3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png&amp;p[title]=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="Facebook" title="Share on Facebook" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/facebook.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-twitter nolightbox" data-provider="twitter" target="_blank" rel="nofollow" title="Share on Twitter" href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;text=Hey%20check%20this%20out" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="twitter" title="Share on Twitter" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/twitter.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-reddit nolightbox" data-provider="reddit" target="_blank" rel="nofollow" title="Share on Reddit" href="https://www.reddit.com/submit?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;title=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="reddit" title="Share on Reddit" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/reddit.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-pinterest nolightbox" data-provider="pinterest" target="_blank" rel="nofollow" title="Pin it with Pinterest" href="https://pinterest.com/pin/create/button/?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;media=https%3A%2F%2Fwww.pegaxchange.com%2Fwp-content%2Fuploads%2F2018%2F01%2F3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png&amp;description=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="pinterest" title="Pin it with Pinterest" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/pinterest.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-linkedin nolightbox" data-provider="linkedin" target="_blank" rel="nofollow" title="Share on Linkedin" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;title=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="linkedin" title="Share on Linkedin" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/linkedin.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-normal synved-social-provider-mail nolightbox" data-provider="mail" rel="nofollow" title="Share by email" href="mailto:?subject=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java&amp;body=Hey%20check%20this%20out:%20https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;"><img alt="mail" title="Share by email" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/mail.webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-facebook nolightbox" data-provider="facebook" target="_blank" rel="nofollow" title="Share on Facebook" href="https://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;t=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java&amp;s=100&amp;p[url]=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;p[images][0]=https%3A%2F%2Fwww.pegaxchange.com%2Fwp-content%2Fuploads%2F2018%2F01%2F3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png&amp;p[title]=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="Facebook" title="Share on Facebook" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/facebook(1).webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-twitter nolightbox" data-provider="twitter" target="_blank" rel="nofollow" title="Share on Twitter" href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;text=Hey%20check%20this%20out" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="twitter" title="Share on Twitter" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/twitter(1).webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-reddit nolightbox" data-provider="reddit" target="_blank" rel="nofollow" title="Share on Reddit" href="https://www.reddit.com/submit?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;title=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="reddit" title="Share on Reddit" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/reddit(1).webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-pinterest nolightbox" data-provider="pinterest" target="_blank" rel="nofollow" title="Pin it with Pinterest" href="https://pinterest.com/pin/create/button/?url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;media=https%3A%2F%2Fwww.pegaxchange.com%2Fwp-content%2Fuploads%2F2018%2F01%2F3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.png&amp;description=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="pinterest" title="Pin it with Pinterest" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/pinterest(1).webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-linkedin nolightbox" data-provider="linkedin" target="_blank" rel="nofollow" title="Share on Linkedin" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F&amp;title=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;margin-right:5px;"><img alt="linkedin" title="Share on Linkedin" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/linkedin(1).webp"></a><a class="synved-social-button synved-social-button-share synved-social-size-32 synved-social-resolution-hidef synved-social-provider-mail nolightbox" data-provider="mail" rel="nofollow" title="Share by email" href="mailto:?subject=Example%20of%20Creating%20a%20WebSocket%20Server%20in%20Java&amp;body=Hey%20check%20this%20out:%20https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F" style="font-size: 0px; width:32px;height:32px;margin:0;margin-bottom:5px;"><img alt="mail" title="Share by email" class="synved-share-image synved-social-image synved-social-image-share" width="32" height="32" style="display: inline; width:32px;height:32px; margin: 0; padding: 0; border: none; box-shadow: none;" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/mail(1).webp"></a><a class="synved-social-credit" target="_blank" rel="nofollow" title="WordPress Social Media Feather" href="http://synved.com/wordpress-social-media-feather/" style="color:#444; text-decoration:none; font-size:8px; margin-left:5px;vertical-align:10px;white-space:nowrap;"><span>by </span><img style="display: inline;margin:0;padding:0;width:16px;height:16px;" width="16" height="16" alt="feather" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/icon.webp"></a></div><div style="height: 15px;"></div><p class="block">This post shows how to implement a WebSocket server in Java using the <a href="https://docs.oracle.com/javaee/7/api/javax/websocket/server/ServerEndpoint.html" target="_blank">@ServerEndpoint</a> annotation. A WebSocket server application can be deployed to Tomcat 7 or higher, or to any other Java EE servlet container that supports WebSockets. There are two packages for WebSocket programming:</p>
<div class="myList">
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/package-summary.html" target="_blank">javax.websocket</a> – APIs common to both the client and server side</div>
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/server/package-summary.html" target="_blank">javax.websocket.server</a> – APIs used only by server side applications</div>
</div>
<p class="block">
WebSocket is a technology for establishing a persistent, low-latency, <a href="https://en.wikipedia.org/wiki/Duplex_(telecommunications)#Full_duplex" target="_blank">full-duplex</a> communication channel
over a single http connection for real-time data exchange between a server endpoint (<span class="inParenthesis">Java, .NET, PHP etc.</span>) and a client (<span class="inParenthesis">HTML5 / JavaScript, iOS</span>).
</p>
<ul>
<li>The WebSocket protocol is an IETF proposed standard as described in <a href="https://tools.ietf.org/html/rfc6455" target="_blank">RFC6455</a>.</li>
<li>The WebSocket protocol defines 2 new URI schemes: <code class="blackBold">ws</code> and <code class="blackBold">wss</code> for TLS encryption.</li>
<li>WebSocket server URIs support query parameters as in: <code class="blackBold">ws://hostname:8080/AppContext/endpoint?userId=12345&amp;location=London</code></li>
<li>The <a href="https://docs.oracle.com/javaee/7/api/javax/websocket/package-summary.html" target="_blank">Java WebSocket API</a> runs on Servlet containers such as Tomcat, JBoss and Websphere.</li>
<li>See <a href="http://www.oracle.com/technetwork/articles/java/jsr356-1937161.html" target="_blank">Oracle’s JSR 356</a> for specification details of the Java API for WebSocket.</li>
<li>The W3C maintains the <a href="https://www.w3.org/TR/websockets/" target="_blank">WebSocket JavaScript API Specification</a> and defines the <a href="https://www.w3.org/TR/websockets/#the-websocket-interface" target="_blank">WebSocket</a> interface.</li>
<li><a href="https://www.w3schools.com/html/html5_intro.asp" target="_blank">HTML5</a> compliant web browsers provide an <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API" target="_blank">implementation of the specification</a> to enable clients to connect to a WebSocket server and to send and receive data (<span class="inParenthesis">IE10+, Chrome 16+, Firefox 11+, Safari 6+</span>).</li>
</ul>
<p>
For an example of how to create a WebSocket client in JavaScript and HTML 5, see the post below:
</p>
<div class="simpleBanner"><a href="https://www.pegaxchange.com/2018/03/23/websocket-client/" target="_blank">Create a WebSocket Client in JavaScript</a></div>

<div class="sectionHeaderJEE"><h2>Summary</h2></div>
<ol class="postSummary">
<li>Implementation of WebSocket Server in Java</li>
<li>Running the WebSocket Server on Tomcat</li>
<li>Testing the WebSocket Server Endpoint from Web Browser</li>
<li>Automatically Pushing Notifications to WebSocket Clients</li>
<li>Monitoring WebSocket Traffic with Chrome Developer Tools</li>
</ol>

<div class="sectionHeaderJEE"><h2>1&nbsp;&nbsp;Implementation of WebSocket Server in Java</h2></div>
<p class="block">
Below is the Java source code for the WebSocket server endpoint implementation.
In <span class="iBold">line 10</span>, the annotation <a href="https://docs.oracle.com/javaee/7/api/javax/websocket/server/ServerEndpoint.html" target="_blank">@ServerEndpoint</a>
is used to decorate a class that implements a WebSocket server endpoint. Four more
method annotations are used to decorate event handlers for WebSocket client connections.
</p>
<div class="myList">
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/OnOpen.html" target="_blank">@OnOpen</a> – Called when a client connects</div>
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/OnClose.html" target="_blank">@OnClose</a> – Called when a client connection is closed</div>
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/OnMessage.html" target="_blank">@OnMessage</a> – Called when a message is received by the client</div>
<div class="myItem"><a href="https://docs.oracle.com/javaee/7/api/javax/websocket/OnError.html" target="_blank">@OnError</a> – Called when an error for this endpoint occurred</div>
</div>
<p>These four methods are invoked by the container.</p>
<pre class="prettyprint lang-java linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">package</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">pgx</span><span class="pun">.</span><span class="pln">java</span><span class="pun">.</span><span class="pln">web</span><span class="pun">;</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">IOException</span><span class="pun">;</span></code></li><li class="L3"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">List</span><span class="pun">;</span></code></li><li class="L4"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Map</span><span class="pun">;</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnClose</span><span class="pun">;</span></code></li><li class="L7"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnError</span><span class="pun">;</span></code></li><li class="L8"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnMessage</span><span class="pun">;</span></code></li><li class="L9"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnOpen</span><span class="pun">;</span></code></li><li class="L0"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="pln">server</span><span class="pun">.</span><span class="typ">ServerEndpoint</span><span class="pun">;</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="lit">@ServerEndpoint</span><span class="pun">(</span><span class="str">"/endpoint"</span><span class="pun">)</span></code></li><li class="L4"><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyWebSocket</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">    </span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">PushTimeService</span><span class="pln"> pst</span><span class="pun">;</span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="pln">    </span><span class="lit">@OnOpen</span></code></li><li class="L9"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onOpen</span><span class="pun">(</span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onOpen::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span><span class="pln">        </span></code></li><li class="L1"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln">    </span><span class="lit">@OnClose</span></code></li><li class="L4"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onClose</span><span class="pun">(</span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onClose::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln">  session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">    </span></code></li><li class="L8"><code><span class="pln">    </span><span class="lit">@OnMessage</span></code></li><li class="L9"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> message</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onMessage::From="</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" Message="</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> message</span><span class="pun">);</span></code></li><li class="L1"><code><span class="pln">        </span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">            session</span><span class="pun">.</span><span class="pln">getBasicRemote</span><span class="pun">().</span><span class="pln">sendText</span><span class="pun">(</span><span class="str">"Hello Client "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"!"</span><span class="pun">);</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">            e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span></code></li><li class="L7"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">    </span></code></li><li class="L0"><code><span class="pln">    </span><span class="lit">@OnError</span></code></li><li class="L1"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onError</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> t</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onError::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> t</span><span class="pun">.</span><span class="pln">getMessage</span><span class="pun">());</span></code></li><li class="L3"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pun">}</span></code></li></ol></pre>
<p class="block">
The <span class="iBold">Eclipse Neon IDE</span> for Java web development and <span class="iBold">Apache Tomcat 9</span>
were used as described in the post below to implement the class and to deploy it.
</p>
<div class="simpleBanner"><a href="https://www.pegaxchange.com/2016/09/02/java-eclipse-tomcat/" target="_blank">Setup Java IDE with Eclipse Neon and Tomcat</a></div>
<img id="com.pegaxchange.java.bean.Image@10792bfd" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Eclipse-Neon-Dynamic-Web-Project-WebSocket-Server-Endpoint.webp" alt="Eclipse Neon - Structure of Dynamic Web Project for WebSocket Server in Java.">
<p class="block">
This setup allows to run the WebSocket server application on Tomcat from within Eclipse. The above image shows the basic structure
of the dynamic web project in the Project Explorer. Note the <code class="blackBold">tomcat-websocket.jar</code> file in the Apache
Tomcat v9.0 server runtime library. It contains the Java API for WebSocket support.
</p>

<div class="sectionHeaderJEE"><h2>2&nbsp;&nbsp;Running the WebSocket Server on Tomcat</h2></div>
<p class="block">
To export the WebSocket server application so that it can be deployed to an external Tomcat server, see the below post on creating a WAR file:
</p>
<div class="simpleBanner"><a href="https://www.pegaxchange.com/2018/01/18/eclipse-export-dynamic-web-project-to-war/" target="_blank">Eclipse Neon – Export Dynamic Web Project to WAR File</a></div>
<p class="block">
Here, the web application is run from within Eclipse using the dynamic web project setup mentioned earlier.
No configuration changes to Tomcat are required to run a WebSocket server endpoint.
The port number will be the same as the one used for connections via the <code class="blackBold">http</code> protocol,
e.g. <code class="blackBold">8080</code>.
</p>
<img id="com.pegaxchange.java.bean.Image@78d35668" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Eclipse-Neon-Start-Apache-Tomcat-9-Server.webp" alt="Eclipse Neon - Apache Tomcat Server Runtime Environment. Start WebSocket Server Application.">
<p class="block">
Use the <span class="iBold">Console</span> tab in Eclipse to view the Tomcat server output and to catch potential errors on startup.
</p>
<img id="com.pegaxchange.java.bean.Image@21acac4c" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Eclipse-Neon-Tomcat-Server-Console-Output.webp" alt="Eclipse Neon - Apache Tomcat Server Console Output. Successful WebSocket Server in Java Startup.">
<p class="block">
If there are no errors, the WebSocket server is up and running and ready to accept connections from clients.
The WebSocket server endpoint URL for accessing it from a local machine would be:
</p>
<pre class="prettyprint lang-html ppcenter prettyprinted" style=""><code><span class="nocode ppgreen">ws://</span><span class="pln">127.0.0.1:8080/WebSocketServer/endpoint</span></code></pre>

<div class="sectionHeaderJEE"><h2>3&nbsp;&nbsp;Testing the WebSocket Server Endpoint from Web Browser</h2></div>
<p>
The <span class="iBold">JavaScript</span> source code given below creates a class called
<code class="blackBold">WebSocketClient</code> which implements a basic WebSocket client.
</p>
<pre class="prettyprint lang-js linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">WebSocketClient</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">    </span></code></li><li class="L2"><code><span class="pln">    </span><span class="kwd">constructor</span><span class="pun">(</span><span class="pln">protocol</span><span class="pun">,</span><span class="pln"> hostname</span><span class="pun">,</span><span class="pln"> port</span><span class="pun">,</span><span class="pln"> endpoint</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></code></li><li class="L5"><code><span class="pln">        </span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">protocol </span><span class="pun">=</span><span class="pln"> protocol</span><span class="pun">;</span></code></li><li class="L7"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hostname </span><span class="pun">=</span><span class="pln"> hostname</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">port     </span><span class="pun">=</span><span class="pln"> port</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">endpoint </span><span class="pun">=</span><span class="pln"> endpoint</span><span class="pun">;</span></code></li><li class="L0"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">    </span></code></li><li class="L2"><code><span class="pln">    getServerUrl</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">protocol </span><span class="pun">+</span><span class="pln"> </span><span class="str">"://"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hostname </span><span class="pun">+</span><span class="pln"> </span><span class="str">":"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">port </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">endpoint</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">    </span></code></li><li class="L6"><code><span class="pln">    connect</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WebSocket</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">getServerUrl</span><span class="pun">());</span></code></li><li class="L0"><code><span class="pln">            </span></code></li><li class="L1"><code><span class="pln">            </span><span class="com">// </span></code></li><li class="L2"><code><span class="pln">            </span><span class="com">// Implement WebSocket event handlers!</span></code></li><li class="L3"><code><span class="pln">            </span><span class="com">//</span></code></li><li class="L4"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">onopen </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">                console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'onopen::'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">event</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">));</span></code></li><li class="L6"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">            </span></code></li><li class="L8"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">onmessage </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">                </span><span class="kwd">var</span><span class="pln"> msg </span><span class="pun">=</span><span class="pln"> event</span><span class="pun">.</span><span class="pln">data</span><span class="pun">;</span></code></li><li class="L0"><code><span class="pln">                console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'onmessage::'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">msg</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">));</span></code></li><li class="L1"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">onclose </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">                console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'onclose::'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">event</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">));</span><span class="pln">                </span></code></li><li class="L5"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L6"><code></code></li><li class="L7"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">onerror </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">event</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">                console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="str">'onerror::'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">event</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">));</span></code></li><li class="L9"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">            </span></code></li><li class="L1"><code><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">exception</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">            console</span><span class="pun">.</span><span class="pln">error</span><span class="pun">(</span><span class="pln">exception</span><span class="pun">);</span></code></li><li class="L3"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">    </span></code></li><li class="L6"><code><span class="pln">    getStatus</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">readyState</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="pln">    send</span><span class="pun">(</span><span class="pln">message</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        </span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">readyState </span><span class="pun">==</span><span class="pln"> </span><span class="typ">WebSocket</span><span class="pun">.</span><span class="pln">OPEN</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">send</span><span class="pun">(</span><span class="pln">message</span><span class="pun">);</span></code></li><li class="L4"><code><span class="pln">            </span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">            console</span><span class="pun">.</span><span class="pln">error</span><span class="pun">(</span><span class="str">'webSocket is not open. readyState='</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">readyState</span><span class="pun">);</span></code></li><li class="L7"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="pln">    disconnect</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">readyState </span><span class="pun">==</span><span class="pln"> </span><span class="typ">WebSocket</span><span class="pun">.</span><span class="pln">OPEN</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">close</span><span class="pun">();</span></code></li><li class="L4"><code><span class="pln">            </span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">            console</span><span class="pun">.</span><span class="pln">error</span><span class="pun">(</span><span class="str">'webSocket is not open. readyState='</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">webSocket</span><span class="pun">.</span><span class="pln">readyState</span><span class="pun">);</span></code></li><li class="L7"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pun">}</span></code></li></ol></pre>
<p class="block">
The JavaScript code can be executed with Chrome (<span class="inParenthesis">or any other browser</span>),
using its built-in <span class="iBold">Developer Tools</span>. Open a new window in Chrome, copy the above
JavaScript WebSocket client code and paste it into the console provided by the Chrome Developer tools.
</p>
<img id="com.pegaxchange.java.bean.Image@54a0ab35" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-JavaScript-Console-WebSocketClient-Class.webp" alt="Google Chrome Developer Tools - Use JavaScript Console to Define WebSocketClient Class.">
<p>
The <code class="blackBold">WebSocketClient</code> class has now been defined on the current page.
In the console, enter the JavaScript code below to create a new object of that class.
</p>
<pre class="prettyprint lang-js ppcenter prettyprinted" style=""><code><span class="kwd">var</span><span class="pln"> client </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">WebSocketClient</span><span class="pun">(</span><span class="str">'ws'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'127.0.0.1'</span><span class="pun">,</span><span class="pln"> </span><span class="lit">8080</span><span class="pun">,</span><span class="pln"> </span><span class="str">'/WebSocketServer/endpoint'</span><span class="pun">);</span></code></pre>
<p>
Then call the <code class="blackBold">connect</code> method to open a new connection to the WebSocket
server endpoint. The browser will call the event handler <code class="blackBold">onopen</code> once the
connection has been established.
</p>
<pre class="prettyprint lang-js ppcenter prettyprinted" style=""><code><span class="pln">client</span><span class="pun">.</span><span class="pln">connect</span><span class="pun">();</span></code></pre>
<img id="com.pegaxchange.java.bean.Image@50e8bc5" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-JavaScript-Console-Create-New-WebSocketClient.webp" alt="Google Chrome Developer Tools - Use JavaScript Console to Create new Instance of WebSocketClient Class">
<p>
At this point, the container that is hosting the WebSocket server endpoint will call the server implementation’s
<code class="blackBold">onOpen</code> method. In this example, the server simply prints the session Id,
which is <code class="blackBold">0</code> here.
</p>
<ul>
<li>See the <code class="blackBold">onOpen</code> method of the <code class="blackBold">MyWebSocket.java</code> class from section 1.</li>
<li>See the Oracle documentation for details on <a href="https://docs.oracle.com/javaee/7/api/javax/websocket/Session.html" target="_blank">javax.websocket.Session</a>.</li>
</ul>
<img id="com.pegaxchange.java.bean.Image@670ced1a" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Eclipse-Neon-Tomcat-Server-Console-Output-WebSocket-onOpen.webp" alt="Eclipse Neon - Apache Tomcat Server Console Output. New WebSocket Connection Opened.">
<p>
On the client side, execute the <code class="blackBold">send(String message)</code> method using the JavaScript
below to send a new message to the server.
</p>
<pre class="prettyprint lang-js ppcenter prettyprinted" style=""><code><span class="pln">client</span><span class="pun">.</span><span class="pln">send</span><span class="pun">(</span><span class="str">'Hello Server!'</span><span class="pun">);</span></code></pre>
<img id="com.pegaxchange.java.bean.Image@2306f37b" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-JavaScript-Console-Send-WebSocket-Message-To-Server.webp" alt="Google Chrome Developer Tools - Use JavaScript Console to Send WebSocket Message to Server.">
<p class="block">
The server returns a greeting message to the client, here <i>"Hello Client 0!"</i>
See <span class="iBold">line 34</span> of the <code class="blackBold">MyWebSocket.java</code> class from section 1.
At the same time, the container that is hosting the WebSocket server endpoint will call the server implementation’s
<code class="blackBold">onMessage</code> method. The server simply prints the client’s message to the console.
</p>
<img id="com.pegaxchange.java.bean.Image@722e0d2d" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Eclipse-Neon-Tomcat-Server-Console-New-Message-From-Client.webp" alt="Eclipse Neon - Apache Tomcat Server Console Output. WebSocket Message Received from Client.">

<div class="sectionHeaderJEE"><h2>4&nbsp;&nbsp;Automatically Pushing Notifications to WebSocket Clients</h2></div>
<p class="block">
In this section, the <code class="blackBold">MyWebSocket.java</code> class is changed a bit so that
clients can subscribe to a <span class="iBold">notification service</span> that will periodically send
the server’s current system time. The clients that want to receive those notifications need to provide
a URL query string parameter as shown below:
</p>
<pre class="prettyprint lang-html ppcenter prettyprinted" style=""><code><span class="pln">ws://127.0.0.1:8080/WebSocketServer/endpoint</span><span class="nocode ppgreen">?push=TIME</span></code></pre>
<p class="block">
New code has been added to the <code class="blackBold">onOpen</code> method between <span class="iBold">line 21</span> and <span class="iBold">line 32</span> as shown below.
The <code class="blackBold">PushTimeService</code> class maintains a collection of active <a href="https://docs.oracle.com/javaee/7/api/javax/websocket/Session.html" target="_blank">Session</a>
objects and periodically sends the current server time to all clients that have subscribed.
</p><p>
</p><pre class="prettyprint lang-java linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">package</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">pgx</span><span class="pun">.</span><span class="pln">java</span><span class="pun">.</span><span class="pln">web</span><span class="pun">;</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">io</span><span class="pun">.</span><span class="typ">IOException</span><span class="pun">;</span></code></li><li class="L3"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">List</span><span class="pun">;</span></code></li><li class="L4"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.</span><span class="typ">Map</span><span class="pun">;</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnClose</span><span class="pun">;</span></code></li><li class="L7"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnError</span><span class="pun">;</span></code></li><li class="L8"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnMessage</span><span class="pun">;</span></code></li><li class="L9"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">OnOpen</span><span class="pun">;</span></code></li><li class="L0"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="pln">server</span><span class="pun">.</span><span class="typ">ServerEndpoint</span><span class="pun">;</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="lit">@ServerEndpoint</span><span class="pun">(</span><span class="str">"/endpoint"</span><span class="pun">)</span></code></li><li class="L4"><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">MyWebSocket</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pln">    </span><span class="lit">@OnOpen</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onOpen</span><span class="pun">(</span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onOpen::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></code></li><li class="L9"><code><span class="pln">        </span></code></li><li class="L0"><code><span class="pln">        </span><span class="com">///////////////////////////////////////////////////////////////////////////// </span></code></li><li class="L1"><code><span class="pln">        </span><span class="com">// Access request parameters from URL query String.</span></code></li><li class="L2"><code><span class="pln">        </span><span class="com">// If a client subscribes, add Session to PushTimeService. </span></code></li><li class="L3"><code><span class="pln">        </span><span class="com">//</span></code></li><li class="L4"><code><span class="pln">        </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;&gt;</span><span class="pln"> params </span><span class="pun">=</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getRequestParameterMap</span><span class="pun">();</span></code></li><li class="L5"><code><span class="pln">        </span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">params</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="str">"push"</span><span class="pun">)</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span><span class="pln">params</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="str">"push"</span><span class="pun">).</span><span class="pln">get</span><span class="pun">(</span><span class="lit">0</span><span class="pun">).</span><span class="pln">equals</span><span class="pun">(</span><span class="str">"TIME"</span><span class="pun">)))</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">            </span></code></li><li class="L8"><code><span class="pln">          </span><span class="typ">PushTimeService</span><span class="pun">.</span><span class="pln">initialize</span><span class="pun">();</span></code></li><li class="L9"><code><span class="pln">          </span><span class="typ">PushTimeService</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">session</span><span class="pun">);</span></code></li><li class="L0"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">        </span><span class="com">/////////////////////////////////////////////////////////////////////////////</span></code></li><li class="L2"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="pln">    </span><span class="lit">@OnClose</span></code></li><li class="L5"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onClose</span><span class="pun">(</span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onClose::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln">  session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">());</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">    </span></code></li><li class="L9"><code><span class="pln">    </span><span class="lit">@OnMessage</span></code></li><li class="L0"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onMessage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> message</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Session</span><span class="pln"> session</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onMessage::From="</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" Message="</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> message</span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">        </span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">            session</span><span class="pun">.</span><span class="pln">getBasicRemote</span><span class="pun">().</span><span class="pln">sendText</span><span class="pun">(</span><span class="str">"Hello Client "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> session</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">"!"</span><span class="pun">);</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">            e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span></code></li><li class="L8"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">    </span></code></li><li class="L1"><code><span class="pln">    </span><span class="lit">@OnError</span></code></li><li class="L2"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onError</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> t</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span><span class="typ">System</span><span class="pun">.</span><span class="pln">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"onError::"</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> t</span><span class="pun">.</span><span class="pln">getMessage</span><span class="pun">());</span></code></li><li class="L4"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pun">}</span></code></li></ol></pre>
<p class="block">
The Java source code of the <code class="blackBold">PushTimeService.java</code> class is given below.
This class implements a singleton and runs in a separate thread. <span class="iBold">Every 10 seconds</span>, it
iterates over its collection of subscribed clients and sends the server time to each one
as a WebSocket message. If the session has been closed, it is removed from the collection.
</p>
<pre class="prettyprint lang-java linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">package</span><span class="pln"> com</span><span class="pun">.</span><span class="pln">pgx</span><span class="pun">.</span><span class="pln">java</span><span class="pun">.</span><span class="pln">web</span><span class="pun">;</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="kwd">import</span><span class="pln"> java</span><span class="pun">.</span><span class="pln">util</span><span class="pun">.*;</span></code></li><li class="L3"><code><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">websocket</span><span class="pun">.</span><span class="typ">Session</span><span class="pun">;</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">PushTimeService</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Runnable</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">    </span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">PushTimeService</span><span class="pln"> instance</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">Map</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Session</span><span class="pun">&gt;</span><span class="pln"> sMap </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">HashMap</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Session</span><span class="pun">&gt;();</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">PushTimeService</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{}</span></code></li><li class="L1"><code><span class="pln">    </span></code></li><li class="L2"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> add</span><span class="pun">(</span><span class="typ">Session</span><span class="pln"> s</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        sMap</span><span class="pun">.</span><span class="pln">put</span><span class="pun">(</span><span class="pln">s</span><span class="pun">.</span><span class="pln">getId</span><span class="pun">(),</span><span class="pln"> s</span><span class="pun">);</span></code></li><li class="L4"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">    </span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> initialize</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">instance </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">            instance </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">PushTimeService</span><span class="pun">();</span></code></li><li class="L9"><code><span class="pln">            </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Thread</span><span class="pun">(</span><span class="pln">instance</span><span class="pun">).</span><span class="pln">start</span><span class="pun">();</span></code></li><li class="L0"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln">    </span><span class="lit">@Override</span></code></li><li class="L4"><code><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> run</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        </span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">true</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">            </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">                </span><span class="typ">Thread</span><span class="pun">.</span><span class="pln">sleep</span><span class="pun">(</span><span class="lit">10</span><span class="pun">*</span><span class="lit">1000</span><span class="pun">);</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="pln">                </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="typ">String</span><span class="pln"> key </span><span class="pun">:</span><span class="pln"> sMap</span><span class="pun">.</span><span class="pln">keySet</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">                    </span></code></li><li class="L2"><code><span class="pln">                    </span><span class="typ">Session</span><span class="pln"> s </span><span class="pun">=</span><span class="pln"> sMap</span><span class="pun">.</span><span class="pln">get</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span><span class="pln"> </span></code></li><li class="L3"><code><span class="pln">                    </span></code></li><li class="L4"><code><span class="pln">                    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">s</span><span class="pun">.</span><span class="pln">isOpen</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">                        </span><span class="typ">Date</span><span class="pln"> d </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Date</span><span class="pun">(</span><span class="typ">System</span><span class="pun">.</span><span class="pln">currentTimeMillis</span><span class="pun">());</span></code></li><li class="L6"><code><span class="pln">                        s</span><span class="pun">.</span><span class="pln">getBasicRemote</span><span class="pun">().</span><span class="pln">sendText</span><span class="pun">(</span><span class="pln">d</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">());</span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="pln">                    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">                        sMap</span><span class="pun">.</span><span class="pln">remove</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></code></li><li class="L0"><code><span class="pln">                    </span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">                </span><span class="pun">}</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Exception</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">                e</span><span class="pun">.</span><span class="pln">printStackTrace</span><span class="pun">();</span></code></li><li class="L5"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pun">}</span></code></li></ol></pre>
<p class="block">
In the below scenario, 2 WebSocket clients have been started in different browsers using the
<code class="blackBold">WebSocketClient</code> JavaScript class from section 3. Both have subscribed to receive the server system time.
</p>
<img id="com.pegaxchange.java.bean.Image@38fe00e" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-JavaScript-Console-Pushed-WebSocket-Messages-Client1.webp" alt="Google Chrome Developer Tools - JavaScript Console to View WebSocket Messages Pushed to Client 1.">
<p class="block">
The <code class="blackBold">PushTimeService</code> class sends the server’s system time to both clients, every 10 seconds.
</p>
<img id="com.pegaxchange.java.bean.Image@36bb958" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-JavaScript-Console-Pushed-WebSocket-Messages-Client2.webp" alt="Google Chrome Developer Tools - JavaScript Console to View WebSocket Messages Pushed to Client 2.">
<p class="block">
Similar approaches can be used to push a variety of event driven data from the server to clients in real time. Since the client’s WebSocket connection
resides in the UI layer, WebSockets are a good solution (<span class="inParenthesis">alternative to polling</span>) for driving real-time UI components such as stock tickers or notifications.
</p>

<div class="sectionHeaderJEE"><h2>5&nbsp;&nbsp;Monitoring WebSocket Traffic with Chrome Developer Tools</h2></div>
<p class="block">
The Chrome Developer Tools provide means for basic monitoring of WebSocket traffic. Use the
<span class="iBold">Network tab</span> and then filter the traffic with the <span class="iBold">WS</span>
button to only show WebSockets. The <span class="iBold">Headers tab</span> shows the client http request and the server response.
The <span class="iBold">Query String Parameters</span> are listed at the bottom.
</p>
<img id="com.pegaxchange.java.bean.Image@17e21f65" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-DeveloperTools-Network-View-WebSocket-Headers.webp" alt="Google Chrome Developer Tools - Use Network Tab to View WebSocket Headers.">
<p class="block">
Note that the server responds with a <span class="iBold">connection upgrade</span> in the response header to upgrade the http connection to a persistent
WebSocket connection. See the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism" target="_blank">protocol upgrade mechanism</a>
for details on this process. The <span class="iBold">Frames tab</span> shows all outgoing and incoming WebSocket messages. Click on a frame to see its content.
</p>
<img id="com.pegaxchange.java.bean.Image@15272fd1" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-DeveloperTools-Network-View-WebSocket-Frames.webp" alt="Google Chrome Developer Tools - Use Network Tab to View WebSocket Frames.">
<p class="block">
The <span class="iBold">Timig tab</span> shows how long the WebSocket connection has been open. In the below example, it has been open for 4.4 mins.
</p>
<img id="com.pegaxchange.java.bean.Image@69d432eb" class="aligncenter size-full shadow mb20" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/3124-Google-Chrome-DeveloperTools-Network-View-WebSocket-Timing.webp" alt="Google Chrome Developer Tools - Use Network Tab to View WebSocket Timing.">

<div class="sectionHeaderJEE"><h2>Related Posts</h2></div>
<ul>
<li><a href="https://www.pegaxchange.com/2017/12/07/simple-tcp-ip-server-client-java/" target="_blank">Creating a Simple Java TCP/IP Server and Client Socket</a></li>
<li><a href="https://www.pegaxchange.com/2018/01/23/simple-udp-server-and-client-socket-java/" target="_blank">Creating a Simple Java UDP Server and Client Socket</a></li>
</ul> </div>
<footer class="entry-meta">
</footer>
</article>
<div id="comments">
<div id="respond" class="comment-respond">
<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/#respond" style="display:none;">Cancel reply</a></small></h3><p class="must-log-in">You must be <a href="https://www.pegaxchange.com/wp-login.php?redirect_to=https%3A%2F%2Fwww.pegaxchange.com%2F2018%2F01%2F28%2Fwebsocket-server-java%2F">logged in</a> to post a comment.</p> </div>
<p class="akismet_comment_form_privacy_notice">This site uses Akismet to reduce spam. <a href="https://akismet.com/privacy/" target="_blank" rel="nofollow noopener">Learn how your comment data is processed</a>.</p>
</div> </div>
</div>
<div id="secondary" class="widget-area" role="complementary">
<form method="get" id="searchform" action="https://www.pegaxchange.com/">
<input type="text" class="field" name="s" id="s" placeholder="Search">
<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search">
</form>
<aside id="categories-2" class="widget widget_categories"><ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px;background-color:white;margin:15px auto 15px 10px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3000146608"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><h1 class="widget-title">Categories</h1> <ul>
<li class="cat-item cat-item-336"><a href="https://www.pegaxchange.com/category/java-development/">Java Development</a> (13)
</li>
<li class="cat-item cat-item-476"><a href="https://www.pegaxchange.com/category/mac-os/">Mac OS</a> (3)
</li>
<li class="cat-item cat-item-58"><a href="https://www.pegaxchange.com/category/pega-7-activities/">Pega 7 Activities</a> (4)
</li>
<li class="cat-item cat-item-77"><a href="https://www.pegaxchange.com/category/pega-7-administration/">Pega 7 Administration</a> (8)
</li>
<li class="cat-item cat-item-34"><a href="https://www.pegaxchange.com/category/pega-7-circumstancing/">Pega 7 Circumstancing</a> (1)
</li>
<li class="cat-item cat-item-57"><a href="https://www.pegaxchange.com/category/pega-7-data-transforms/">Pega 7 Data Transforms</a> (2)
</li>
<li class="cat-item cat-item-600"><a href="https://www.pegaxchange.com/category/pega-7-debugging/">Pega 7 Debugging</a> (1)
</li>
<li class="cat-item cat-item-82"><a href="https://www.pegaxchange.com/category/pega-7-file-processing/">Pega 7 File Processing</a> (1)
</li>
<li class="cat-item cat-item-87"><a href="https://www.pegaxchange.com/category/pega-7-installation/">Pega 7 Installation</a> (3)
</li>
<li class="cat-item cat-item-75"><a href="https://www.pegaxchange.com/category/pega-7-integration/">Pega 7 Integration</a> (7)
</li>
<li class="cat-item cat-item-70"><a href="https://www.pegaxchange.com/category/pega-7-reporting/">Pega 7 Reporting</a> (2)
</li>
<li class="cat-item cat-item-3"><a href="https://www.pegaxchange.com/category/pega-7-ui-controls/">Pega 7 UI Controls</a> (4)
</li>
</ul>
</aside> <aside id="recent-posts-2" class="widget widget_recent_entries"><ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px;background-color:white;margin:15px auto 15px 10px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3000146608"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script> <h1 class="widget-title">Recent Posts</h1> <ul>
<li>
<a href="https://www.pegaxchange.com/2018/03/23/websocket-client/">Create a WebSocket Client in JavaScript</a>
<span class="post-date">March 23, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/02/18/read-pega-7-blob/">How to Read Pega 7 BLOB (Storage Stream)</a>
<span class="post-date">February 18, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/02/12/spring-web-mvc-project-maven-archetype/">Create Spring Web MVC Project from Maven Archetype in Eclipse Neon</a>
<span class="post-date">February 12, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/28/websocket-server-java/" aria-current="page">Example of Creating a WebSocket Server in Java</a>
<span class="post-date">January 28, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/24/java-web-project-with-spring-framework/">Eclipse Neon – Create Java Web Project with Spring – Without Maven</a>
<span class="post-date">January 24, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/23/simple-udp-server-and-client-socket-java/">Creating a Simple Java UDP Server and Client Socket</a>
<span class="post-date">January 23, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/18/eclipse-export-dynamic-web-project-to-war/">Eclipse Neon – Export Dynamic Web Project to WAR File</a>
<span class="post-date">January 18, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/11/create-java-project-in-eclipse-neon/">Create Java Project in Eclipse Neon and Setup User Library</a>
<span class="post-date">January 11, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2018/01/11/export-a-java-project-in-eclipse-neon/">Export a Java Project in Eclipse Neon to Executable JAR with Manifest</a>
<span class="post-date">January 11, 2018</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/12/07/simple-tcp-ip-server-client-java/">Creating a Simple Java TCP/IP Server and Client Socket</a>
<span class="post-date">December 7, 2017</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/11/21/pega-7-activity-public-html-page/">Configure Pega 7 Activity to Show Public HTML Page</a>
<span class="post-date">November 21, 2017</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/11/14/pega-7-activity-html-page/">Configuring Pega 7 Activity to Show HTML Page</a>
<span class="post-date">November 14, 2017</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/10/19/setup-maven-java-project-macos/">Setting up Maven on Mac OS and Creating Java Project</a>
<span class="post-date">October 19, 2017</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/10/09/create-pega-7-rest-service/">Create Pega 7 REST Service with Service REST Rule</a>
<span class="post-date">October 9, 2017</span>
</li>
<li>
<a href="https://www.pegaxchange.com/2017/09/21/pega-7-http-proxy/">Configure Pega 7 HTTP Proxy for REST Service Calls</a>
<span class="post-date">September 21, 2017</span>
</li>
</ul>
</aside><aside id="archives-2" class="widget widget_archive"><ins class="adsbygoogle" style="display:inline-block;width:300px;height:600px;background-color:white;margin:15px auto 15px 10px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3000146608"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><h1 class="widget-title">Archives</h1> <ul>
<li><a href="https://www.pegaxchange.com/2018/03/">March 2018</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2018/02/">February 2018</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2018/01/">January 2018</a>&nbsp;(6)</li>
<li><a href="https://www.pegaxchange.com/2017/12/">December 2017</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2017/11/">November 2017</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2017/10/">October 2017</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2017/09/">September 2017</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2017/06/">June 2017</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2017/05/">May 2017</a>&nbsp;(3)</li>
<li><a href="https://www.pegaxchange.com/2017/04/">April 2017</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2017/02/">February 2017</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2017/01/">January 2017</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/10/">October 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/09/">September 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/08/">August 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/07/">July 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/06/">June 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/05/">May 2016</a>&nbsp;(3)</li>
<li><a href="https://www.pegaxchange.com/2016/04/">April 2016</a>&nbsp;(1)</li>
<li><a href="https://www.pegaxchange.com/2016/02/">February 2016</a>&nbsp;(2)</li>
<li><a href="https://www.pegaxchange.com/2016/01/">January 2016</a>&nbsp;(5)</li>
<li><a href="https://www.pegaxchange.com/2015/12/">December 2015</a>&nbsp;(2)</li>
</ul>
</aside><ins id="LS-2731419808" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="2731419808"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-8638352601" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="8638352601"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-1115085809" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="1115085809"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-4068552201" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="4068552201"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-7653069802" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="7653069802"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-3083269400" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3083269400"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-4560002600" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="4560002600"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-6036735803" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="6036735803"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-5355612209" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="5355612209"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-8309078604" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="8309078604"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-3739278206" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3739278206"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-5216011403" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="5216011403"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-9646211007" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="9646211007"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-2122944208" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="2122944208"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-3599677400" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="3599677400"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script><ins id="LS-5076410602" class="adsbygoogle" style="margin:20px auto 0px 10px;background-color:white;display:inline-block;width:300px;height:600px;" data-ad-client="ca-pub-6129474222386936" data-ad-slot="5076410602"></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div>
</div>
<footer id="colophon" role="contentinfo">
<div id="site-generator">
<a href="https://wordpress.org/" title="A Semantic Personal Publishing Platform" rel="generator">Proudly powered by WordPress</a>
<span class="sep"> | </span>
Theme: Duster by <a href="https://automattic.com/" rel="designer">Automattic</a>. </div>
</footer>
</div>
<script type="text/javascript" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./Example of Creating a WebSocket Server in Java - Pega Exchange_files/wp-embed.min.js"></script>




</body></html>