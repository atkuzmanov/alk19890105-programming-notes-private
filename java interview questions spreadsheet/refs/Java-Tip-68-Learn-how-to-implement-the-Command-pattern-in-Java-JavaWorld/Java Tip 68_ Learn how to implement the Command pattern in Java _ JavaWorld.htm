<!DOCTYPE html>
<!-- saved from url=(0112)https://www.javaworld.com/article/2077569/java-tip-68-%2Dlearn-how-to-implement-the-command-pattern-in-java.html -->
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:fb="http://ogp.me/ns/fb#"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script type="text/javascript" async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/linkid.js"></script><script type="text/javascript" async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/analytics.js"></script><script type="text/javascript" async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/gtm.js"></script><script async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/beacon.js"></script>
	<link rel="alternate" hreflang="en" href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html">
	
	
	
	<!-- metas -->
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
			
	<title>Java Tip 68: Learn how to implement the Command pattern in Java | JavaWorld</title>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	
	<script async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/gtm(1).js"></script><script>
	function getQueryVariable(variable) {
		var query = window.location.search.substring(1);
		var vars = query.split("&");
		for (var i=0;i<vars.length;i++) {
			var pair = vars[i].split("=");
			if(pair[0] == variable){return pair[1];}
		}
		return(false);
	}
	</script>
	
	<script>
	// Include CSS file for insider modal - used in insider_reg_api.js
	function addCSS(filename){
		 var headerTag = document.querySelector("header#banner");
		 var styleTag = document.createElement('link');
		 styleTag.href = filename;
		 styleTag.className = "oc-modal";
		 styleTag.type = 'text/css';
		 styleTag.rel = 'stylesheet';
		 headerTag.parentNode.insertBefore(styleTag, headerTag);
	}
	</script>
		
	<!-- ad-related js -->
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery-1.10.2.min.js"></script>
	
	<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery_cookie.js"></script>
	
	
	
	<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/apollo-locales.js"></script>
	
	
	











<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/cmp_shim.js"></script><iframe name="__cmpLocator" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/saved_resource.html"></iframe>

<script>
var consent = consent || {};
consent.isEU = consent.isEU || null;
consent.personalization = consent.personalization || null;
consent.ads = consent.ads || {};
consent.ads.queue = consent.ads.queue || [];

consent.infostorage = consent.infostorage || {};
consent.infostorage.queue = consent.infostorage.queue || [];

consent.adsel = consent.adsel || {};
consent.adsel.queue = consent.adsel.queue || [];

consent.contentsel = consent.contentsel || {};
consent.contentsel.queue = consent.contentsel.queue || [];

consent.socmedia = consent.socmedia || {};
consent.socmedia.queue = consent.socmedia.queue || [];

consent.blueconic = consent.blueconic || {};
consent.blueconic.queue = consent.blueconic.queue || [];

consent.digitalelement = consent.digitalelement || {};
consent.digitalelement.queue = consent.digitalelement.queue || [];

consent.purposes = consent.purposes || {};
consent.purposes.standard = consent.purposes.standard || [];
consent.purposes.custom = consent.purposes.custom || [];
consent.vendors = consent.vendors || {};
consent.vendors.standard = consent.vendors.standard || [];
consent.vendors.custom = consent.vendors.custom || [];

var dataLayer = window.dataLayer = window.dataLayer || [];
</script>






<style type="text/css">
#sp_privacy_manager_container {
	z-index: 10000000 !important;
}
</style>

<script> 											
window._sp_ = window._sp_ || {};
window._sp_.config = window._sp_.config || {};

//Replace YOUR_ACCOUNT_ID with the account ID provided
//by Sourcepoint
window._sp_.config.account_id = 146;

// replace 'mms.sp-prod.net' with your CNAME'd messaging subdomain		
window._sp_.config.mms_domain = 'cmp.javaworld.com' ; 
//window._sp_.config.mms_domain = 'mms.sp-prod.net' ; 

// messaging-specific configuration
window._sp_.mms = window._sp_.mms || {};
window._sp_.mms.cmd = window._sp_.mms.cmd || [];

//CMP Flags
window._sp_.config.cmp = _sp_.config.cmp || {};
window._sp_.config.cmp.enabled = true;
window._sp_.config.cmp.waitForConsentData = true;

//Code to call the server and display a message
window._sp_.mms.cmd.push( function () {
    window._sp_.mms.startMsg();
});
</script>

<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/messaging.js"></script>


<script type="text/javascript">(function () { var e = false; var c = window; var t = document; function r() { if (!c.frames["__uspapiLocator"]) { if (t.body) { var a = t.body; var e = t.createElement("iframe"); e.style.cssText = "display:none"; e.name = "__uspapiLocator"; a.appendChild(e) } else { setTimeout(r, 5) } } } r(); function p() { var a = arguments; __uspapi.a = __uspapi.a || []; if (!a.length) { return __uspapi.a } else if (a[0] === "ping") { a[2]({ gdprAppliesGlobally: e, cmpLoaded: false }, true) } else { __uspapi.a.push([].slice.apply(a)) } } function l(t) { var r = typeof t.data === "string"; try { var a = r ? JSON.parse(t.data) : t.data; if (a.__cmpCall) { var n = a.__cmpCall; c.__uspapi(n.command, n.parameter, function (a, e) { var c = { __cmpReturn: { returnValue: a, success: e, callId: n.callId } }; t.source.postMessage(r ? JSON.stringify(c) : c, "*") }) } } catch (a) { } } if (typeof __uspapi !== "function") { c.__uspapi = p; __uspapi.msgHandler = l; c.addEventListener("message", l, false) } })();</script>
<script>
        window._sp_ccpa = {
            config: {
                mmsDomain: "https://cmp.javaworld.com",
                ccpaOrigin: "https://ccpa-service.sp-prod.net",
                accountId: "146",
                getDnsMsgMms: true,
                alwaysDisplayDns: false,
            }
        }
</script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ccpa.js"></script>

<script>
__cmp('getConsentData',null,function(e){
	
	consent.isEU = e.gdprApplies;
	if (!consent.isEU) {
		
		
		consent.personalization=false;
		
		__uspapi('getUSPData', 1, (uspData, success) => {
			if(success) {
				try {
					console.log('uspapi success: ', uspData);
					var uspDataString = uspData.uspString;
					var uspDataArray = [];
					uspDataArray = uspDataString.split("");
					if (typeof uspDataArray[2] !== "undefined" && uspDataArray[2] !== "Y") {
						console.log('User has not opted in to CCPA - run everything');
						consent.personalization=true;
						$(window).trigger("runConsent", [consent.socmedia.queue]);
						$(window).trigger("runConsent", [consent.blueconic.queue]);
					}
		
					$(window).trigger("runConsent", [consent.adsel.queue]);
				}
				catch(e) {
					console.log('error with uspData retrieval: ', e);
				}
				
			} else {
				console.log('uspapi fail: ', uspData);
			}
			
		});	
		
		$(window).trigger("runConsent", [consent.contentsel.queue]);
		$(window).trigger("runConsent", [consent.digitalelement.queue]);
		$(window).trigger("runConsent", [consent.ads.queue]);
		$(window).trigger("runConsent", [consent.infostorage.queue]);
		
	
		dataLayer.push({
			'event': 'consentKnown' 
		});
		bindReshowCmp();
	}
	else if (e.consentData !== null && e.consentData !== "") { // else if.. visitor is from EU and consent is known...
		getConsentInfo();
		bindReshowCmp();
	}
	else { //else consent is not known
	    bindReshowCmp();
	}
});

function getConsentInfo() {
	
	__cmp('getVendorConsents',[],function (e) {
		
		consent.purposes.standard = Object.keys(e.purposeConsents);
		consent.vendors.standard = Object.keys(e.vendorConsents);
		
		consent.personalization = consent.purposes.standard.includes("2");
		
		
		
		
		
		
		
		if (consent.purposes.standard.includes("1")) { // if information storage consent is TRUE run queue
			
			$(window).trigger("runConsent", [consent.infostorage.queue]);
		}
		if (consent.purposes.standard.includes("3")) { // if ad selection consent is TRUE run queue
			
			$(window).trigger("runConsent", [consent.adsel.queue]);
		}
		if (consent.purposes.standard.includes("4")) { // if content selection consent is TRUE run queue
			
			$(window).trigger("runConsent", [consent.contentsel.queue]);
		}
		//special case for blueconic
		if (consent.purposes.standard.includes("1") && consent.purposes.standard.includes("2") && consent.purposes.standard.includes("3") && consent.purposes.standard.includes("4") && consent.purposes.standard.includes("5")) {
			
			$(window).trigger("runConsent", [consent.blueconic.queue]);
		}
		
		//special case for Digital Element
		if (consent.purposes.standard.includes("2") && consent.purposes.standard.includes("3") && consent.purposes.standard.includes("4") && consent.purposes.standard.includes("5")) {
			
			$(window).trigger("runConsent", [consent.digitalelement.queue]);
		}
	});

	__cmp('getCustomVendorConsents',[],function (e) { 
		
		consent.purposes.custom = [];
		e.consentedPurposes.forEach(function(item, index) {
			consent.purposes.custom.push(item.name);
		});
		
		consent.vendors.custom = [];
		e.consentedVendors.forEach(function(item, index) {
			consent.vendors.custom.push(item.name);
		});
		
		
		
		if (consent.purposes.custom.includes("Social Media Consents")) { // if social media consent is TRUE run queue
			
			$(window).trigger("runConsent", [consent.socmedia.queue]);
		}
		
		
		if (consent.vendors.custom.includes("Google Ad Manager")) {
			
			$(window).trigger("runConsent", [consent.ads.queue]);
		}
		
	});
	
	dataLayer.push({
		'event': 'consentKnown' 
	});
}

var idgCMPSourcepointCallback = function(){
	if (consent.isEU) {		
		getConsentInfo();
	}
}

$(window).on("runConsent", function(event, queueToRun) {
		watchConsentQueue(queueToRun)
});

function runQueue(queue){
	for (var x=0;x<queue.length;x++) {
		var nextFn = queue.shift();
		nextFn();
		
	}	
}

function watchConsentQueue(queue){
	setInterval(function() { runQueue(queue); },500);
}
function bindReshowCmp() {
	var url = document.location.pathname;
	if (url.indexOf("/about/member-preferences") > -1) {
		$(document).ready(function() {
			$(".cmpSettings").show();
			$(".reshowLink").on("click", function(e) {
				e.preventDefault();
				window._sp_.privacyManager.loadPrivacyManagerModal(3921, '5cd195e5f9f3332a80a0e25f');
			});
		});
	}
}
</script>




	
	
	
	
		










<script>
// this javascript is for retrieving locale-specific ad units for DFP - see mapping in apollo-locales.js
// getting locale and editions for the site the reader is viewing
let brandAbbrev = "jvw";
let brandConfigBrandId = "8";
//let myLocale = getLocale(); // getting locale on page load from URL, IP, geolocation - this will always be something. If 0, it's the global/default/core view.
let countryCode = "";
let getSlugFromId = getApolloLocaleIdMap();
let getIdFromSlug = getApolloLocaleSlugMap();

// if selectedLocale cookie exists, get locale
if (typeof getSelectedLocale() !== 'undefined'  && getSelectedLocale() === getLocale()) { // get locale from cookie if available otherwise, use another locale source (from geolocation, url slug, etc.)
 	countryCode = getSlugFromId[getSelectedLocale()];
} else {
	countryCode = getSlugFromId[getLocale()];
}
//console.log("+++ 1) in locales.editions.jsp - COUNTRY CODE IS DEFINED AS: "+countryCode+"+++");
// if countryCode is empty string at this point, it means localeId = 0 which is global (default/core)...
if (countryCode == "") {
	countryCode = "us"; // country code for default global is currently US
}
//console.log("====INSIDE locales-editions.jsp - getSelectedLocale() = " + getSelectedLocale() + " and getLocale() = " + getLocale() + " and countryCode = " + countryCode);
//US social media accounts are the default if locale cannot be determined
var twitterUrl = "https://twitter.com/javaworldcom";
var linkedInUrl = "http://www.linkedin.com/company/javaworld-com";
var facebookUrl = "https://www.facebook.com/pages/JavaWorld/107993545895326";
var youTubeUrl = "";
var twitterHandle = "javaworldcom";

if (countryCode === 'asean') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
}
if (countryCode === 'middle-east') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
}
if (countryCode === 'uk') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
}
if (countryCode === 'in') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
	youTubeUrl = "";
}
if (countryCode === 'africa') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
	youTubeUrl = "";
}
if (countryCode === 'au') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
}
if (countryCode === 'nz') {
	twitterUrl = "";
	linkedInUrl = "";
	facebookUrl = "";
	twitterHandle = "";
}

//US business unit is the default if locale cannot be determined
var busUnit = "";
//cookie policy page
var localeEdition = "";
var busUnitAddress = "";
if (countryCode === 'asean') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'middle-east') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'uk') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'in') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'africa') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'au') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
if (countryCode === 'nz') {
	busUnit = "";
	localeEdition = "";
	busUnitAddress = "";
}
</script>

	
	
	
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/init_device.js"></script>
	
	

	

	
		
			















	<script async="async" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/iasPET.1.js"></script>




	<script async="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/183980-91708798337038.js"></script>

	
<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/gpt_includes.js"></script>



<script type="text/javascript">
	if (adLayer==null || adLayer=='undefined') {
		var adLayer=[];
	}
	
		
			adLayer["itemType"]="article";
		
		
	
</script>
	
<script type="text/javascript">
	// Set up ad related variables
	try {
		IDG.GPT.unitName = "/8456/IDG.US_E_JavaWorld.com";
	}
	catch (exception) {
		console.log ("google_dfp can't use IDG.GPT "+ exception);
	}

	try {
		IDG.GPT.unitName = IDG.GPT.unitName + "/" + "core-java_section";
	}
	catch (exception) {
		console.log ("google_dfp can't use IDG.GPT "+ exception);
	}
	// global variables
	var global_ShowSuper = true;
	var global_ShowHero = false;
	
	//XFP global targeting, more targeting thm_pre
	var url = window.location.href;
	if(url.indexOf("?")>1){
		url=url.split('?')[0];
	}
	

	try {
		IDG.GPT.addTarget("URL", encodeURIComponent(url));
	}
	catch (exception) {
		console.log ("google_dfp can't use IDG.GPT "+ exception);
	}
	try {IDG.GPT.addTarget("zone", 'article-blog/core-java');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}
	try{IDG.GPT.addTarget("channel", 'core-java,learn-java,enterprise-java');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}try{IDG.GPT.addTarget("blogId", '428');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}try{IDG.GPT.addTarget("articleId", '2077569');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}try{IDG.GPT.addTarget("type", 'howto');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}try{IDG.GPT.addTarget("typeId", '4');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}try{IDG.GPT.addTarget("templateType", 'article-default');}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}
	
	try {IDG.GPT.addTarget("categoryIds", ['3204','3187','3188','3219']);}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}
	try{IDG.GPT.addTarget("categorySlugs", ['core-java','learn-java','design-patterns','enterprise-java']);}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}
	try {IDG.GPT.addTarget("goldenIds", ['265','250','266']);}	catch (exception) {console.log ("google_dfp can't use IDG.GPT "+ exception);}
	try {
		if (null != IDG.GPT.getQsVal("env")) {		
			IDG.GPT.addTarget("env", IDG.GPT.getQsVal("env").replace(/\W/g, "") );
		}
	}
	catch (exception) {
		console.log ("google_dfp can't use IDG.GPT "+ exception);
	}	
	
		try {
			IDG.GPT.addTarget("author", 'Bala Paranj');
		}
		catch (exception) {
			console.log ("google_dfp can't use IDG.GPT "+ exception);
		}
	
	
	
		

	try {
		IDG.GPT.addTarget("page_type", '');
	}
	catch (exception) {
		console.log ("google_dfp can't use IDG.GPT "+ exception);
	}	

	
		try {
			IDG.GPT.addTarget("blog_name", 'Java Tips');
		}
		catch (exception) {
			console.log ("google_dfp can't use IDG.GPT "+ exception);
		}
	
	
	
	
		try {
			IDG.GPT.addTarget("insiderContent", 'false');
		}
		catch (exception) {
			console.log ("google_dfp can't use IDG.GPT "+ exception);
		}
	
	
	
	
	
</script>



<script type="text/javascript">
	
	
	
	
		
		
		
		
		
		
		
		
	
	
	
	
</script>
  
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/thm_pre.js"></script>


	
	
		<script>
		// IDGMPM-16419 - moved out of adsel queue for IDGMPM-16933
		googletag.cmd.push(function() {
		  if (googletag.pubads().getTargeting('permutive').length == 0) {
			
			//IDGMPM-18418 - capture paermutive key-values
			window.headertag = window.headertag || {};
			window.headertag.cmd = window.headertag.cmd || [];
			window.headertag.cmd.push(function() {
				try {
					var segs = JSON.parse(localStorage._pdfps || '[]').slice(0,250);
					window.headertag.setUserKeyValueData({ segments: {"permutive": segs} });                
				} catch (e) {}
			});
			
		    var kvs = localStorage.getItem('_pdfps');
		    googletag.pubads().setTargeting('permutive', kvs ? JSON.parse(kvs) : []);
		    console.log('ad targeting permutive kvs: ', kvs);
		  }
		});
		</script>
	

<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/gpt_starter.js"></script>
	<script>
		loadGPT();
	</script>

	
		<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ias_gpt_launcher.js"></script>
	

	



		
		
	
	
	
		
				
		
		
		
	

	<link rel="canonical" href="https://www.javaworld.com/javaworld/javatips/jw-javatip68.html">
	
	
		
	

	<meta itemprop="url" content="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html">
	<meta name="description" content="Sometimes it&#39;s necessary to issue requests to objects without
knowing anything about the operation being requested or the
receiver of the request. In procedural languages, this type of
communication is accomplished via a callback: a function that is
registered somewhere to be called at a later point. Commands are
the object-oriented equivalent of callbacks and encapsulate the
callback function. This Java Tip demonstrates how to implement the
Command pattern in Java. (1,070 words)">
	
		
			<meta name="DC.date.issued" content="1999-02-01T00:00-05:00">
			<meta name="date" content="1999-02-01">
			
		
		
		
		
	
	
	<link rel="amphtml" href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.amp.html">
	
		
		
		
			
			
				
			
			
			
		
	
	
		
		
			<meta property="og:title" content="Java Tip 68: Learn how to implement the Command pattern in Java">
		
	
	<meta property="og:description" content="Sometimes it&#39;s necessary to issue requests to objects without
knowing anything about the operation being requested or the
receiver of the request. In procedural languages, this type of
communication is accomplished via a callback: a function that is
registered somewhere to be called at a later point. Commands are
the object-oriented equivalent of callbacks and encapsulate the
callback function. This Java Tip demonstrates how to implement the
Command pattern in Java. (1,070 words)">	
	
	
		
		
			<meta property="og:image" content="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
			<meta itemprop="image" content="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
			<meta itemprop="thumbnailURl" content="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
			<link rel="image_src" href="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
			<meta name="twitter:image" content="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
		
	
	
		
			<meta property="og:type" content="article">
			
			
			
			
			
			
			
			
			
			<meta name="author" content="Bala Paranj">
			
			
			
			
			
		
		 
		
	<meta property="og:site_name" content="JavaWorld">
	<meta property="fb:app_id" content="196366870381968">
	
		
			<meta property="og:url" content="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html">
		
		
	
	
	<!-- Use Twitter Summary Card with Large Image for articles and videos -->
	
		
				<meta name="twitter:card" content="summary_large_image">
		
		
	

	<meta name="twitter:site" content="@javaworldcom">
	<meta name="twitter:description" content="Sometimes it&#39;s necessary to issue requests to objects without
knowing anything about the operation being requested or the
receiver of the request. In procedural languages, this type of
communication is accomplished via a callback: a function that is
registered somewhere to be called at a later point. Commands are
the object-oriented equivalent of callbacks and encapsulate the
callback function. This Java Tip demonstrates how to implement the
Command pattern in Java. (1,070 words)">

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<meta name="rating" content="General">
	
	<meta name="robots" content="NOODP,NOYDIR">
	
	
	
	
		<meta name="msvalidate.01" content="04917178B598F0648B9BAD693FEC29A3">
	
		
	<!-- pagination -->
	
	
	
	
	
	
	
	<link rel="next" href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html?page=2">
	
	
	
	
	
	
	
	
		
			<link id="mobile-size" rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/inline-header-mobile.css"><link id="desktop-size" rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/inline-header.css">
					
		
		
		<script>
			if (window.matchMedia("(min-width: 768px)").matches) {
				document.getElementById('mobile-size').insertAdjacentHTML('afterend', '<link id="desktop-size" rel="stylesheet" href="/www.idge/css/inline-header.css?v=20200219112420" />');
			}
		</script>
		
		
			
			
				
					<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/inline-header(1).css">
				
			
		
	
	
	<!-- css -->
	
		<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/normalize.css">
	
	
		<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/prettify.css">
	
	
		
			
			
			
			
				
					
						
						
							<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/article.css">
						
					
					
					
					
			
				
		
		
		
			<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/insider-promo-styles.css">
		
		<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/print.css" media="print">
		
	
	
		
			
			
				
				
					<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/article(1).css">
				
			
		
	
	
	<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ss-social.css">
	<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ss-standard.css">
	<!--[if lte IE 8]>  
		<link href="/www.idge/css/webfonts/ss-ie8.css" rel="stylesheet" />
	<![endif]--> 
	
	

	
		<link href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/css" rel="stylesheet" type="text/css">
	
		
	
	
	
	
	
	
	<!--  fav and touch icons -->
	<link rel="shortcut icon" type="image/x-icon" href="https://www.javaworld.com/www.idge.jvw/favicon.ico">
	<link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://www.javaworld.com/www.idge.jvw/touchicon_144.gif">
	<link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://www.javaworld.com/www.idge.jvw/touchicon_114.gif">
	<link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://www.javaworld.com/www.idge.jvw/touchicon_72.gif">
	<link rel="apple-touch-icon-precomposed" sizes="57x57" href="https://www.javaworld.com/www.idge.jvw/touchicon_57.gif">
	<link rel="apple-touch-icon" href="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png">
	
	
	
	
	
		
   	    
   	     











<script>
var isProd = 'true';

var ocEnabledSite = "false";

var brandCode = "jvw";
var brandName="JavaWorld";
var brandId = "9";
var regDebugLog=false;

// Marketing Channels Preference
var brandIdDemandgen=false;
var brandIdEvents=false;
var brandIdResearch=false;
var brandIdThirdparty=false;
var isEu=false;

// API URL and API key
var regApiUrl='https://api-stage.idgcommunications.net/api/v1/'; // replaced below with property in .properties file
var apiKey="HLyMXLISSW7HAYGgbx2Vb1Gf1OLcGmMG5BcwZ4Vb";

var tokenPrefix='www';
var tokenSuffix='.com/insider/token?';
var brandDomain=".javaworld.com";
var insiderContentType="article";
var notEmptyArticle=false;
var notEmptyMediaResource=false;
var isInsiderPremium=false;
var isResourceInsiderPremium=false;

var ownerIds=["0c99a1d7-c4e7-42a5-910f-a22134d1f98d"];
var campaignId="2a3b7224-f920-41a1-bea6-615aa59ea0f8";
var assetId="697422d1-7acb-40f6-be13-0e67329bc9ec";
var placementId="2d44d74a-e883-4d18-ada8-b2f0e61a1d90";
var clientCompany="IDG Communications US";
var businessUnit="IDG Communications US";

if (countryCode == 'uk') {
	brandId = "";
	ownerIds=["f3efa90a-2330-4d42-bbc7-f7f96eb0f3db"];
	campaignId="a465ea50-b639-4f98-ad1c-bc0b8c80e3c9";
	assetId="5ab2586f-3bb6-4ad3-84e2-bdd230980e88";
	placementId="77a1e657-f12c-4f7c-b685-6a9da2eb25d6";
	clientCompany="IDG Communications";
	businessUnit="IDG UK";
}
if (countryCode == 'africa') {
	brandId = "";
	ownerIds=["02b2821f-2118-442a-9f16-df416847133f"];
	campaignId="89c3e1d5-f5c6-4934-b683-751414ffe5b7";
	assetId="8848c7a9-7ed0-4119-ba20-e9f06869928c";
	placementId="7d80c555-1916-4c7b-bd56-dd10767d83b8";
	clientCompany="IDG Communications";
	businessUnit="IDG Connect";
}
if (countryCode == "asean") {
		brandId = "";
		ownerIds=["02b2821f-2118-442a-9f16-df416847133f"];
		campaignId="77f2f4c1-c3f3-4796-be52-d44c982bc824";
		assetId="59fdb971-7da7-48a0-bd6d-e52db502b83f";
		placementId="b1f22813-ff0d-42d8-90d9-c1fbd47b3424";
		clientCompany="IDG Communications";
		businessUnit="IDG Connect";
}
if (countryCode == 'mideast' || countryCode == 'middle-east' ) {
		brandId = "";
		ownerIds=["02b2821f-2118-442a-9f16-df416847133f"];
		campaignId="2e8ce243-c3b2-417b-a893-ba4fb496776b";
		assetId="511c10e5-69b7-4a0d-861f-99b048e129f8";
		placementId="59a18947-cead-4faf-8d94-2fd9bba346a4";
		clientCompany="IDG Communications";
		businessUnit="IDG Connect";
}
if (countryCode == 'in') {
		brandId = "";
		ownerIds=["b6973a30-3c15-4667-9165-e206b8876adc"];
		campaignId="cf43ee09-cb17-4704-aec9-3c3faefee27f";
		assetId="f411310d-fa2f-4518-93c9-e08962d736b2";
		placementId="6813ef80-eb35-4d48-94f0-4b64c406ca52";
		clientCompany="IDG Communications";
		businessUnit="IDG India";
}
if (countryCode == 'au') {
	brandId = "";
	ownerIds=["dfcefb71-7919-4a1b-9b77-6a1c05314109"];
	campaignId="371454ac-79e0-4bef-9a02-6ba52dc58e51";
	assetId="fe648fe7-937f-4f7d-8822-2125efbbde26";
	placementId="d6d61fb9-333b-4721-ae7a-3b069224c628";
	clientCompany="IDG Communications";
	businessUnit="IDG Australia";
}
if (countryCode == 'nz') {
	brandId = "";
	ownerIds=["dfcefb71-7919-4a1b-9b77-6a1c05314109"];
	campaignId="371454ac-79e0-4bef-9a02-6ba52dc58e51";
	assetId="fe648fe7-937f-4f7d-8822-2125efbbde26";
	placementId="d6d61fb9-333b-4721-ae7a-3b069224c628";
	clientCompany="IDG Communications";
	businessUnit="IDG New Zealand";
}


	regApiUrl="https://lqxgcyk808.execute-api.us-east-1.amazonaws.com/prod_h2/api/v1/";



	regDebugLog=false;



	tokenPrefix="http://www";



	tokenSuffix="/insider/token";





	notEmptyArticle=true;


	



 

</script>


<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/alc_hashes.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/insider_reg_api.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery.maskedinput-1.4.min.js"></script>

<script>
$(document).ready(function(){
	if(typeof(IDG.insiderReg.readCookie('nsdr')) !== 'undefined'){
		$('#welcome-message').show();			
		IDG.insiderReg.personalize();
	}else{
		$('.signin-register').show();	
	}
});

</script>


	



	
	
	
















	

	
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ad.js"></script>
	
	<script>var oneRegPlacementID = "";</script>
	
	<script>
		const articlePaidAccess = [];
	</script>
	
	
	
		
			
				
			
			
			
			
			
			
			
			

				
			
		
		
		
	
	
		
	
	
	
	
	
	





	
		
	
		
	
	





		
		
		
		
		  
		

	
	
	
	
	

	
	  	 
	    
	    
	 
	 
	
	
	
	
	
	
	
	
		
	
	

	<script>
	var supMontMods = false;
	</script>
	
	
	
	
		
		
		
		
			
				
				
			











	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		<!-- blx4 #2806 blox4.simple  -->
			

		
			
				
					
					
					
						
							
					
						
					
					
					
					
					
					
						
					
				
				
			
		















	
		
		
	


	


		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		
			
				
				
				
					
				
			
			
			
			
		
		
		
	
	
	
	
	
	
	
	

	
	
	
	
	
		<script>
		window.ntvConfig = window.ntvConfig || {} ;
		window.ntvConfig.keyValues = window.ntvConfig.keyValues || {};
		var segs = localStorage.getItem('_pnativo');
		if (segs) {
		  window.ntvConfig.keyValues.permutive = JSON.parse(segs).join(",");
		}
		</script>
	
	
	
	
		<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/load.js" async=""></script>
	

	
	
	
	<script type="text/javascript">
		var prodNames = '';
		var prodManufacturers = '';
		var prodCategories = '';
		var prodVendors = '';
	</script>
	
	
	
	<script>
	var insiderSignedIn = document.cookie.indexOf("nsdr") > -1; //check if Insider cookie exists
	var idg_uuid = $.cookie('idg_uuid') || '';
	
	var dlJobFunction = '';
	var dlJobPosition = '';
	var dlIndustry = '';
	
	if (insiderSignedIn) {
		var insiderToken = IDG.insiderReg.readCookie("nsdr");
		var tokens = IDG.insiderReg.readCookieProperty(insiderToken);
		if (!(tokens['jobPosition']===undefined)) {
			//dlJobPosition = tokens['jobPosition'];
			//OC-1647 change to indicate this data was remove
			dlJobPosition = "removed";
		}
		if (!(tokens['jobFunction']===undefined)) {
			dlJobFunction = tokens['jobFunction'];
		}
		if (!(tokens['industry']===undefined)) {
			dlIndustry = tokens['industry'];
		}
	}
	
	insiderSignedIn = insiderSignedIn.toString(); //per Infotrust this needs to be a string, not a boolean
	
	var sincePublished = '7689 days';
	sincePublished = sincePublished.split(" ")[0];
	
	//get edition from countryCode
	var edition = '';
	if (typeof countryCode !== 'undefined' && countryCode !== "") {//should be defined in locales-editions.jsp if brand has editions
		edition = countryCode.toLowerCase();
	}
	
	dataLayer.push({
		'articleId': '2077569',
		'articleDisplayId':'1',
		'articleHasVideo':'false',
		'articleLocale': 'global',
		'articleTitle': 'Java Tip 68: Learn how to implement the Command pattern in Java',
		'articleType': 'How-To',
		'audience':'enterprise',
		'author':'Bala Paranj',
		'blogName':'Java Tips',
		'brandpost': 'false',
		'categoryIdAll': '3204, 3187, 3188, 3219',
		'categoryIdList':'3204,3187,3188,3219',
		'categoryIdPrimary': '3204',
		'contentStrategy': '',
		'contentType':'howto',
		'datePublished':'2013-12-10',
		'dateUpdated':'2013-12-10',
		'daysSincePublished':"7689",
		'daysSinceUpdated':'7689',
		'de_normalized_company_name':$.cookie('de_normalized_company_name'),
		'displayType':'article',
		'edition':edition,
		'environment':'production',
		'ga_enabled':'true',
		'gaTrackingId':'UA-300704-19',
		'geolocEnabled':'true',
		'goldenTaxonomyIdAll': '265, 250, 266',
		'goldenTaxonomyIdPrimary': '265',
		'goldenTaxonomyIdList': '250,266',
		'industry': dlIndustry,
		'insiderSignedIn':insiderSignedIn,
		'ip_normalized_company_name':$.cookie('ip_normalized_company_name'),
		'isBlog':'true',
		'isInsiderContent':'false',
		'isICN': 'false',
		'jobFunction': dlJobFunction,
		'jobPosition': dlJobPosition,
		'oneRegPlacementID':oneRegPlacementID,
		'pageNumber':'1',
		'platform':'Web',
		'podcastSponsored': 'false',
		'primaryCategory': 'core java',
		'ancestorGoldenCategories': 'java',
		'primaryCategoryAll': 'core java, learn java, design patterns, enterprise java',
		'primaryCategoryList': 'learn java,design patterns,enterprise java',
		'primaryAncestorCategoryList': 'java,core java,careers',
		'prodCategories':prodCategories.slice('|', -1),
		'prodManufacturers':prodManufacturers.slice('|', -1),
		'prodNames':prodNames.slice('|', -1),
		'prodVendors':prodVendors.slice('|', -1),
		'property': 'javaworld',
		'propertyCountry':'US',
		'purchaseIntent':'',
		'skimlinksId':'',
		'source':'javaworld',
		'sponsorName':'',
		'suppressMonetization': supMontMods.toString(),
		'tags': '',
		'userId':idg_uuid,
		'videoAutoplay':'false',
		'youtubeId':''
	});
	</script>

	
	
	










<script>
	var dataLayer = window.dataLayer = window.dataLayer || [];
	var adBlockStatus = 'false';
	
	//look for variable set in ad.js
	if (window.canRunAds === undefined) {
		adBlockStatus = 'true';
	} else {
		adBlockStatus = 'false';
	}
	
	dataLayer.push({
		'adBlockStatus': adBlockStatus
	});
</script>





	<!-- Google Tag Manager -->
	<noscript><iframe src="//www.googletagmanager.com/ns.html?GTM-WR6LD2P"
	height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
	'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','GTM-WR6LD2P');</script>
	<!-- End Google Tag Manager -->

	
	
	
		<script>
			var numberFromDataLayer = function(property) {
			  if (window.dataLayer && dataLayer[0] && typeof dataLayer[0][property] == "number") {
			    return dataLayer[0][property];
			  }
			  return null;
			};
			
			var stringFromDataLayer = function(property) {
			  if (window.dataLayer && dataLayer[0] && typeof dataLayer[0][property] == "string") {
			    return dataLayer[0][property];
			  }
			  return "";
			};
		</script>
	

	

	
		










<script>
// IDGMPM-16419 - updated in IDGMPM-16933
	!function(n,e,o,r,i){if(!e){e=e||{},window.permutive=e,e.q=[],e.config=i||{},e.config.projectId=o,e.config.apiKey=r,e.config.environment=e.config.environment||"production";for(var t=["addon","identify","track","trigger","query","segment","segments","ready","on","once","user","consent"],c=0;c<t.length;c++){var f=t[c];e[f]=function(n){return function(){var o=Array.prototype.slice.call(arguments,0);e.q.push({functionName:n,arguments:o})}}(f)}}}(document,window.permutive,"f5b3be27-f789-4ef1-8867-37c67da5b361","84c7e805-5ce9-41f4-b988-3529488bab1c",{});
	  permutive.addon('web', {
	    page: {
	      type: stringFromDataLayer('displayType'),
	      language: 'en',
	      tags: stringFromDataLayer('tags').split(","),
	      audience: stringFromDataLayer('audience'),
	      description: 'Sometimes it\'s necessary to issue requests to objects without\nknowing anything about the operation being requested or the\nreceiver of the request. In procedural languages, this type of\ncommunication is accomplished via a callback: a function that is\nregistered somewhere to be called at a later point. Commands are\nthe object-oriented equivalent of callbacks and encapsulate the\ncallback function. This Java Tip demonstrates how to implement the\nCommand pattern in Java. (1,070 words)',
	      
	      article: {
	        authors: stringFromDataLayer('author').split(","),
	        description: 'Sometimes it\'s necessary to issue requests to objects without\nknowing anything about the operation being requested or the\nreceiver of the request. In procedural languages, this type of\ncommunication is accomplished via a callback: a function that is\nregistered somewhere to be called at a later point. Commands are\nthe object-oriented equivalent of callbacks and encapsulate the\ncallback function. This Java Tip demonstrates how to implement the\nCommand pattern in Java. (1,070 words)',
	        id: stringFromDataLayer('articleId'),
	        isInsiderContent: (stringFromDataLayer('isInsiderContent') == "true"),
	        modifiedAt: "2013-12-10T15:52:59Z",
	        publishedAt: "2013-12-10T15:52:59Z",
	        source: stringFromDataLayer('source'),
	        title: stringFromDataLayer('articleTitle'),
	        type: stringFromDataLayer('articleType'),
	        purchaseIntent: stringFromDataLayer('purchaseIntent')
	      },
	      
 		  	      
	      gTax: {
	        primaryIds: [265,264],
	        secondaryIds: [250,266,264,265,585]
	      },	      
	      tax: {
	    	  primaryCategories: stringFromDataLayer('ancestorGoldenCategories').length > 0 ? stringFromDataLayer('ancestorGoldenCategories').split(",").concat(stringFromDataLayer('primaryCategory')) : [stringFromDataLayer('primaryCategory')] ,
	          secondaryCategories: stringFromDataLayer('primaryAncestorCategoryList').length > 0 ? stringFromDataLayer('primaryCategoryList').split(",").concat(stringFromDataLayer('primaryAncestorCategoryList').split(",")) : stringFromDataLayer('primaryCategoryList').split(",")
	      },
	      
	      ads: {
	        adblocker: (adBlockStatus == "true"), //detected further up the page
	        enabled: true
	      }	     
	    }
	  });

	  dlJobPosition = dlJobPosition || null;
	  dlIndustry = dlIndustry || null;

	  if (dlJobPosition !== '' || dlIndustry !== '' || stringFromDataLayer('userId') !== '') {
		  if (stringFromDataLayer('userId') !== '') {
				var userData = {};

				var hermesAttrs = {
					"companySize" : "543ea0bd-604a-4011-99e7-806fc8979b5e",
					"country" : "ea76d652-29bd-4a6c-ae50-a5d08ea28c5e",
				};
				var userKeys = Object.keys(hermesAttrs);

				$.ajax({
					type: "get",
				    crossDomain: true,
					url: "https://lqxgcyk808.execute-api.us-east-1.amazonaws.com/prod_h2/api/v1/profiles/" + idg_uuid,
					dataType: "json",
					data: {}, 
					headers : {
						"Content-Type": "application/x-www-form-urlencoded",
						"x-api-key":"HLyMXLISSW7HAYGgbx2Vb1Gf1OLcGmMG5BcwZ4Vb"
					}
				}).done(function(responseData){ 
					userKeys.forEach(function(key) {
						if (typeof(responseData.attrs[hermesAttrs[key]].option_label) !== "undefined") { 
							userData[key] = responseData.attrs[hermesAttrs[key]].option_label;
						}
						else { 
							userData[key] = responseData.attrs[hermesAttrs[key]].value;
						}
					});

					window.permutive.track('User', {
					  companySize: userData['companySize'],
					  country: userData['country'],
					  id: (stringFromDataLayer('userId') !== "" ? stringFromDataLayer('userId') : null),
					  jobIndustry: (dlIndustry !== "" ? dlIndustry : null),
					  jobPosition: (dlJobPosition !== "" ? dlJobPosition : null),
					  loggedIn: (stringFromDataLayer('insiderSignedIn') == 'true')
					})
					
					
				}).fail(function(data){
					//console.log("Error retrieving data: " + data.responseJSON.error);
				});  

			}
			else {
				window.permutive.track('User', {
				  companySize: null,
				  country: null,
				  id: (stringFromDataLayer('userId') !== "" ? stringFromDataLayer('userId') : null),
				  jobIndustry: (dlIndustry !== "" ? dlIndustry : null),
				  jobPosition: (dlJobPosition !== "" ? dlJobPosition : null),
				  loggedIn: (stringFromDataLayer('insiderSignedIn') == 'true')
				});
			}
	  }
	
	  //product js vars defined in document-head	  
	  if (prodNames !== '' || prodManufacturers !== '' || prodCategories !== '' || prodVendors !== '') {
		  window.permutive.track('Product', {
			  names: stringFromDataLayer('prodNames').split("|"),
			  categories: stringFromDataLayer('prodCategories').split("|"),
			  manufacturers: stringFromDataLayer('prodManufacturers').split("|"),
			  vendors: stringFromDataLayer('prodVendors').split("|")
		});

	  }
		 

</script>

<script>
	$.ajax({
		url: "https://cdn.permutive.com/f5b3be27-f789-4ef1-8867-37c67da5b361-web.js",
	  	dataType: "script",
	  	cache: true, // default is false
	  	async: true // default is true
	});
</script>
	
	
	
	
	

	

	
	
	
<script>(function () { var cookie='consentUUID=28ee5bc4-f461-4e6b-a0b2-2913675d72e3; Path=/; Max-Age=31536000; expires=Fri, 19 Feb 2021 14:15:51 GMT;';
if (true) {
  var h = window.location && window.location.hostname;
  if (h) {
    var rc = (/.co.uk$/.test(h) || /.com.br$/.test(h) || /.com.au$/.test(h) || /.co.nz$/.test(h) ) ? 3 : 2;
    var ha = h.split('.');
    var rda = ha.slice(ha.length - rc);
    if (rda.length > 1) {
      var rd = rda.join('.');
      cookie += ' Domain=' + rd + ';';
    }
  }
}
document.cookie = cookie;
 })();</script><script>(function () { var cookie='euconsent=BOsVqGZOsVqGZAGABBENC1-AAAAtF7_______9______9uz_Ov_v_f__33e8__9v_l_7_-___u_-33d4-_1vf99yfm1-7ftr3tp_87ues2_Xur__79__3z3_9pxP78k89r7337Mw_v-_v-b7JCON-A; Path=/; Max-Age=31536000; expires=Fri, 19 Feb 2021 14:15:51 GMT;';
if (true) {
  var h = window.location && window.location.hostname;
  if (h) {
    var rc = (/.co.uk$/.test(h) || /.com.br$/.test(h) || /.com.au$/.test(h) || /.co.nz$/.test(h) ) ? 3 : 2;
    var ha = h.split('.');
    var rda = ha.slice(ha.length - rc);
    if (rda.length > 1) {
      var rd = rda.join('.');
      cookie += ' Domain=' + rd + ';';
    }
  }
}
document.cookie = cookie;
 })();</script><script>(function () { window.__cmp && typeof window.__cmp.hasConsentData === "function" && window.__cmp.hasConsentData(); })();</script><script>(function () { var d = new Date(); d.setTime(d.getTime()+90*24*60*60*1000); var cookieVal = '_sp_enable_dfp_personalized_ads=true; Path=/; Max-Age=7776000; expires='+d.toGMTString()+';'; var h = window.location && window.location.hostname; if (h) { var rc = (/\.co\.uk$/.test(h) || /\.com\.br$/.test(h)) ? 3 : 2; var ha = h.split('.'); var rda = ha.slice(ha.length - rc); if (rda.length > 1) { var rd = rda.join('.'); cookieVal += ' Domain=' + rd + ';'; } } document.cookie = cookieVal; })();</script><script>(function () { if(typeof idgCMPSourcepointCallback !== 'undefined'){
    idgCMPSourcepointCallback('google_ad_manager_vd',true)
  } })();</script><script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/aahe3QibXRBbmx7Znpwe2xmcXpGfUQ4LWhqanZ8dXtmcGtEODs9LWhpd0RtaHN6bC15bG1seXlseURve3t3eiw6SCw5TSw5TX5-fjVxaH1ofnZ5c2s1anZ0LDlNaHl7cGpzbCw5TTo7Ojk4OTwsOU1-b2h7NHB6NGxxaTR7b2w0bH12c3x7cHZ1NHZtNGx1e2x5d3lwemw0cWh9aGlsaHV6NW97dHMtemx6enB2dWZ5bG1seXlseURve3t3eiw6"></script></head>



	<body id="article2077569" class="article blog428 javaworld insider-plus" style="">
		
			
			
					
					
						
						
					





















	

		
			
			
				<!-- Begin welcome ad overlay - gpt-overlay position  -->
				
					<div id="superadunit" class="hidden">
						<div class="ad">
							<div class="ad-header">
								<div class="brand-logo"></div>
								<a href="javascript:unhide(&#39;superadunit&#39;);" id="superstitial-text" automate_uuid="100ccee4-6ea2-4bce-86e5-cad89c450222">Close Ad</a>
							</div>
							<div id="gpt-overlay" class=" ad-container">
								<script type="text/javascript">
								consent.ads.queue.push(function(){
									
										IDG.GPT.addDisplayedAd("gpt-overlay", "true");
										IDG.GPT.displayGoogleTagSlot('gpt-overlay');
									
								});
								</script>
							</div>
						</div>
					</div>
				
				
				<!--  End welcome ad overlay - gpt-overlay position -->
				
			
			
			
			
			
			
		
	
 	
 
 
				
			
		
		











	
	
		
		
		
		<!-- BEGIN PAGE HEADER -->
		<header id="banner">
			
			
			
			
			
			
			
		    
		    
		    
		    	
		    	<script>
		    	if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
					$('.main-header').insertBefore($('#banner .ad'));
		    	}
				</script>
				
				
				<div class="topics-wrap">
				    <section class="topics">
				        <nav id="scrollable">
					        
								
									
									
										
									
								











	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		<!-- blx4 #670 blox4.raw_link_list  -->
			

		
			
				
					
					
					
						
							
					
						
					
					
					
					
					
					
						
					
				
				
			
		













	
		
		
			
		
	
	
	
	<ul>
		
		<li class="header">Trending<span class="colon">:</span></li>
		
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/category/java-app-dev/" automate_uuid="c38ffc14-e802-48d1-8cab-5c07c1f21a2f"> Java News &amp; Reviews</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/blog/what-is-java/" automate_uuid="21e68b9a-0555-4120-81fd-31a26d910db3">What is: Java</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/blog/java-101/" automate_uuid="01ae28b5-6ffd-4f75-b748-b15c6b278fd6">Java 101: Learn Java</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/blog/java-challengers/" automate_uuid="a2337655-d15a-4035-9398-f87c7bd41c7e">Java Challengers</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/blog/open-source-java-projects/" automate_uuid="7e35a043-0268-4b5b-8575-9ec296090f03">Open Source Java Tutorials</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/category/android/" automate_uuid="e1995ac5-15d0-4d41-8b80-87181286009a">Android</a></li>
			
		
			
				<li><a class="edition-link-url" href="https://www.javaworld.com/category/careers/" automate_uuid="2e22ff6c-3f4b-43d9-840c-9bdcb65435eb">Programming Careers</a></li>
			
		
	</ul>

	


							
						</nav>
				        
				        <div class="fading-gradient"></div>
				        
				        
				           
					        
					        <nav class="tools">
					        	<ul class="user">
				                     
				                     	<li class="search-icon"><a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#search" id="search-btn" automate_uuid="3bd0b6e2-9d3c-47d4-b363-eb644a3a20ff"><i class="ss-icon">Search</i></a></li>
				                     
				                 </ul>
				                 <ul class="social">
									














				                 </ul>
				             </nav>
				             
			             
				    </section>
			    </div>
			    
			    
		        	 <div id="sticky-anchor"></div>
		        
			    <section id="sticky-head" class="main no-stick-important">
			        <div class="wrapper">
			            <div class="masthead">
			                
			                <button><i class="ss-icon ss-rows"></i></button>
			                
			                <a href="https://www.javaworld.com/" automate_uuid="99be437b-d726-4a2d-b14e-db1fdceeeede"><span class="ir logo">javaworld</span></a>
			            	<!--
			            	<img class="print-only" src="/www.idge.jvw/images/javaworld-logo-print.png">
			            	-->
			            	
			            	<img class="print-only" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/javaworld-logo-print.png">
			            	
			            </div>
			            <div id="reading-tools-wrapper">
		
			                
			                <nav class="tools">
			                    
			                    <ul class="user">
			                    	
			                    	
			                    	
			                    	
			                        
			                    </ul>
			                </nav>
			            </div>
			            
			            
			            	<div class="insider-signin">
			            	
			            		<span class="signin-register" style="display: inline;">
			            			<a href="https://www.javaworld.com/about/learn-about-insider.html" automate_uuid="4bdba535-4080-41b6-b79a-08fa7fb60e0a"><span class="insider"></span></a> <a href="javascript://" onclick="IDG.insiderReg.registerLinkEvent(&#39;insider-reg-signin&#39;)" class="js-open-modal signin" data-modal-id="insider-popup" automate_uuid="eb85d480-ccd3-4c93-89af-710f59c3fb56">Sign In</a> <span class="divider">|</span> <a href="javascript://" onclick="IDG.insiderReg.registerLinkEvent(&#39;insider-reg-form-short&#39;)" class="js-open-modal register" data-modal-id="insider-popup" automate_uuid="41276902-1d56-45eb-a94c-744d8083ef42">Register</a>
			            		</span>
			            	
			            		<div id="welcome-message" class="insider-list" style="display: none;">
				                    <div id="insider-selector">
				                        <div id="insider-welcome" class="label"></div>
				                        
				                        <div class="stories">
				                        	
				                        	<div class="personalization">Hi<span id="person-first-name"></span>! Here are the latest Insider stories.</div>
				                        	
				                        	











	
	
	
	
	
	
	
	
	
	
































































	<ul>
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
							
						
						
						
					











<li><a href="https://www.javaworld.com/article/3526447/typescript-vs-javascript-understand-the-differences.html" automate_uuid="28ccb0d2-0220-4cc5-b363-9848296cae55">TypeScript vs. JavaScript: Understand the differences</a></li>
				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
							
						
						
						
					











<li><a href="https://www.javaworld.com/article/3527209/a-brief-history-of-artificial-intelligence.html" automate_uuid="b09e1dff-46f5-436a-9bad-14e712ac4edb">A brief history of artificial intelligence</a></li>
				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
							
						
						
						
					











<li><a href="https://www.javaworld.com/article/3520969/how-to-bring-security-into-agile-development-and-cicd.html" automate_uuid="9882427f-7938-4b38-aba6-74829b90a679">How to bring security into agile development and CI/CD</a></li>
				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
							
						
						
						
					











<li><a href="https://www.javaworld.com/article/3519930/how-to-query-and-extract-data-from-saas-applications.html" automate_uuid="0676eb3c-11d2-47b7-bee7-2e9ef8446602">How to query and extract data from SaaS applications</a></li>
				
				
			
		
	</ul>




											
											<div class="sign-out-link">
												<a class="more-insider" href="https://www.javaworld.com/insider/" automate_uuid="a129e23e-5db5-400a-8774-013fc48dc36a">More Insider</a>
												<a class="sign-out" href="javascript://" onclick="IDG.insiderReg.logout()" automate_uuid="f9e96d61-fb5b-4607-bfd9-7def9493b0ce">Sign Out</a>
											</div>
										</div>
										
				                    </div>
				                </div>
				         
			            	</div>
			            	<script>
			            		$('.signin-register').hide();	
			            		$('#welcome-message').hide();
			            	</script>
			            	
			            
			            
			        </div>
			    </section>
			    <section class="tools-expand  ">
			        
			        
			        
			        
			        	
			        	
			        		
					        <form class="search" id="search-form" action="https://www.javaworld.com/search">
					            <label for="search-box">Search for</label>
								<input type="text" name="query" id="banner-search-term" value="" class="searchbox-input-class ui-autocomplete-input" autocomplete="off"><span role="status" aria-live="polite" class="ui-helper-hidden-accessible"></span>
					            <input type="submit" id="banner-search-submit" value="Go">
					            <input type="hidden" name="contentType" value="article,resource">
					            <div class="search-suggest">Suggestions for you</div>
					        </form>
					    
					
			        <div class="user">
			            <form>
			                <label for="login-email">Insider email</label> <input id="login-email" type="text">
			            </form>
			        </div>
			        
			    <ul class="ui-autocomplete ui-menu ui-widget ui-widget-content ui-corner-all" id="ui-id-1" tabindex="0" style="z-index: 1; display: none;"></ul></section>
			    
			    
			    
				
				
		    		<div id="sticky-anchor-nav"></div>
		    	
		    	
			    <nav id="sticky-nav" class="main no-stick" style="height: 1000px; top: 109px;">
			    	<ul class="topnav">
						
						
							
			        		<li>
			        		
			        			
			        				<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#" class="hasChildren notMobile" automate_uuid="0bfefa3d-49cc-4e99-881a-952263d13baf">Core Java<span class="ss-icon ss-navigatedown"></span></a>
			            		
			            		
			            	
			            		
			            		
				            		<ul class="subnav">
				                		<li><a href="https://www.javaworld.com/category/core-java/" automate_uuid="198e5119-015b-4b9c-995d-b8829db9acf4">All Core Java</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/agile-development/" automate_uuid="30abfeb7-0323-405e-8928-7c3c5a0ebf6d">Agile Development</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/careers/" automate_uuid="df462ae2-e26b-4c5e-a8b8-06bca374b58b">Careers</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/java-concurrency/" automate_uuid="aab4de7d-590a-42a8-8f1a-5ddf60fa3654">Concurrency</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/java/" automate_uuid="f19620cb-89f3-401d-9917-4e76fcc5c65f">Java</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/java-platform/" automate_uuid="fac24216-8700-4afa-8ab0-30ab5b2ad150">Java Platform</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/security/" automate_uuid="7d42384a-42de-4d89-ba9b-0521faf69f70">Security</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/application-testing/" automate_uuid="00ef0ea5-5dca-438e-9445-1d3e83f3365d">Software Testing</a></li>
				            			
				            		</ul>
				            	
			        		</li>
						
						
							
			        		<li>
			        		
			        			
			        				<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#" class="hasChildren notMobile" automate_uuid="6c619e91-c6fd-4d3b-bc1b-e1b47acb79ba">Enterprise Java<span class="ss-icon ss-navigatedown"></span></a>
			            		
			            		
			            	
			            		
			            		
				            		<ul class="subnav">
				                		<li><a href="https://www.javaworld.com/category/enterprise-java/" automate_uuid="46838ab0-f946-4b14-8542-79594d2dc533">All Enterprise Java</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/apis/" automate_uuid="7e7c1904-e662-451b-b42a-2bfb19733c87">APIs</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/analytics/" automate_uuid="80783e43-2d29-4abf-8959-dbc2c2d35981">Analytics</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/big-data/" automate_uuid="775f8cad-8454-41f6-882b-89b0dd3bdcd6">Big Data</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/cloud-computing/" automate_uuid="bb5352fb-f862-42e6-aae8-28c838b0b4fc">Cloud Computing</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/development-tools/" automate_uuid="ac5fc766-3015-4e00-8525-1d225874bd3a">Development Tools</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/open-source-tools/" automate_uuid="38e62bc3-3b78-445a-8928-329b00fe11d5">Open Source</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/scripting-jvm-languages/" automate_uuid="b64aed64-db58-4bb1-be2c-205ec5f234b7">Scripting and JVM Languages</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/application-development/" automate_uuid="48372418-ac7a-4ca2-b29c-e01a73e92b5c">Software Development</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/web-development/" automate_uuid="015ca95b-503a-4d56-b2f5-0dd957efc9c6">Web Development</a></li>
				            			
				            		</ul>
				            	
			        		</li>
						
						
							
			        		<li>
			        		
			        			
			        				<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#" class="hasChildren notMobile" automate_uuid="c50aee59-43bf-4d02-bb9c-c10bb3616304">Learn Java<span class="ss-icon ss-navigatedown"></span></a>
			            		
			            		
			            	
			            		
			            		
				            		<ul class="subnav">
				                		<li><a href="https://www.javaworld.com/category/learn-java/" automate_uuid="c052bcf4-9857-4cb6-ab35-4d0461e9f61e">All Learn Java</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/design-patterns/" automate_uuid="cab78c80-55d1-4fab-b527-bf90845aca89">Design Patterns</a></li>
				            			
				            		</ul>
				            	
			        		</li>
						
						
							
			        		<li>
			        		
			        			
			        				<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#" class="hasChildren notMobile" automate_uuid="60c7e259-2070-451c-a711-b844b97b9e1d">Mobile Java<span class="ss-icon ss-navigatedown"></span></a>
			            		
			            		
			            	
			            		
			            		
				            		<ul class="subnav">
				                		<li><a href="https://www.javaworld.com/category/mobile-java/" automate_uuid="3eda2ee5-c6cd-4db8-8ebb-8e5c0e1b1ef8">All Mobile Java</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/android/" automate_uuid="0d4e8368-c164-48b1-af25-4780501ed278">Android</a></li>
				            			
				            			
				            				<li><a href="https://www.javaworld.com/category/ios/" automate_uuid="e9ba9e37-5917-46f8-9fa7-23f59866e8ce">iOS</a></li>
				            			
				            		</ul>
				            	
			        		</li>
						
					</ul>
					
			    		<ul class="secondary topnav">
		           			
		           			










<li><a href="https://www.javaworld.com/news/" automate_uuid="7428baa7-f53d-4b30-8f0b-da567fff5b06">News</a></li>
<li><a href="https://www.javaworld.com/feature/" automate_uuid="5581c57f-0e5a-4b18-af7c-ff1df7d207f7">Features</a></li>
<li><a href="https://www.javaworld.com/howto/" automate_uuid="2a20602e-a1b8-4fc6-bcd9-08fe5be138b6">How-Tos</a></li>
<li><a href="https://www.javaworld.com/blogs/" automate_uuid="a3558f24-843b-451a-8fd5-ab4483560182">Blogs</a></li>
<li><a href="https://www.javaworld.com/resources/" automate_uuid="c165e97d-f3e2-4d6f-a9d7-9952b951f599">Resources/White Papers</a></li>
<li><a href="https://www.javaworld.com/newsletters/signup.html" automate_uuid="099cb87a-4d14-4a0e-b111-bc99e9540d2c">Newsletters</a></li>
		           			
			    		</ul>
			    	
				</nav>
				
			
			
			
			
			

			
			
				<script>
		    	if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
					$('div.insider-signin').prependTo('section.topics nav.tools');
		    	}
				</script>
			
		    
				<script>
				$(document).ready(function(){
					if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
						$("nav ul li a.hasChildren").attr("href", "#").addClass('notMobile');
						$('nav#sticky-nav ul.secondary').addClass('topnav');
					}
					if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
						$("nav#sticky-nav > ul").switchClass("topnav", "primary");
					}
				});
				</script>
			
			
				
		    	<script>
		    	if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
					$('#sticky-anchor, section.main, section.topics, section.tools-expand, #sticky-anchor-nav, nav.main').insertBefore($('#banner .ad'));
					$(document).ready(function(){
						$('#banner section.tools-expand').addClass('top-margin');
					});
		    	}
				</script>
				
			
			
			
		</header>
		
		
		
		<script>
		$(document).ready(function(){
			$('body').addClass('insider-plus');
			
			var headerHeight = $('header#banner').height(); // height for desktop on load not fixed
			$('header#banner nav#sticky-nav.main.no-stick').css("top", headerHeight);
			
			if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){	
				var stickyHeaderHeight = $('section.topics').height() + $('#sticky-head.main').height();
				stickyHeaderHeight = stickyHeaderHeight - 8;
			}
			
			// Listen for orientation changes - mobile devices have a problem resizing fixed position elements on
			// orientation change from portrait to landscape so scrolling to current position of header
			var supportsOrientationChange = "onorientationchange" in window,
		    orientationEvent = supportsOrientationChange ? "orientationchange" : "resize";
			
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
				window.addEventListener(orientationEvent, function() {
					var top = $('section#sticky-head.main').offset().top;
					if (top < 170) {
						top = 0; // so we don't miss the top leaderboard or ticker on change
					} else {
						top = top - 50; //acknowledging "shorter" top on landscape than portrait
					}
					if (window.orientation == 90 || window.orientation == -90) {
						window.scrollTo(0, top);
					}
				}, false);
			}
			
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet) && $thm.deviceHeight() < 768 ) {
				if($('html').hasClass('touch')) {
					$('#insider-popup.modal-box .modal-body').addClass('short');
				} else {
					$('#insider-popup.modal-box .modal-body').addClass('short-desk');
				}
			}
			
			if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
				window.addEventListener(orientationEvent, function() {
					var top = $('section#sticky-head.main').offset().top;
					if (top < 50) {  // top is fixed on mobile so this is when user is at very top
						top = 5; // scroll 5 pixels from 0 to resize fixed header from portrait
					} else {
						top = top - 40;
					}
					if (window.orientation == 90 || window.orientation == -90) {
						window.scrollTo(0, top);
					}
				}, false);
			}
			
			//nexus 7 is sized mobile in portrait and tablet in landscape
			var ua = navigator.userAgent.toLowerCase();
			var isAndroid = ua.indexOf("android") > -1;
			window.addEventListener(orientationEvent, function() {
			    if(isAndroid && (screen.width == 600 || screen.width == 960)) {
			    	location.reload(true); // refreshing page for changes to header
			    }
			}, false);
			
			if ($thm.deviceWidthAtLeast($thm.deviceBreakpoints.desktop) && !$('html').hasClass('touch')){
				$("ul.social li.more-social").mouseenter(function() {
					$('ul.social > li').addClass('display-icon');
				});
				$("ul.social").mouseleave(function() {
					$('ul.social > li').removeClass('display-icon');
				});
			};
			
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet) && $('html').hasClass('touch')){
				$("ul.social li.more-social").click(function() {
					$('ul.social > li').toggleClass('display-icon');
				});
			};
			
			$('.searchbox-input-class').each(function(){
			    $(this).change(function(){
			    	var qStr=$(this).val();
			    	if($(this).val().indexOf('@')!=-1){
			    		qStr=qStr.replace(/@/g,' ');
			    		$(this).val(qStr);
			    	}
			    });
			});
			
		});
		
		function sticky_relocate() {
			var headerHeight = $('header#banner').height(); // height for desktop	
			//$('header#banner nav#sticky-nav.main').css("top", headerHeight);
			
			var winHeight = $(window).height();
			// desktop
			if ( $thm.deviceWidthAtLeast($thm.deviceBreakpoints.wide ) ){
				winHeight = winHeight - 40;
				if (window.orientation == 90 || window.orientation == -90) {
					winHeight = winHeight + 50; // landscape tablet 1024
				}
			}// tablet
			else if ( $thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet) && !$thm.deviceWidthAtLeast($thm.deviceBreakpoints.wide) ) {
				winHeight = winHeight + 40;
			} else { // mobile
				winHeight = winHeight + 10;
			}
			
			$('#banner nav#sticky-nav.main').css("height", winHeight); // flyout nav height
		
			// tablet and desktop
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
			    var window_top = $(window).scrollTop();
			    var div_top = $('#sticky-anchor').offset().top;
			    if (window_top > div_top) {
			        $('#sticky-head').addClass('stick');
			        $('#page-wrapper').addClass('top-pad');
			        $('#banner .ad').addClass('top-margin');
			    } else {
			        $('#sticky-head').removeClass('stick');
			        $('#page-wrapper').removeClass('top-pad');
			        $('#banner .ad').removeClass('top-margin');
			    }
			}
			// mobile
			if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
				$('section.topics').addClass('stick-topics');
				$('#sticky-head').addClass('stick-head');
				$('#page-wrapper').addClass('top-pad');
				$('#banner .ad').addClass('top-margin');
				$('#banner section.tools-expand').addClass('search');
				  
				var window_top = $(window).scrollTop();
				var div_top = $('#sticky-anchor').offset().top + 30;
			    if (window_top > div_top) {
			    	$('#sticky-head').addClass('stick');
			    	$('.topics.stick-topics, #search-form').addClass('remove');
			    	$('li.search-icon').fadeOut("fast");
			    } else {
			    	$('#sticky-head').removeClass('stick');
			    	$('.topics.stick-topics, #search-form').removeClass('remove');
			    	$('li.search-icon').fadeIn("fast");
			    }
			}// end mobile
		    
			// tablet and desktop flyout nav
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
			    if ($('#sticky-head').hasClass('stick')) {
			    	var stickyHeaderHeight = $('section.main').height(); // height of the fixed header for tablet and desktop
			    	stickyHeaderHeight = 52; // setting fixed height - same across all sites
					$('header#banner nav#sticky-nav.main').css("top", stickyHeaderHeight);
			        $('#sticky-nav').addClass('stick');
			        $('#sticky-nav').removeClass('no-stick');
			    } else {
			    	stickyHeaderHeight = $('header#banner').height();
			    	$('header#banner nav#sticky-nav.main').css("top", stickyHeaderHeight);
			        $('#sticky-nav').removeClass('stick');
			        $('#sticky-nav').addClass('no-stick');
			    }
			    
			}// end tablet/desktop
			
			
			// mobile flyout nav
			if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
			    	
		    	var stickyHeaderHeight = $('section.topics').height() + $('#sticky-head.main.stick-head').height(); // height of the fixed header for mobile
		    	stickyHeaderHeight = stickyHeaderHeight - 8;  // 8 seems appropriate
		    	$('header#banner nav#sticky-nav.main').css("top", stickyHeaderHeight);
		        $('#sticky-nav').addClass('stick');
		
		        if ($('#sticky-head').hasClass('stick')) {
		        	$('#sticky-head.stick').siblings('#sticky-nav').addClass('nav-stick');
		        	$('#sticky-head').siblings('#sticky-nav').removeClass('no-stick');
		        } else {
		        	$('#sticky-head').siblings('#sticky-nav').removeClass('nav-stick');
		        	$('#sticky-head').siblings('#sticky-nav').addClass('no-stick');
		        }
		
			}// end mobile
			
		    
		} // end sticky_relocate
		
		
		
		
		$(function () {
		    $(window).scroll(sticky_relocate);
		    sticky_relocate();
		});
		</script>
		
		




	<div id="insider-popup" class="modal-box " style="top: 10px; left: 0px;">
	
		<div class="insider-modal-wrapper">
	  
			<div class="modal-header-title">
				<div class="modal-banner-insider"><span class="insider"></span></div>
		    	<div class="modal-close close">×</div>
		  	</div>
		  	
		  	<div class="modal-body">
		  		
		  			
						<script>
$(document).ready(function(){
	$('a[data-link]').click(function() {
		
		  //get this link's dataLink value
		  var dataLink = $(this).attr('data-link');

		  //select the div with the same value
		  var toKeep = 'div[data-link="'+dataLink+'"]';
	
		  //select data-link divs that are not the above div
		  $('div[data-link]').not(toKeep).hide();
		  
		  if($(this).hasClass('link-transition')){
			  $(toKeep).fadeIn(800);
		  } else {
			  $(toKeep).show();
		  }
	
		  //prevent location change
		  return false;
	});
	

});
</script>

					
					
				
		  	</div>
		  	
		  	<div class="modal-footer">
		    	<div class="modal-close close-btn">Close</div>
		  	</div>
		</div>
	  	
	</div>

	<script>
		$(document).ready(function(){

			var appendthis =  ("<div class='modal-overlay modal-close'></div>");
			if($thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
				$('.modal-box').css({
					//top: ($(window).height() - $(".modal-box").outerHeight()) / 2,
					top: 10,
					left: 0
				});
			}
			
			
			if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
				$('.modal-box').height($(document).height());
				$('.modal-box').css('top','0');
			}
			
			var userAg = navigator.userAgent;

			$('a[data-modal-id]').click(function(e) {
				e.preventDefault();
				$('body').append(appendthis);
				$('.modal-overlay').fadeTo(500, 0.9);
				$('.modal-overlay').height($(document).height());
				var modalBox = $(this).attr('data-modal-id');
				
				if ($(".modal-box").hasClass('triggered') || (userAg.indexOf("Firefox")!=-1)) {
					$('#'+modalBox).fadeIn($(this).data()); // triggered by something other than onclick of link such as scroll to point in window
				} else {
					// IDGMPM-16177
					//if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
						$('#'+modalBox).toggle('slide', {direction: 'up'}, 800);
					//} else {
				   // 	$('#'+modalBox).toggle('slide', {direction: 'left'}, 600);
					//}
				}

				if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
					$("html, body").animate({
			            scrollTop: 0
			        }, 700);
			        
			        
			        $('a.btn.continue-on').click(function() {
			        	$('html, body').animate({
			        		scrollTop: 0
			        	}, 500);
			        });
			        
			        return false;
			        
				}
				if (navigator.userAgent.match(/(iPad)/)) {
					$("html, body").animate({
			            scrollTop: 0
			        }, 500);
				}
			});
		  
		  
			$(".modal-close, .modal-overlay").click(function() {
				$('.select2-drop').css('display','none');
				$(".modal-overlay").fadeOut(500, function() {
					$(".modal-overlay").remove();
				});
				if ($(".modal-box").hasClass('triggered') || (userAg.indexOf("Firefox")!=-1)) {
					$(".modal-box").fadeOut(500);
				} else {
					// IDGMPM-16177
					//if(!$thm.deviceWidthAtLeast($thm.deviceBreakpoints.tablet)){
						$('.modal-box').toggle('slide', {direction: 'up'}, 800);
					//} else {
					//	$('.modal-box').toggle('slide', {direction: 'left'}, 600);
					//}
				}
				// remove the stylesheet added in header.jsp
				setTimeout(function(){
					$("link.oc-modal").remove();
				}, 1000);
			});
		
		});
	</script>

		
		
		
		
		
		<!-- END PAGE HEADER -->




		
		













<div id="page-wrapper" class="page-wrapper">
	
	













<div id="skinAdTarget"></div>


			
		











	
	
	
	
	
	
	
	
	
	
	
	
	
	
	





	
	
 	


	
	<section role="main">
	
		
		
		

		<article itemscope="" itemtype="http://schema.org/BlogPosting" class="blog">

		















<!-- Events Header -->

 
 
	
		
		
		
		
		
					    			
		
	
	
	
	
	

 
 
 
 
  
  
 
 












	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


<!-- //end Events Header -->


	
	
	
	
	
	
		
	



	
		
	
	
		


































<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/date-time-moments.js"></script>


	
	
		<script>
		// non-edition sites
		$(document).ready(function() {
			var fullDate = "1999-02-01T00:00-0800";
			var dateFormat = "MMM D, YYYY h:mm a z";
			timeDate = moment(fullDate).tz('America/Los_Angeles').format(dateFormat); // 12 hour format
			document.querySelector(".format-date").textContent = timeDate;
		});
		</script>
	

































<header class="cat">

	
	
	
	
	
	
	
	
	<nav class="breadcrumbs horiz">
		<ul itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb">
			<li><a class="edition-link-url" href="https://www.javaworld.com/" itemprop="url" automate_uuid="1012d732-ea8f-43ba-b8d6-628c994cd3bf"><span itemprop="title">Home</span></a></li>
			
				
				
					<li><a class="edition-link-url primary-cat-url" href="https://www.javaworld.com/category/java/" itemprop="url" automate_uuid="4a8eb293-44e4-42a7-8aa3-2458196dffd8"><span class="primary-cat-name" itemprop="title">Java</span></a></li>
				
				
					<li><a class="edition-link-url" href="https://www.javaworld.com/category/core-java/" itemprop="url" automate_uuid="c71095ab-9474-4149-a4e9-950531283253"><span class="article-primary-cat" itemprop="title">Core Java</span></a></li>
				
			
		</ul>
	</nav>
	
	
	
	
		<div class="blog-byline vcard author " itemscope="" itemtype="http://schema.org/Person" itemprop="author">
			<div class="brand ">
				
				
					
						
							
							
							
							
						



















	<a href="https://www.javaworld.com/blog/java-tips/" automate_uuid="9017b697-dd46-4979-a291-13d9a663f6e9">
		<img class="smallImage  imgId100809018 " src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/java_coffee_beans_watch_time_by_eka_rizal_fikri_cc0_via_unsplash-100809018-small.jpg" width="34" alt="Java Tips" itemprop="image">
	</a>

					
					
					
				
				
				<div class="blog-branding-text">
					
					
					
					
					
					<div class="blog-title"><a href="https://www.javaworld.com/blog/java-tips/" automate_uuid="14221eb8-b03b-44c1-9dd9-ae229925871d">Java Tips</a></div>
					
					
					
						
							<p class="name" itemscope="" itemtype="http://schema.org/Person" itemprop="author">
								
								
								By <span class="fn" itemprop="name">Bala Paranj</span>, 
								
								<span class="cn-container">
									
								</span>
								
							  	
								
									
								












<span itemprop="publisher" itemscope="" itemtype="http://schema.org/Organization"><span class="publisher" itemprop="name">JavaWorld</span><meta itemprop="logo" content="https://www.javaworld.com/www.idge.jvw/images/JVW_logo_300x300.png"></span> 
								
								<span class="divider">|</span>
								
								<span class="pub-date" itemprop="datePublished" content="1999-02-01T00:00-0800"><span class="format-date">Feb 1, 1999 12:00 am PST</span>
									
								</span>
							</p>
							
							
																				
										
					
				</div>
			</div>
			
				<div class="about">
					<div class="about-title">About <span class="divider">|</span> <a href="https://www.javaworld.com/blog/java-tips/index.rss" automate_uuid="e0b47540-be6b-4c67-a2ab-6bbd312a4700"><i class="ss-icon ss-social ss-rss"></i></a></div>
					<p>JavaWorld's most popular long-running series, featuring new and classic Java programming tips from your peers in the Java developer community. </p>
				</div>
			
		</div>
	
	
	
	
	
	
	
		
		
			<div class="category"><a class="edition-link-url" href="https://www.javaworld.com/howto" itemprop="genre" automate_uuid="5365f264-b30d-4dba-abd2-ee67cb041440">How-To</a></div>
		
	
	

	<h1 itemprop="headline">Java Tip 68: Learn how to implement the Command pattern in Java</h1>
	
	
	
	
		<section class="deck viewability">
			<h3 itemprop="description">Add flexibility and extensibility to your programs with this object-oriented equivalent of the callback</h3>
		</section>
	
	
	
	
	
	
	
	
			<div class="cat-social">
				
					
				















 



	

				

	
	
		
		
	





	


<div id="sharer" class="cat sidecar show blog">
<ul id="share-tool" class="expand">

	
		<li class="sosh">
			<a data-socialsite="Facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.javaworld.com%2Farticle%2F2077569%2Fjava-tip-68--learn-how-to-implement-the-command-pattern-in-java.html" target="_blank" automate_uuid="cb48a7c6-88d9-4179-9351-b758227e2d79">
				<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/facebook.svg">
			</a>
		</li>	
	<li class="sosh">
		<a data-socialsite="Twitter" class="twit-hand" href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fwww.javaworld.com%2Farticle%2F2077569%2Fjava-tip-68--learn-how-to-implement-the-command-pattern-in-java.html&amp;via=javaworldcom&amp;text=Java+Tip+68%3A+Learn+how+to+implement+the+Command+pattern+in+Java" target="_blank" automate_uuid="f6b061a8-292f-4e4d-9241-6dff3dee38c6">
			<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/twitter.svg">
		</a>
	</li>
	<li class="sosh">
		<a data-socialsite="Linkedin" href="http://www.linkedin.com/shareArticle?url=https%3A%2F%2Fwww.javaworld.com%2Farticle%2F2077569%2Fjava-tip-68--learn-how-to-implement-the-command-pattern-in-java.html&amp;title=Java+Tip+68%3A+Learn+how+to+implement+the+Command+pattern+in+Java" target="_blank" automate_uuid="e1327a90-6d9d-4a2b-ba6b-97f82a4db9cf">
			<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/linkedin.svg">
		</a>
	</li>	
	<li class="sosh hide">
			<a data-socialsite="Reddit" href="http://reddit.com/submit?url=https%3A%2F%2Fwww.javaworld.com%2Farticle%2F2077569%2Fjava-tip-68--learn-how-to-implement-the-command-pattern-in-java.html&amp;title=Java+Tip+68%3A+Learn+how+to+implement+the+Command+pattern+in+Java" target="_blank" automate_uuid="249722af-9d83-4a56-b47f-fb0b973f2df3">
				<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/reddit.svg">
			</a>
	</li>	
	<li class="sosh hide">
		<a href="mailto:?Subject=Java%20Tip%2068:%20Learn%20how%20to%20implement%20the%20Command%20pattern%20in%20Java&amp;Body=Check%20out%20this%20article%20from%20JavaWorld%3A%20https%3A%2F%2Fwww.javaworld.com%2Farticle%2F2077569%2Fjava-tip-68--learn-how-to-implement-the-command-pattern-in-java.html" target="_blank" rel="nofollow" id="email-icon" automate_uuid="a8ca4a72-4397-4c6b-94d5-08b00bb4a201">
			<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/mail.svg">	
		</a>
	</li>
	<li class="sosh hide print">
		<a href="javascript:window.print();" automate_uuid="ae60dea6-dfe9-4d6c-8cd2-3a6db0619d59">
			<img class="sidecar-icon" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/print.svg">
		</a>
	</li>
	<li class="more">
		<div class="more-icon" onclick="document.getElementById(&#39;share-tool&#39;).className = &#39;expand&#39;;"></div>
	</li>




</ul>
</div>

<script type="text/javascript">
$(document).ready(function() {
	if (twitterHandle != "") {
		$("a[href*=via]").attr("href", function(_, href) {
			  return href.replace(/via=javaworldcom/, "via="+twitterHandle);
		});
	}
	
	//Add Social Share Event Tag in GTM - IDGMPM-17271
	$("a[data-socialsite]").click(function() {
		var dataLayer = window.dataLayer = window.dataLayer || [];
		dataLayer.push({
			'event': 'socialShare', 
		  	'eventCategory': 'Social Share',
		  	'eventAction': $(this).attr("data-socialsite"), 
		  	'eventLabel': window.document.title
		});
		
	});
});
</script>

<script type="text/javascript">
var isValidEmailAddress = isValidEmailAddress || function(emailAddress) {
    var pattern = new RegExp(/^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,5}$/i);
    return pattern.test(emailAddress);
};
function encodeQueryData(params) {
	var ret = [];
	for (var paramKey in params) {
		ret.push(encodeURIComponent(paramKey) + "=" + encodeURIComponent(params[paramKey]));
	}
	return ret.join("&");
}
</script>

			</div>
	
	
	

	
		
			
		
	
	
		
	
	
		
			<div class="ad viewability" id="viewabilityAdContainer">
				<div id="viewabilityAdUnit">
					
						
					





















	

		
			
			
			
			
			
			
				<div id="topleaderboard" class=" ad-container test">					
				</div>				
				<script type="text/javascript">
				consent.ads.queue.push(function(){
				
					IDG.GPT.addDisplayedAd("topleaderboard", "true");
					$('#topleaderboard').responsiveAd({screenSize:'971 1115', scriptTags: []});
                    IDG.GPT.log("Creating ad: topleaderboard - [971 1115]");
                    
				
				});
				</script>
			
		
	
 	
 
 
				</div>
			</div>
			
		
	
	
	
	
	
</header>




	<div class="constrain-970">
		
		
		
		
			
				<div class="lede-container">
					
					
					
						
						
						
					
				</div>
			
			
		
	



<section class="epo cat-narrow" id="drr-top-ad">

	
	
	
	
	
	
		<div class="ad top-ad">
	
		
		
			
				
					
					
						
					
				
				
				
			





















	

		
			
			
			
			
			
			
				<div id="topimu" class="adunit ad-container test" style="">					
				</div>				
				<script type="text/javascript">
				consent.ads.queue.push(function(){
				if($(window).width() >= 930) {
					IDG.GPT.addDisplayedAd("topimu", "true");
					$('#topimu').responsiveAd({screenSize:'971 1115', scriptTags: []});
                    IDG.GPT.log("Creating ad: topimu - [971 1115]");
                    
				}
				});
				</script>
			
		
	
 	
 
 
		
	
</div>
	
	
	
	
	
	
	
	
	
</section>

</div>







<div class="constrain-970">
	
</div>




<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/deal-modules.js"></script>

		
		



		<section class="bodee">

			
				
				
					












	
		





















<style>
	#drr-container figure.large.video {
		border-bottom: 0 none;
	}
	figure#page-lede.thm-gallery #bcplayer-gallery #bcplayer-gallery_ad > div {
		width: 100%;
		height: 100%;
		transition: all 0.5s ease;
	}
</style>
<style>
.jwplayer.jw-state-paused .jw-display {
	display: table !important;
	padding: 0;
}
.jwplayer .jw-display-icon-container {
    float: none;
    padding: 0;
    margin: 0;
}
.jw-flag-small-player .jw-display {
	padding-top: 0px;
}
.jwplayer .jw-display-icon-container .jw-icon-rewind {
	visibility: hidden;
}
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-play path,
.jw-state-idle .jw-svg-icon-play path,
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-replay path,
.jw-state-complete .jw-svg-icon-replay path {    
    display: none;
}
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-play,
.jw-state-idle .jw-svg-icon-play,
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-replay,
.jw-state-complete .jw-svg-icon-replay {
    background-size: contain;
    background-repeat: no-repeat;
    background-color: transparent;
    background-image: url(//idge.staticworld.net/idgtv/btn-play-default.svg);
    background-position: center center;
    bottom: 0;
    border-radius: 0;
    box-shadow: none;
    left: 0;
    margin: auto;
    right: 0;
    top: 0;
}
.jwplayer .jw-display-icon-container .jw-icon,
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-play,
.jw-state-idle .jw-svg-icon-play,
.jwplayer .jw-display-icon-container  .jw-icon-display .jw-svg-icon-replay,
.jw-state-complete .jw-svg-icon-replay {
    height: 81px;
    width: 78px;
}
</style>


	



	
	
	
	
		<div class="ad placement">
			
				
			





















	

		
			
			
			
				<script>
					var supLocaleEd = false;
					if (typeof countryCode !== 'undefined' && countryCode !== "" && countryCode === 'in' || (brandAbbrev === 'cio' && countryCode === 'nz')) {
						supLocaleEd = true;
					}
				</script>
				<!--  Begin inread -->
				<div id="inread" class=" ad-container">					
				</div>
				
				<script>
					if (supLocaleEd === true) {
						$("div#inread").remove();
					} else {
						consent.ads.queue.push(function(){
							IDG.GPT.addDisplayedAd("inread", "true");
							IDG.GPT.displayGoogleTagSlot('inread');
						});
					}
				</script>
				
				<!--  End inread -->	
			
			
			
			
		
	
 	
 
 
		</div>
	
	
	
	
	
	
	
	
		
		
			
			
			<script>
				var dataLayer = window.dataLayer = window.dataLayer || [];
				dataLayer.push({
					'event': 'loadTopCollectionModule'
					});
			</script>
			
		
	
	
	
	
	
	
			
	
	
	
	
	
	
		
		
			
		
	
	
	
	
	
		
			
				
					
				
				
				
				
			
		
		
	
	
		
		
			<div id="drr-container" class="cat no-primary-image" itemprop="articleBody">
		
		
		
		
	
		
			
			
				<p>Design patterns not only accelerate the design phase of an object-oriented (OO) project but also increase the productivity of the development team and quality of the software. A <em>Command pattern</em> is an object behavioral pattern that allows us to achieve complete decoupling between the sender and the receiver. (A <em>sender</em> is an object that invokes an operation, and a <em>receiver</em> is an object that receives the request to execute a certain operation. With <em>decoupling,</em> the sender has no knowledge of the <code>Receiver</code>'s interface.) The term <em>request</em> here refers to the command that is to be executed. The Command pattern also allows us to vary when and how a request is fulfilled. Therefore, a Command pattern provides us flexibility as well as extensibility.</p><p>In programming languages like C, <em>function pointers</em> are used to eliminate giant switch statements. (See "<a href="https://www.javaworld.com/javaworld/javatips/jw-javatip30.html" rel="nofollow" automate_uuid="17944355-47c5-4c3c-ba69-f8f50897d587">Java Tip 30: Polymorphism and Java</a>" for a more detailed description.) Since Java doesn't have function pointers, we can use the Command pattern to implement callbacks. You'll see this in action in the first code example below, called <code>TestCommand.java</code>.</p><p>Developers accustomed to using function pointers in another language might be tempted to use the <code>Method</code> objects of the Reflection API in the same way. For example, in his article "Java Reflection," Paul Tremblett shows you how to use Reflection to implement transactions without using switch statements. I've resisted this temptation, since Sun advises against using the Reflection API when other tools more natural to the Java programming language will suffice. (See <a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#resources" rel="nofollow" automate_uuid="162b2af9-26cd-4dc6-86be-370c390512c0">Resources</a> for links to Tremblett's article and for Sun's Reflection tutorial page.) Your program will be easier to debug and maintain if you don't use <code>Method</code> objects. Instead, you should define an interface and implement it in the classes that perform the needed action.</p><p>Therefore, I suggest you use the Command pattern combined with Java's dynamic loading and binding mechanism to implement function pointers. (For details on Java's dynamic loading and binding mechanism, see James Gosling and Henry McGilton's "The Java Language Environment -- A White Paper," listed in <a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html#resources" rel="nofollow" automate_uuid="7fc053d9-0af7-4080-9f4e-afcb8efd63a1">Resources</a>.)</p><p>By following the above suggestion, we exploit the polymorphism provided by the application of a Command pattern to eliminate giant switch statements, resulting in extensible systems. We also exploit Java's unique dynamic loading and binding mechanisms to build a dynamic and dynamically extensible system. This is illustrated in the second code sample example below, called <code>TestTransactionCommand.java</code>.</p><p>The Command pattern turns the request itself into an object. This object can be stored and passed around like other objects. The key to this pattern is a <code>Command</code> interface, which declares an interface for executing operations. In its simplest form, this interface includes an abstract <code>execute</code> operation. Each concrete <code>Command</code> class specifies a receiver-action pair by storing the <code>Receiver</code> as an instance variable. It provides different implementations of the <code>execute()</code> method to invoke the request. The <code>Receiver</code> has the knowledge required to carry out the request.</p><aside class="nativo-promo nativo-promo-1 smartphone" id=""> </aside><p>Figure 1 below shows the <code>Switch</code> -- an aggregation of <code>Command</code> objects. It has <code>flipUp()</code> and <code>flipDown()</code> operations in its interface. <code>Switch</code> is called the <em>invoker</em> because it invokes the execute operation in the command interface.</p><p>The concrete command, <code>LightOnCommand</code>, implements the <code>execute</code> operation of the command interface. It has the knowledge to call the appropriate <code>Receiver</code> object's operation. It acts as an adapter in this case. By the term <em>adapter,</em> I mean that the concrete <code>Command</code> object is a simple connector, connecting the <code>Invoker</code> and the <code>Receiver</code> with different interfaces.</p><aside class="nativo-promo nativo-promo-1 tablet desktop" id=""> </aside><p>The client instantiates the <code>Invoker</code>, the <code>Receiver</code>, and the concrete command objects.</p><figure class="center"><img height="192" width="425" data-original="https://images.techhive.com/images/idge/imported/article/jvw/1999/02/structure-100158872-orig.gif" class="lazy" loading="lazy" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/structure-100158872-orig.gif" style="height: 0.667px; display: block;"></figure><p>Figure 2, the sequence diagram, shows the interactions between the objects. It illustrates how <code>Command</code> decouples the <code>Invoker</code> from the <code>Receiver</code> (and the request it carries out). The client creates a concrete command by parameterizing its constructor with the appropriate <code>Receiver</code>. Then it stores the <code>Command</code> in the <code>Invoker</code>. The <code>Invoker</code> calls back the concrete command, which has the knowledge to perform the desired <code>Action()</code> operation.</p><figure class="center"><img height="206" width="386" data-original="https://images.techhive.com/images/idge/imported/article/jvw/1999/02/sequence-100158873-orig.gif" class="lazy" loading="lazy" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/sequence-100158873-orig.gif" style="height: 0.667px; display: block;"></figure><p>The client (main program in the listing) creates a concrete <code>Command</code> object and sets its <code>Receiver</code>. As an <code>Invoker</code> object, <code>Switch</code> stores the concrete <code>Command</code> object. The <code>Invoker</code> issues a request by calling <code>execute</code> on the <code>Command</code> object. The concrete <code>Command</code> object invokes operations on its <code>Receiver</code> to carry out the request.</p><p>The key idea here is that the concrete command registers itself with the <code>Invoker</code> and the <code>Invoker</code> calls it back, executing the command on the <code>Receiver</code>.</p><aside class="nativo-promo nativo-promo-2 tablet desktop smartphone" id=""> </aside><h2>Command pattern example code</h2><p>Let's take a look at a simple example illustrating the callback mechanism achieved via the Command pattern.</p><p>The example shows a <code>Fan</code> and a <code>Light</code>. Our objective is to develop a <code>Switch</code> that can turn either object on or off. We see that the <code>Fan</code> and the <code>Light</code> have different interfaces, which means the <code>Switch</code> has to be independent of the <code>Receiver</code> interface or it has no knowledge of the code&gt;Receiver's interface. To solve this problem, we need to parameterize each of the <code>Switch</code>s with the appropriate command. Obviously, the <code>Switch</code> connected to the <code>Light</code> will have a different command than the <code>Switch</code> connected to the <code>Fan</code>. The <code>Command</code> class has to be abstract or an interface for this to work.</p><p>When the constructor for a <code>Switch</code> is invoked, it is parameterized with the appropriate set of commands. The commands will be stored as private variables of the <code>Switch</code>.</p><p>When the <code>flipUp()</code> and <code>flipDown()</code> operations are called, they will simply make the appropriate command to <code>execute( )</code>. The <code>Switch</code> will have no idea what happens as a result of <code>execute( )</code> being called.</p><pre class="prettyprint prettyprinted" style=""><span class="typ">TestCommand</span><span class="pun">.</span><span class="pln">java
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Fan</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> startRotate</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Fan is rotating"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> stopRotate</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Fan is not rotating"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Light</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> turnOn</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Light is on "</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> turnOff</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">System</span><span class="pun">.</span><span class="kwd">out</span><span class="pun">.</span><span class="pln">println</span><span class="pun">(</span><span class="str">"Light is off"</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Switch</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="typ">UpCommand</span><span class="pun">,</span><span class="pln"> </span><span class="typ">DownCommand</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">Switch</span><span class="pun">(</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="typ">Up</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="typ">Down</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="typ">UpCommand</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Up</span><span class="pun">;</span><span class="pln"> </span><span class="com">// concrete Command registers itself with the invoker </span><span class="pln">
                </span><span class="typ">DownCommand</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Down</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">void</span><span class="pln"> flipUp</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// invoker calls back concrete Command, which executes the Command on the receiver </span><span class="pln">
                        </span><span class="typ">UpCommand</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> execute </span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">;</span><span class="pln">                           
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">void</span><span class="pln"> flipDown</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="typ">DownCommand</span><span class="pln"> </span><span class="pun">.</span><span class="pln"> execute </span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LightOnCommand</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Light</span><span class="pln"> myLight</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">LightOnCommand</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Light</span><span class="pln"> L</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myLight  </span><span class="pun">=</span><span class="pln">  L</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myLight </span><span class="pun">.</span><span class="pln"> turnOn</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LightOffCommand</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Light</span><span class="pln"> myLight</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">LightOffCommand</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Light</span><span class="pln"> L</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myLight  </span><span class="pun">=</span><span class="pln">  L</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myLight </span><span class="pun">.</span><span class="pln"> turnOff</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FanOnCommand</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Fan</span><span class="pln"> myFan</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FanOnCommand</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Fan</span><span class="pln"> F</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myFan  </span><span class="pun">=</span><span class="pln">  F</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myFan </span><span class="pun">.</span><span class="pln"> startRotate</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FanOffCommand</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">Fan</span><span class="pln"> myFan</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">FanOffCommand</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="typ">Fan</span><span class="pln"> F</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myFan  </span><span class="pun">=</span><span class="pln">  F</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute</span><span class="pun">(</span><span class="pln"> </span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                myFan </span><span class="pun">.</span><span class="pln"> stopRotate</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
        </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TestCommand</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> main</span><span class="pun">(</span><span class="typ">String</span><span class="pun">[]</span><span class="pln"> args</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
                        </span><span class="typ">Light</span><span class="pln">  testLight </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Light</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">LightOnCommand</span><span class="pln"> testLOC </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LightOnCommand</span><span class="pun">(</span><span class="pln">testLight</span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">LightOffCommand</span><span class="pln"> testLFC </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">LightOffCommand</span><span class="pun">(</span><span class="pln">testLight</span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">Switch</span><span class="pln"> testSwitch </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Switch</span><span class="pun">(</span><span class="pln"> testLOC</span><span class="pun">,</span><span class="pln">testLFC</span><span class="pun">);</span><span class="pln">       
                        testSwitch</span><span class="pun">.</span><span class="pln">flipUp</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                        testSwitch</span><span class="pun">.</span><span class="pln">flipDown</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">Fan</span><span class="pln"> testFan </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Fan</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">FanOnCommand</span><span class="pln"> foc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FanOnCommand</span><span class="pun">(</span><span class="pln">testFan</span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">FanOffCommand</span><span class="pln"> ffc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FanOffCommand</span><span class="pun">(</span><span class="pln">testFan</span><span class="pun">);</span><span class="pln">
                        </span><span class="typ">Switch</span><span class="pln"> ts </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Switch</span><span class="pun">(</span><span class="pln"> foc</span><span class="pun">,</span><span class="pln">ffc</span><span class="pun">);</span><span class="pln">
                        ts</span><span class="pun">.</span><span class="pln">flipUp</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
                        ts</span><span class="pun">.</span><span class="pln">flipDown</span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln"> 
                </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">               
</span><span class="typ">Command</span><span class="pun">.</span><span class="pln">java
</span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">Command</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">abstract</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> execute </span><span class="pun">(</span><span class="pln"> </span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre><p>Notice in the code example above that the Command pattern completely decouples the object that invokes the operation -- <code>(Switch )</code> -- from the ones having the knowledge to perform it -- <code>Light</code> and <code>Fan</code>. This gives us a lot of flexibility: the object issuing a request must know only how to issue it; it doesn't need to know how the request will be carried out.</p><h2>Command pattern to implement transactions</h2><p>A Command pattern is also known as an <em>action</em> or <em>transaction pattern.</em> Let us consider a server that accepts and processes transactions delivered by clients via a TCP/IP socket connection. These transactions consist of a command, followed by zero or more arguments.</p><p>Developers might use a switch statement with a case for each command. Usage of <code>Switch</code> statements during coding is a sign of bad design during the design phase of an object-oriented project. Commands represent an object-oriented way to support transactions and can be used to solve this design problem.</p><p>In the client code of the program <code>TestTransactionCommand.java</code>, all the requests are encapsulated into the generic <code>TransactionCommand</code> object. The <code>TransactionCommand</code> constructor is created by the client and it is registered with the <code>CommandManager</code>. The queued requests can be executed at different times by calling the <code>runCommands()</code>, which gives us a lot of flexibility. It also gives us the ability to assemble commands into a composite command. I also have <code>CommandArgument</code>, <code>CommandReceiver</code>, and <code>CommandManager</code> classes and subclasses of <code>TransactionCommand</code> -- namely <code>AddCommand</code> and <code>SubtractCommand</code>. Following is a description of each of these classes:</p><ul><li><p><code>CommandArgument</code> is a helper class, which stores the arguments of the command. It can be rewritten to simplify the task of passing a large or variable number of arguments of any type.</p></li><li><p><code>CommandReceiver</code> implements all the command-processing methods and is implemented as a Singleton pattern.</p></li><li><code>CommandManager</code> is the invoker and is the <code>Switch</code> equivalent from the previous example. It stores the generic <code>TransactionCommand</code> object in its private <code>myCommand</code> variable. When <code>runCommands( )</code> is invoked, it calls the <code>execute( )</code> of the appropriate <code>TransactionCommand</code> object.</li></ul><p>In Java, it is possible to look up the definition of a class given a string containing its name. In the <code>execute ( )</code> operation of the <code>TransactionCommand</code> class, I compute the class name and dynamically link it into the running system -- that is, classes are loaded on the fly as required. I use the naming convention, command name concatenated by the string "Command" as the name of the transaction command subclass, so that it can be loaded dynamically.</p><p>Notice that the <code>Class</code> object returned by the <code>newInstance( )</code> has to be cast to the appropriate type. This means the new class has to either implement an interface or subclass an existing class which is known to the program at compile time. In this case, since we implement the <code>Command</code> interface, this isn't a problem.</p>
			
		
		
	
		
		
			
		
		
		
		
		
	</div>
	
	
	
		
		
		
	
	


	
	
	<script>
$("body").on('click', 'a[data-product-id]', function() {
	var e = e || window.event;
	var dataLayer = window.dataLayer = window.dataLayer || [];
	var prodName = $(this).attr("data-product-name");
	prodName = prodName.replace("\\'","'"); // to counter the effects of over-escaping
	
	if ( $(this).parents('.slideshow').length > 0 ) {
		var productLinkPosition = "Slideshow";
	} else if ( $(this).parents('.emo-sb').length > 0 ) {
		var productLinkPosition = "Product Sidebar";
	} else if ( $(this).parents('.at-a-glance.top').length > 0 ) {
		var productLinkPosition = "AAG Top";
	} else if ( $(this).parents('.at-a-glance').length > 0 ) {
		var productLinkPosition = "AAG Bottom";
	} else if ( $(this).parents('.quick-hits.medium').length > 0 ) {
		var productLinkPosition = "Quick Hit Medium";
	} else if ( $(this).parents('.quick-hits').length > 0 ) {
		var productLinkPosition = "Quick Hit Full";
	} else if ( $(this).parents('.product-chart').length > 0 ) {
		var productLinkPosition = "Product Chart";
	} else if ( $(this).parents('.emo-list').length > 0 ) {
		var productLinkPosition = "Product List";
	} else {
		var productLinkPosition = "Body Text";
	}
	
	dataLayer.push({
		'event': 'affiliateLink', 
	  	'eventCategory': 'Affiliate Link', // Hardcoded, not dynamic
	  	'eventAction': 'Click', // Hardcoded, not dynamic
	  	'eventLabel': ''+e.target+'', // The URL the affiliate link leads to
	  	'productVendor': $(this).attr("data-bkvndr"), // The vendor of the product
	  	'productManufacturer': $(this).attr("data-bkmfr"), // The manufacturer of the product
	  	'productName': prodName, // The name of the product
	  	'productId': $(this).attr("data-product-id"), // The ID of the product
	  	'productLinkPosition': productLinkPosition // location of product link (Product Sidebar, Product Chart, etc.)
	});
	
	window.permutive.track('AffiliateLinkClick', {
	    category: $(this).attr("data-bkc"),
	    name: prodName,
	    manufacturer: $(this).attr("data-bkmfr"),
	    vendor: $(this).attr("data-bkvndr")
	});
	
});
</script>
	
	
		<script>
$("#drr-container a:not('[data-product-id]')").on('click',function(e){
	var dataLayer = window.dataLayer = window.dataLayer || [];
	
	var $clickEl = $(this);
	var clickUrl = $clickEl.attr("href");
	var clickParentsUntilDrr = $clickEl.parentsUntil("#drr-container");
	var clickText = $clickEl.text().trim();
	var linkLocation;
	var linkType;
	var regex = new RegExp("cio.com/|csoonline.com/|computerworld.com/|itnews.com/|itworld.com/|infoworld.com/|networkworld.com/|javaworld.com/|techconnect.com/|techhive.com/|macworld.com/|pcworld.com/|greenbot.com/|gamestar.com/|idginsiderpro.com/|idgesg.net/", "i");
	
	if (clickParentsUntilDrr.hasClass("fakesidebar")) {
		linkLocation = "FSB";
	}
	else if (clickParentsUntilDrr.hasClass("end-note")) {
     	 linkLocation = "End Note";
   }
	else {
		linkLocation = "Body";
	}
	
	if (regex.test(clickUrl)) {
	      linkType = "Internal";
	    }
	else {
		linkType = "External";
	}
		
	
	dataLayer.push({
		'event': 'editBodyLink', 
	  	'eventCategory': 'Editorial Body Links',
	  	'eventAction': linkType,
	  	'eventLabel': linkLocation+" | "+clickText+" | "+clickUrl
	});
});
</script>
	
	
	<script>
$("#drr-top-ad .related-promo-wrapper .title > a").on('click',function(e){
	var dataLayer = window.dataLayer = window.dataLayer || [];
	
	var $clickEl = $(this);
	var clickUrl = $clickEl.attr("href");
	var clickText = $clickEl.text().trim();
	var linkLocation = "Promo";		
	
	dataLayer.push({
		'event': 'promoModuleLink', 
	  	'eventCategory': 'Promotion module',
	  	'eventAction': 'Click',
	  	'eventLabel': linkLocation+" | "+clickText+" | "+clickUrl
	});
});
</script>
	
	
	
	
	
	
	    <div class="apart-alt tags">
	    <span class="related">Related: </span>
	    <ul>
			
				<li><a class="edition-link-url primary-cat-url2" href="https://www.javaworld.com/category/core-java" automate_uuid="416c7225-6991-4276-be20-d467162d42cb"><span class="primary-cat-name2">Core Java</span></a></li>
			
				<li><a class="edition-link-url primary-cat-url2" href="https://www.javaworld.com/category/learn-java" automate_uuid="68922e51-3ec0-4ea9-b2e9-ef47603bc19e"><span class="primary-cat-name2">Learn Java</span></a></li>
			
				<li><a class="edition-link-url primary-cat-url2" href="https://www.javaworld.com/category/design-patterns" automate_uuid="1ddac555-564a-4f26-83e2-7c07188b9518"><span class="primary-cat-name2">Design Patterns</span></a></li>
			
				<li><a class="edition-link-url primary-cat-url2" href="https://www.javaworld.com/category/enterprise-java" automate_uuid="fc3e3245-2cea-4e6d-afb1-fc753821e4bf"><span class="primary-cat-name2">Enterprise Java</span></a></li>
			 
			
				
				
					 
						 
				    				
					
				
					
			
	    </ul>
	   
		</div>
	
	
	
	
	
	
	
	
	
	
		
		
	

















	
	<section class="pagination">
		
	    
		    <span class="page-numbers">
			    
			    	<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html" class="page-link current" automate_uuid="53449345-771e-4535-9b05-367480eb29bd">1</a>
			    
			    	<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html?page=2" class="page-link " automate_uuid="6e6e57c5-4278-4998-a34b-1d1f5fc2763d">2</a>
			    
		    </span>
		    <span class="current-page">
		    	Page 1
		    </span>
		
		
			<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html?page=2" class="page-link next" rel="next" automate_uuid="8ca618e5-84ef-4991-b4a8-65e44833095f">Next <i class="ss-icon ss-navigateright"></i></a>
		
	</section>
	
	
	<div class="mobile-page-nav">
		
			
				
				<div id="article-top-page-number">Page 1 of 2</div>
				
					<a href="https://www.javaworld.com/article/2077569/java-tip-68--learn-how-to-implement-the-command-pattern-in-java.html?page=2" class="page-link next" rel="next" automate_uuid="dbee3360-cf0b-4b39-94c3-53f2bdffc782"><i class="ss-icon ss-navigateright"></i></a>
				
			
		
			
		
	</div>


	 
	



	
	
	
	
	
	












	
	
	
	
	
	
	
	
	
	
	
	
	
	
	





<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/embedder-jwp.js"></script>

<script type="text/javascript" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery.lazyload-ad.js"></script>

















<script type="text/javascript">

$(document).ready(function() {
	$('.articleBloxAd').filter( ":visible" ).each(function(index, item) {
		var id = $(item).attr('id');
		var divClass = $(item).attr('class');
		var adString = IDG.GPT.getLazyAdCode();
		$(item).replaceWith("<div id=\"" + id + "\" class=\"lazyload_blox_ad " + divClass + "\">" + adString + "</div>");
	});
	try {
		$("div.lazyload_blox_ad").lazyLoadAd({
	        threshold    : 0,         // You can set threshold on how close to the edge ad should come before it is loaded. Default is 0 (when it is visible).
	        forceLoad    : false,       // Ad is loaded even if not visible. Default is false.
	        onLoad       : false,       // Callback function on call ad loading
	        onComplete   : false,       // Callback function when load is loaded
	        timeout      : 1500,        // Timeout ad load
	        debug        : false,       // For debug use : draw colors border depends on load status
	        xray         : false        // For debug use : display a complete page view with ad placements
		}) ;
	}
	catch (exception){
		console.log("error loading lazyload_ad " + exception);
	}
});

</script>
		

	
	













<style>
@media only screen and (min-width: 60.625em) {
	article .apart.ad.not-lazy {
		margin-left: 0;
		float: right;
	}
}
/* this spaces the ads in the right rail */
@media only screen and ( min-width: 48em ) {
	article #drr-top-ad.epo.cat-narrow #imu2 {
		margin-top: 390px; /*originally 354px*/
	}
	.topDeals.topper {
		margin-top: 390px;
	}
}
@media only screen and ( min-width: 48em ) and ( max-width: 58.063em ) {
	article #drr-top-ad.epo.cat-narrow #imu2 {
		margin-top: 0;
	}
}
@media only screen and ( min-width: 60.625em ) {
	article #drr-top-ad.epo.cat-narrow #imu2 {
		margin-top: 390px; /*originally 354px*/
	}
	.topDeals.topper {
		margin-top: 390px;
	}
}
@media only screen and ( min-width: 48em ) {
	article #drr-top-ad.epo.cat-narrow div[id^=imu] {
		margin-top: 390px;
	}
}
@media only screen and ( min-width: 48em ) and ( max-width: 58.063em ) {
	article #drr-top-ad.epo.cat-narrow div[id^=imu] {
		margin-top: 0;
	}
}
@media only screen and ( min-width: 60.625em ) {
	article #drr-top-ad.epo.cat-narrow div[id^=imu] {
		margin-top: 390px;
	}
}
</style>

<script type="text/javascript">
$(function() {
	var MOBILE_BREAK = 929;
	
	
	if (typeof $.fn.lazyload === 'undefined' ) {
		$.getScript('/www/js/jquery/jquery.lazyload.min.js',function(){
			 $("img.lazy").each(function (){
				if ($(this).parents('.hero-img').length > 0) {
					var tempHeight = $("#drr-container").width()*.667;
				}
				else {
					var tempHeight = $(this).width()*.667;
				}
				$(this).height(tempHeight);
			 });
			
			 $("img.lazy").lazyload({ 
			    	effect : "fadeIn", 
			    	threshold: 200,
			    	failure_limit:25
			 });
			if ($(window).width() <= MOBILE_BREAK) {
				exeImuMobile();
			} else {
				exeImuDesktop();
			}
			$("img.lazy").each(function (){
				$(this).height("");
			 });
		});	
	}
	else {
			
		if ($(window).width() <= MOBILE_BREAK) {
			exeImuMobile();
		} else {
			exeImuDesktop();
		}
	}
});
	
function exeImuMobile() {
	//NOTE: don't include the conditionals for if a site has lazyloaded ads or not - they all do at this point.

	//define necessary variables
	var TOP_IMU_HEIGHT = 250,
	GRAF_HEIGHT = 25,
	AD_HEIGHT_BUFFER = 350,
	RIGHT_PIXEL_WINDOW = 300, // this is for not near end of page element
	DEBUG = false;

var placementIndex = [],
	adPositions = new Array(0,1,2,3); // IMU, IMU, IMU, IMU++ 
	cumulativeHeight = 0,
	loopCounter = 0,
	placementTarget = TOP_IMU_HEIGHT + GRAF_HEIGHT; // IMU, IMU, IMU 


if ($("figure.hero-img").height()) {
	placementTarget += $("figure.hero-img").height();
}

//Right Rail modules in mobile view
$( ".techDealsModule ul li:nth-child(2)" ).nextAll( "li" ).addClass( "after" );
$( ".topDealsModule ul li:nth-child(2)").nextAll( "li" ).addClass( "after" );

if ($("#drr-container p").length >= 8) {
	$(".techDeals,.topDeals").insertAfter( "#drr-container > p:eq(7)");
} else {
	$("div.techDeals, div.topDeals").hide();
}

// Add heights of all elements up through read these next (no longer existws) (which is placed after fourth p tag) 
var firstModIndex = $("#drr-container > p:eq(3)").index();
$("#drr-container").children().slice(0, firstModIndex).each(function() {
	placementTarget += $(this).height();
});
// Define first mobile ad here so imu counter shows imu1 first imu2 second, etc.
var firstMobileAdHtml = getLazyLoadAdHtml();

// Place Right-rail div containers 
$("#drr-container").children().each(function(index,value) {
	//ignore any hidden elements in the body, like the mobile-only "read this next" module
	if ($(this).is(':visible')) {
		if (DEBUG) {
			console.log($(this));
		}
		if (cumulativeHeight >= placementTarget) {
			if (DEBUG) {
				console.log("cumulativeHeight >= placementTarget and cumulativeHeight is " + cumulativeHeight + " and placementTarget is " + placementTarget);
			}
			var placementDiff = 0;
			//if ($.inArray(loopCounter, adPositions) != -1 || loopCounter >= 5) {
			if ($.inArray(loopCounter, adPositions) != -1 || (loopCounter >= 5 && loopCounter < 20) ) { //limiting number of imu placements
				
				try {
                    IDG.GPT.addExtIMU();
                    var adDivString;
                    if (true) {
                        adDivString = getLazyLoadAdHtml();
                    } else {
                        IDG.GPT.IMUCounter = IDG.GPT.IMUCounter + 1;
                        var slotName = IDG.GPT.getIMUSlotName(),
                            adString = "<div id='" + slotName + "'></div><script>$('#" + slotName + "').responsiveAd({screenSize:'971 1115', scriptTags: []}, false);if (Object.keys(IDG.GPT.companions).length > 0) {IDG.GPT.refreshAd('" + slotName + "');}<\/script>";
                        adDivString = "<div class='apart ad'>" + adString + "</div>";
                        consent.ads.queue.push(function(){IDG.GPT.defineGoogleTagSlot(slotName ,[[320,50],[300,250],[300,50]],false,true);});
                    }
                    placementDiff = applyInsert($(this), adDivString);
                    if (DEBUG) {
                        console.log("Just placed an ad and the placementDiff is: " + placementDiff);
                    }
                    placementTarget = cumulativeHeight + placementDiff + AD_HEIGHT_BUFFER;
				}
				catch (e){
				    console.log("Error: "+e);
                }
				
			}// end inArray() 
			loopCounter++;
		}
		// Avoid placing elements too soon due to non-large figures inflating the cumulative height
		if ($(this).is("figure") && !$(this).is("figure.large")) {
			cumulativeHeight += GRAF_HEIGHT;
		}
		else {
			cumulativeHeight += $(this).height() + GRAF_HEIGHT;
		}
	}
});	// end $("#drr-container").children().each()
	
// For mobile only, place ad after second paragraph. (This is imu2.)
if (firstMobileAdHtml) {
	$(firstMobileAdHtml).insertAfter("#drr-container > p:eq(1)");
}


$("div.lazyload_ad_article").lazyLoadAd({
	threshold    : 0,
	forceLoad    : false,       // Ad is loaded even if not visible. Default is false.
	onLoad       : false,       // Callback function on call ad loading
	onComplete   : false,       // Callback function when load is loaded
	timeout      : 1500,        // Timeout ad load
	debug        : false,       // For debug use : draw colors border depends on load status
	xray         : false      // For debug use : display a complete page view with ad placements
});
	
/*
* Increments imu counter and generates a 'name' based on count like imu2, imu3, etc.
* Returns the html and code script needed for the lazy load ad js.
*/
function getLazyLoadAdHtml() {
	try {
        var adString = IDG.GPT.getLazyAdCode(true);
        return "<div class=\"apart ad lazyload_ad_article\">" + adString + "</div>";
    }
    catch(e) {
	    console.log("Error: "+e);
    }
}

/** 
 * @param jqo Original jquery object target
 * @param divString The div to be inserted.
 * @return Difference in height between original placement target and final target.
 * Checks first 4 elements for an allowable placement (600 pixel window).
 * If none, place element in first location that does not follow a reject element.
 */
function applyInsert(jqo, divString) { 
	if (DEBUG) {
		console.log("applyInsert at top and jqo index is: " + jqo.index());
	}
	
	for (var i=0; i<=4; i++) {
		$thisElement = jqo.nextAll().andSelf().slice(i, i+1);
		if (DEBUG) {
			console.log("Checking first four and i is: " + i + " and this element index is " + $thisElement.index() );
		}
		if ($thisElement.index() < 0) {
			break;
		}
		if (allowPlacement($thisElement)) {
			return addElement(jqo, $thisElement, divString);
		}  
	}
	if (DEBUG) {
		console.log("No nearby allows so just place in first spot that is not after reject.");
	}
	var numElements = jqo.nextAll().length;
	var startIndex = jqo.index();
	for (var i=startIndex; i<=numElements; i++) {
		var $element = $("#drr-container").children().eq(i);
		// This element is eligible when not null, not in placement index, and previous element is not reject
		if ($element != null && (placementIndex == null || placementIndex.indexOf(i) == -1) && !isReject($element.prev())) {
			return addElement(jqo, $element, divString);
		}
	}
	if (DEBUG) {
		console.log("Not going to place element: return 0.");
	}
	return 0; 
}
	
/**
 * @param jqo Original jquery object
 * @param allowElement Element that is good placement for module/ad
 * @param divString The div to be inserted before the good element
 * @return placementHeightDiff Diff in height between original placement target and current target.
 *
 * If element is not too close to the end the insert the div before allowable element. 
 * Add element index to placementIndex to keep track of which elements already have placements
 */
function addElement(jqo, allowElement, divString) {
	var offset = allowElement.index() - jqo.index();
	if (DEBUG) {
		console.log("addElement: jqo index is " + jqo.index() + " allowElement index is " + allowElement.index());
	}
	
	if (elementNotNearEnd(allowElement, RIGHT_PIXEL_WINDOW)) {
		allowElement.before(divString);
		if (DEBUG) {
			console.log("addElement: Adding " + allowElement.index() + " to placementIndex.");
		}
		placementIndex.push(allowElement.index());
		if (offset == 0) {
			return 0;
		}
		else {
			return getHeightDifference(jqo,allowElement);
		}

	}
	else {
		if (DEBUG) {
			console.log("addElement: Near the end so do NOT add.");
		}
		return 0;
	} 
}

function getHeightDifference(jqo,allowElement) {
	var offset = allowElement.index() - jqo.index(),
		height = 0,
		children = null;
	if (offset > 0) {
		children = $("#drr-container").children().slice(jqo.index(), allowElement.index());
	}
	else {
		children = $("#drr-container").children().slice(allowElement.index(), jqo.index());
	
	}
	if (children != null) {
		children.each(function(i) {
			if (DEBUG) {
				console.log("About to add this element's height to heigh diff offset");
				console.log($(this));
			}
   			height += $(this).height() + GRAF_HEIGHT;
		});
	}
	if (offset < 0) {
		height *= -1;
	}
	if (DEBUG) {
		console.log("getHeightDifference: offset was " + offset + " and height diff is : " + height);
	}		
	return height;
}

function allowPlacement(jqo) {
	if (jqo.prev() != null && isReject(jqo.prev())) {
		return false;
	}
	return true;
}

function isReject(jqo) {
	if (jqo != null) {
		if (jqo.is('h2') || jqo.is('h3') || jqo.is('h4') || jqo.is('h5')) {
			if (DEBUG) {
				console.log("isReject: found header");
			}
			return true;
		}
	}
	return false;
}
	 
// Returns true if height of all elements after this one is more than 500; false otherwise 
function elementNotNearEnd(element, pixelWindow) {
	if (pixelWindow === null) {
		pixelWindow = 500;
	}
	if (element === null) {
		return false;
	}
	var remainingHeight = 0,
		children = $("#drr-container").children().slice(element.index());
	if (children === null) {
		return false;
	}
	children.each(function(i){
	   remainingHeight += $(this).height();
	});
	if ( remainingHeight > pixelWindow) {
		return true;
	}
	else {
		if (DEBUG) {
			console.log("Element too close to end. Remaining height is: " + remainingHeight + " and window is " + pixelWindow);	 
		}
		return false;
	}
}


} // end function exeImuRMobile()

	
function exeImuDesktop() {
	var DEBUG = false;
	
	// use this to get artBodyHeight
	var heroImgHeight = $('figure.hero-img').outerHeight(true);
	if (heroImgHeight === null) {
		heroImgHeight = 0;
	}
	// use this to get artBodyHeight
	var galleryItemHeight = $('figure.thm-gallery').outerHeight(true);
	if (galleryItemHeight === null) {
		galleryItemHeight = 0;
	}
	// use this to get artBodyHeight
	var atAglanceTop = $('.at-a-glance.top').height();
	if (atAglanceTop === null) {
		atAglanceTop = 0;
	}
	// use this to get artBodyHeight
	var drrContainerHeight = $('div#drr-container').outerHeight(true);
	
	// subtract this from availRRheight
	var teadsInreadHeight = $('div.teads-inread').height();
	if (teadsInreadHeight === null) {
		teadsInreadHeight = 0;
	}
	// subtract this from availRRheight
	var unrulyAdHeight = $('.unruly_in_article_placement').height();
	if (unrulyAdHeight === null) {
		unrulyAdHeight = 0;
	}
	//just in case the in-article ads are picked up... subtract from availRRheight
	var collapsibleAdHeight = unrulyAdHeight + teadsInreadHeight;
	
	// new Deals modules that need to be subtracted from availRRheight
	var techDealsHeight=0;
	if ($("#drr-top-ad").children(".techDeals").length>0) {
		techDealsHeight = 500;
	}
	
	var prodDealsHeight=0;
	if ($("#drr-top-ad").children(".topDeals").length>0) {
		prodDealsHeight = 500;
	}
	
	var modulesRRHeight = techDealsHeight + prodDealsHeight;
	
	// new available RR height: availRRheight
	var availRRheight = ( heroImgHeight + galleryItemHeight + atAglanceTop + drrContainerHeight);
	
	availRRheight = availRRheight - (collapsibleAdHeight + modulesRRHeight);
	
	// if there is a gallery video, remove the amount of space used to push the right rail down to accommodate the video in the RR (CAT-102)
	if (galleryItemHeight > 0) {
		if (DEBUG) {
			console.log("if galleryItemHeight greater than zero subtract 476 from workingRRheight / availRRheight: " + galleryItemHeight);
		}
		availRRheight = availRRheight - 476;
	}
	
	var topIMUheight = 0;
    var topIMUonPageload = false; // this is used when topimu height is acquired on pageload so height is not subtracted from availRRheight twice
	if ( $("#topimu").length !== 0 ) {
		topIMUheight = $('#topimu').height();
	}
	if ( $("#gpt-showcase").length !== 0 ) {
		topIMUheight = $('#gpt-showcase').height();
	}
	if (topIMUheight === 0) {
		topIMUonPageload = false;
	} else {
		topIMUonPageload = true;
	}
	
	availRRheight = availRRheight - topIMUheight;

	if (DEBUG) {
		console.log("-----on pageload: topIMUheight = " + topIMUheight + " and topIMUonPageload = " + topIMUonPageload + " typeof: " + typeof topIMUonPageload);
	}
	
	if (DEBUG) {
		console.log('-----initial available RR height = ' + availRRheight);
	}
	
	// removing topper class that adds space on top of top deals module on short RR heights
	// topper class is only on PCW, MW, TH top deals module
	if (availRRheight < 1900) {
		$("div.topDeals").removeClass("topper");
	}

	
    var adDivString;
    var adSlotsSizes = [[300,250]]; // default - heights are updated below
    var dynamicAd = true; // needed for imu's above imu4
	var imuHeight = 0; // for all the IMUs - used in slotRenderEnded event
    var slotIdTop = ""; // slotRenderEnded for topimu / gpt-showcase
	var slotId = ""; // used in slotRenderEnded event for IMUs (not topimu)
    var buffspace = 390; // See above. The default is 390. This comes from the rrSpace property in brands' properties.
	var heightLimit = 250 + buffspace; // chose this because smallest ad (250) plus buffspace = 640 pixels which is greater than 639 :)
	// this is used to trigger that particular action (placed ad) only once
	var triggered_no_times = 0;
    var counter = 0; // keeps track of number of ads placed
    var imuArray = [];

// Beginning of new code... IDGMPM-17422
googletag.cmd.push(function() {
    // using slotRenderEnded to get height of newly-placed ad
    googletag.pubads().addEventListener('slotRenderEnded', function(e) { 
		if (DEBUG) {
			console.log("-----e.slot.getSlotElementId() = " + e.slot.getSlotElementId());
        }
    	// ...For topimu on page load...
    	if ( (e.slot.getSlotElementId() === "topimu" || e.slot.getSlotElementId() === "gpt-showcase") && !e.isEmpty ) { //also ensure it's not an empty ad response
    		slotIdTop = e.slot.getSlotElementId();
			imuHeight = e.size[1];
			
			if (imuArray.indexOf(slotIdTop) == -1) {
				imuArray.push(""+slotIdTop+"");
				// subtract just-placed topimu height from availRRheight
				if (topIMUonPageload === false) {
					availRRheight = availRRheight - imuHeight;	
		    		if (DEBUG) {
		    			console.log("-----topimu: e.slot.getSlotElementId() = " + e.slot.getSlotElementId() + " and availRRheight = " + availRRheight);
		            }
				}
			}
			
		}
    	
    	// ...For all other IMUs...
    	if ( e.slot.getSlotElementId().indexOf("imu") === 0 && !e.isEmpty ) {
			slotId = e.slot.getSlotElementId();
			imuHeight = e.size[1];
			// if array does not contain this slotId, add it to array and subtract height
			if (imuArray.indexOf(slotId) == -1) {
				imuArray.push(""+slotId+"");
				// subtract just-placed ad's height plus 390 buffspace pixels from availRRheight
		        availRRheight = availRRheight - (imuHeight + buffspace);
		        if (DEBUG) {
					console.log("----inside slotRenderEnded event for IMUs: slotId = --" + slotId + "----calculating availRRheight: " + availRRheight + " subtracting imuHeight = " + imuHeight + " plus " + buffspace + " buffer (buffspace)");
		        }
			}

			counter = triggered_no_times;
    	}
    	
    	
    	// this is for detecting direction of scrolling
    	var lastScrollTop = 0;
		// do the following while scrolling
		// debounce listen to the scroll ( >ie9 only )
        if (window.addEventListener) {
        	window.addEventListener('scroll', rrdebounce(function(event) {
            	
	            var st = window.pageYOffset || document.documentElement.scrollTop; // Credits: "https://github.com/qeremy/so/blob/master/so.dom.js#L426"
	         	if (st > lastScrollTop) {
				
					var y_scroll_pos = window.pageYOffset; // get offset from scrolling
					//var imuDivOffset = $("#"+slotIdTop).offset().top; // get offset of topimu on scroll
					var imuDivOffset = 0;
					
					// getting top offset for topimu... using this to trigger placement of imu2 - only happens once
					if ( (slotIdTop === 'topimu' || slotIdTop === 'gpt-showcase') && triggered_no_times == 0) {
						imuDivOffset = $("#"+slotIdTop).offset().top;
					} else {
						// need to get this top offset after each ad is placed - occurs for each ad placed after the topimu
						if (slotId.indexOf("imu") === 0 && triggered_no_times > 0) {
							imuDivOffset = $("#"+slotId).offset().top;
						}
					}
		
					// if scroll position is greater than the just-placed imu's top offset means we've hit/passed the top of the imu, display next imu do this only once per ad
					if (y_scroll_pos > imuDivOffset && availRRheight > heightLimit) {

						// this block creates ad string and appends ad to #drr-top-ad div
						try {			        
					        // THIS DETERMINES AD SLOT SIZES BASED ON AVAIL RR HEIGHT
					        if (availRRheight > 999) { // if availRRheight is equal to or greater than 1000 pixels, place ad either 250 or 600 pixels tall
					        	adSlotsSizes = [[300,250],[300,600],[120,600],[160,600]];
					        } else { // if availRRheight is less than 1000 pixels and greater than or equal to 650 pixels tall...
					        	if (availRRheight < 1000 && availRRheight > 649) {
					        		adSlotsSizes = [[300,250]];
					        	}
					        }
					        // this needs to be equal. if triggered is more than counter, it will place all the ads on the page
					        if (triggered_no_times === counter) {
				
						        // THIS CREATES AD CODE STRING
					        	IDG.GPT.IMUCounter = IDG.GPT.IMUCounter + 1;
						        // push to consent queue if consent given
					        	consent.ads.queue.push(function() {
						            var slotName = IDG.GPT.getIMUSlotName(),
						                 adString = "<div id='" + slotName + "'></div><script>$('#" + slotName + "').responsiveAd({screenSize:'971 1115', scriptTags: []}, "+dynamicAd+");if (Object.keys(IDG.GPT.companions).length > 0 || IDG.GPT.disableInitialLoad) {IDG.GPT.refreshAd('" + slotName + "');}<\/script>";
						            adDivString = "<div class='apart ad not-lazy'>" + adString + "</div>";
						            IDG.GPT.defineGoogleTagSlot(slotName,adSlotsSizes,false,true); 	
					            
						            // PLACE AD CODE STRING
							        $(adDivString).appendTo('#drr-top-ad');
							        if (DEBUG) {
							        	console.log("********PLACED AD CODE: "+ slotName+" ********");
							        }
					        	});
							}
							// this is so ads are placed one at a time, after ad height and buffer space is subtracted from availRRheight in slotRenderEnded event listener
				            triggered_no_times = counter + 1;
				
						} catch (e) {
						    console.log("Error: "+ e);	
						}
		
		
					} // end if y_scroll_pos > imuDivOffset
					//console.log(".............scrolling down.......");	
	         	} // end if st > lastScrollTop for detection scroll direction
	         	else { 
	         		//console.log("...........scrolling up..............");
	         	}
         	
		    lastScrollTop = st <= 0 ? 0 : st; // For Mobile or negative scrolling
        	}, 5));   // end scroll / rrdebounce... run maximum of one time every 5ms
		} // end window.addeventlistener test

	// end of code for figuring out how many ads to place
	});// end eventListener slotRenderEnded
});	

	
	
	// rate-limits certain functions, handy for attaching to scroll events, for instance
    function rrdebounce(func, wait, immediate){
        var timeout;
        return function(){
            var context = this, args = arguments;
            var later = function(){
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    }

} // end function executeDRRDesktop()
	
</script>		



<script>
// this debouce() function is used here and with related-content ribbon-ribbon.jsp
function debounce(func, wait, immediate){
    var timeout;
    return function(){
        var context = this, args = arguments;
        var later = function(){
            timeout = null;
            if (!immediate) func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
}

let galleryNode; // undefined if element is not found
let mobileDeviceWidth = 0;
let eventDeviceOrientation = "portrait";

if (window.innerWidth > 0) {
	mobileDeviceWidth = window.innerWidth;
} else {
	mobileDeviceWidth = document.documentElement.clientWidth;
}

if ($("figure").hasClass("thm-gallery")) {
	galleryNode = document.querySelector('.thm-gallery .embed-wrapper');
}

var supportsOrientationChange = "onorientationchange" in window,
orientationEvent = supportsOrientationChange ? "orientationchange" : "resize";

window.addEventListener(orientationEvent, function() {
	  // if device is rotated to landscape orientation
	  if (window.orientation === 90 || window.orientation === -90) {
		  eventDeviceOrientation = "landscape";
	  } else {
		  eventDeviceOrientation = "portrait";
	  }
}, false);

if (typeof galleryNode !== 'undefined') {	
	if (mobileDeviceWidth <= 480) {
		window.addEventListener('scroll', debounce(function(e) {
			// if device is rotated to landscape after page load, do not pause and play video!
			if (eventDeviceOrientation !== "landscape") {
				if (isVisible(galleryNode)) {
					jwplayer('bcplayer-gallery').play();
				} else {
			    	jwplayer('bcplayer-gallery').pause();
			  	}
			}			
		}, 5));
	}
}
</script>


	
	
	
	




					










				
			
		
		</section><!-- /.bodee -->

		















	
		
			
				
				
					
						
							
						











<div class="six-column" id="recommended">
	<div class="head">Recommended</div>
	<ul>
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		































































	
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
						
						
						
							
						
						
						
						
						
					


















 

<li class=" first">
	
		
			
			
			
			
			
		

























	




	
		



 

	
	
	
		
				
				<figure class="well-img">
					
						
						
							<a href="https://www.javaworld.com/article/3409071/java-challenger-7-debugging-java-inheritance.html" automate_uuid="3d1fb3ea-b06d-439d-ba93-33a01ad7d6d8"><img class="lazy small.3x2Image  imgId100795778 " data-original="https://images.idgesg.net/images/article/2019/05/abstract_connections_network_object_ineritance_root_superclass_by_koto_feja_gettyimages-974104916_2400x1600-100795778-small.3x2.jpg" loading="lazy" alt="abstract connections / network / object / root / inheritance / hierarchy" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/abstract_connections_network_object_ineritance_root_superclass_by_koto_feja_gettyimages-974104916_2400x1600-100795778-small.3x2.jpg" style="height: 0.667px; display: inline;"></a>
						
					
					
					
				</figure>
				
		
		
	

	
	
		
		
		
			
		
		
	
	
	<div class="post-cont">
		
			
								
			
			
		
		<div class="title">













	
		
    	
    		<a href="https://www.javaworld.com/article/3409071/java-challenger-7-debugging-java-inheritance.html" automate_uuid="2e1f423e-72d3-464b-bff5-0eea64718bdc">Inheritance versus composition: How to choose</a>
    	
	
</div>
    </div>
    
	    
    
</li>

				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
						
						
						
							
						
						
						
						
						
					


















 

<li class=" ">
	
		
			
			
			
			
			
		

























	




	
		



 

	
	
	
		
				
				<figure class="well-img">
					
						
						
							<a href="https://www.javaworld.com/article/3452018/get-started-with-lambda-expressions.html" automate_uuid="a9408409-fa72-40e3-8717-1abd52dfbf40"><img class="lazy small.3x2Image  imgId100817057 " data-original="https://images.idgesg.net/images/article/2019/11/jw_lambda_expressions_lambda_symbol_abstract_formulas_and_binary_code_by_monsitj_gettyimages-1047349788_2400x1600-100817057-small.3x2.jpg" loading="lazy" alt="Java  &gt;  Lambda expressions  &gt;  Lambda symbol / abstract formulas / binary code" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jw_lambda_expressions_lambda_symbol_abstract_formulas_and_binary_code_by_monsitj_gettyimages-1047349788_2400x1600-100817057-small.3x2.jpg" style="height: 0.667px; display: inline;"></a>
						
					
					
					
				</figure>
				
		
		
	

	
	
		
		
		
			
		
		
	
	
	<div class="post-cont">
		
			
								
			
			
		
		<div class="title">













	
		
    	
    		<a href="https://www.javaworld.com/article/3452018/get-started-with-lambda-expressions.html" automate_uuid="713e630f-ed27-4247-96ba-3c2a0936e773">Get started with lambda expressions in Java</a>
    	
	
</div>
    </div>
    
	    
    
</li>

				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
						
						
						
							
						
						
						
						
						
					


















 

<li class=" ">
	
		
			
			
			
			
			
		

























	




	
		



 

	
	
	
		
				
				<figure class="well-img">
					
						
						
							<a href="https://www.javaworld.com/article/3340234/tutorial-series-android-studio-for-beginners.html" automate_uuid="cef2ebf0-9e8e-4d34-ac65-616473426b2b"><img class="lazy small.3x2Image  imgId100788152 " data-original="https://images.idgesg.net/images/article/2019/02/jw_android_studio_for_beginners_3x2_1200x800_pkg_idg_google_darkovujic_gettyimages-100788152-small.3x2.jpg" loading="lazy" alt="JavaWorld &gt; Android Studio for Beginners [movile java package]" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jw_android_studio_for_beginners_3x2_1200x800_pkg_idg_google_darkovujic_gettyimages-100788152-small.3x2.jpg" style="height: 0.667px; display: inline;"></a>
						
					
					
					
				</figure>
				
		
		
	

	
	
		
		
		
			
		
		
	
	
	<div class="post-cont">
		
			
								
			
			
		
		<div class="title">













	
		
    	
    		<a href="https://www.javaworld.com/article/3340234/tutorial-series-android-studio-for-beginners.html" automate_uuid="5d830737-a139-42c2-b4bd-cb51128b67c8">Tutorial series: Android Studio for beginners</a>
    	
	
</div>
    </div>
    
	    
    
</li>

				
				
			
		
			
			
				
					
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
						
							
						
						
						
						
						
						
							
						
						
						
						
						
					


















 

<li class=" ">
	
		
			
			
			
			
			
		

























	




	
		



 

	
	
	
		
				
				<figure class="well-img">
					
						
						
							<a href="https://www.javaworld.com/article/3379043/what-is-jpa-introduction-to-the-java-persistence-api.html" automate_uuid="6f8c3c8e-693d-48f3-8e06-5f24a32395cf"><img class="lazy small.3x2Image  imgId100792562 " data-original="https://images.idgesg.net/images/article/2019/04/jw_java_persistence_series_3x2_2400x1600_3_data_center_database_digital_information_blocks_server_traffic_routing_by_ramcreativ_gettyimages-100792562-small.3x2.jpg" loading="lazy" alt="JavaWorld &gt; Persistence [series] &gt; data blocks / data center / database / server traffic routing" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jw_java_persistence_series_3x2_2400x1600_3_data_center_database_digital_information_blocks_server_traffic_routing_by_ramcreativ_gettyimages-100792562-small.3x2.jpg" style="height: 0.667px; display: inline;"></a>
						
					
					
					
				</figure>
				
		
		
	

	
	
		
		
		
			
		
		
	
	
	<div class="post-cont">
		
			
								
			
			
		
		<div class="title">













	
		
    	
    		<a href="https://www.javaworld.com/article/3379043/what-is-jpa-introduction-to-the-java-persistence-api.html" automate_uuid="8d0ddf0e-80b9-4a8d-9b8e-fccd8ac6c3ed">What is JPA? Introduction to the Java Persistence API</a>
    	
	
</div>
    </div>
    
	    
    
</li>

				
				
			
		
	




		
		
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		

































































		
	</ul>
</div><!-- /.six-column -->
					

				
			
			
		

		
			
			
		
			
				
					<div class="lazyload_ad">
						<code type="text/javascript">
						<!--
						var slotName = 'bottomleaderboard';
						var slotSize = [];
						if ($thm.deviceClass == 'mobile') {
							slotSize = [[300,50],[320,50],[300,250]];
						}
						else if ($thm.deviceClass == 'tablet') {
							slotSize = [[728,90],[468,60]];
						}
						else {
							slotSize = [[728,90],[970,90],[970,250]];
						}
						IDG.GPT.addDisplayedAd(slotName, "true");
						document.write('<div id="' + slotName + '" class="ad-container">');
						consent.ads.queue.push(function(){
							IDG.GPT.defineGoogleTagSlot(slotName, slotSize, false, true);});
						document.write('</div>');
						consent.ads.queue.push(function(){
							$('#' + slotName).responsiveAd({screenSize:'971 1115', scriptTags: []}, true);});
						//-->
						</code>
					</div>
							
	
	


	
		










<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/tso-links.css">

	<div id="tso-wrapper"><div id="tso" style="display:none"></div></div>
	<script type="text/javascript">
	function renderTSO(ads, requireHttps) {
		$thm.debug("renderTSO:"+ads.length);
		if (ads && ads.length > 0) {
			var selectedAds = selectTSOAds(ads,10);
			if (null != selectedAds && selectedAds.length > 0) {
				var html = "<h3>Sponsored Links</h3>";
				html += "<ul>";
				for (var i=0; i<selectedAds.length;i++) {
					html += "<li>";
					html += "<a href='"+selectedAds[i].url+"'> "+selectedAds[i].title+"</a>";
					if (null != selectedAds[i].pixel && selectedAds[i].pixel.length > 0) {
						html += selectedAds[i].pixel;
					}
					html += "</li>";
				}
				html += "</ul>";
				$("#tso").html(html).show();
			}
		}
	}
	function selectTSOAds(ads,max) {
		if (ads.length <= max) {
			return ads;
		} else {
			var uniq = {};
			var found = 0;
			var selectedAds = [];
			while (found < max) {
				var ad = ads[Math.floor(Math.random()*ads.length)];
				if (uniq[ad.id] != null) {
					continue;
				} else {
					uniq[ad.id] = true;
					found++;
					selectedAds.push(ad);
				}
			}
			return selectedAds;
		}
		return null;
	}
	</script>
	

	
	


		</article>

	</section><!-- /role=main -->

	
	
	

</div><!-- /#page-wrapper -->
		
		












	<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/foot.css">
	<link rel="stylesheet" href="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/foot(1).css">





<footer>

    <section class="brand" itemscope="" itemtype="http://schema.org/Organization">
   	
   		<link itemprop="url" href="http://www.javaworld.com/"> 
        <a href="https://www.javaworld.com/" automate_uuid="515d316d-b639-4d50-80c6-445774de20ab"><span class="logo">JavaWorld</span></a>
		<span class="tagline"> JavaWorld is the original independent resource for Java developers, architects, and managers.</span>
        
        
        
    </section>
    	
    <section class="topics">
        
			
		
    </section>
    
    
    <section class="about">
		<div class="wrapper"> 
        	<nav class="tertiary" id="ft3">
            	<ul>
            		
















<li><a class="edition-link-url" href="https://www.javaworld.com/about/about.html" automate_uuid="3425831d-25ec-4a0b-91e5-8572a6f9ceb2">About Us</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/contactus.html" automate_uuid="89ae45ee-b511-4615-95c2-0b727f286081">Contact</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/privacy.html" automate_uuid="2fe7c0ce-fd0a-47ac-9f32-adfc7e3a8ba0">Privacy Policy</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/cookie-policy.html" automate_uuid="4ed10790-9de9-409e-93c8-a0142e7344c1">Cookie Policy</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/member-preferences.html" automate_uuid="cf49d357-7d37-4210-b617-6e3628d8d538">Member Preferences</a>

</li><li><a class="edition-link-url" href="https://www.idg.com/advertise-with-us/infoworld/" target="_blank" rel="nofollow" automate_uuid="1e1730dc-a7f5-4f1c-8a4d-a3694b3dd9f4">Advertising</a>

</li><li><a class="edition-link-url" href="https://www.idg.com/work-here/" target="_blank" rel="nofollow" automate_uuid="d65e9e26-7899-4cd7-bda7-16d9e2855814">IDG Careers</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/adchoices.html" automate_uuid="832bd343-2000-4a07-9385-b0c873516d4c">Ad Choices</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/affiliates.html" automate_uuid="049b410c-2fae-45a2-b360-20622abbb850">E-commerce Links</a>

</li><li><a class="edition-link-url" href="https://www.javaworld.com/about/ccpa.html" automate_uuid="b9dad231-41b4-44ec-96b4-9343156c9492">California: Do Not Sell My Personal Info</a>




            	</li></ul>
        	</nav>
		</div>
	</section>
	
    <section class="copyright">
        <div class="wrapper">
			
        		<img src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/logo-footer-black.png" alt="IDG Communications">
        	
        	
        
        	
        	<p><a href="https://www.javaworld.com/about/copyright.html" automate_uuid="2366878a-cd7c-4942-9340-a431b0e8bc66">Copyright</a> © 2020 IDG Communications, Inc.</p>
			<div class="network">
				<div id="network-selector">
                <div class="label">Explore the IDG Network <i class="ss-icon tick">descend</i></div>
                <ul>
                	
                		
                		
                	














	
		<li><a href="https://www.cio.com/" target="_blank" rel="nofollow" automate_uuid="851741ec-3091-4e2d-92e3-06d2ab2ad3b7">CIO</a></li>
	
		<li><a href="https://www.computerworld.com/" target="_blank" rel="nofollow" automate_uuid="9e94c5f4-40fa-4b1c-a98c-0aebca592d89">Computerworld</a></li>
	
		<li><a href="https://www.csoonline.com/" target="_blank" rel="nofollow" automate_uuid="bbfd7166-2dfb-421e-9013-b83145fb051b">CSO</a></li>
	
		<li><a href="https://www.idc.com/" target="_blank" rel="nofollow" automate_uuid="a4506579-49da-4c07-b541-211d7cdfad58">IDC</a></li>
	
		<li><a href="https://www.idg.com/" target="_blank" rel="nofollow" automate_uuid="e8a7d986-aa68-4d51-9cff-17b6f3f7a2f1">IDG</a></li>
	
		<li><a href="https://www.idgconnect.com/" target="_blank" rel="nofollow" automate_uuid="b6b7dd60-40e6-440b-9199-c258adf889a7">IDG Connect</a></li>
	
		<li><a href="https://www.infoworld.com/" target="_blank" rel="nofollow" automate_uuid="918ce0da-fd7a-4cbe-8f06-e1bc5966b4f7">InfoWorld</a></li>
	
		<li><a href="https://www.idginsiderpro.com/" target="_blank" rel="nofollow" automate_uuid="18bb6821-c083-4750-9f1f-768b0b4911e9">Insider Pro</a></li>
	
		<li><a href="https://www.javaworld.com/" target="_blank" rel="nofollow" automate_uuid="4bb17531-1b85-4b47-9455-154d6f8ea549">JavaWorld</a></li>
	
		<li><a href="https://www.networkworld.com/" target="_blank" rel="nofollow" automate_uuid="f791e646-0cff-4015-a973-cb943394553f">Network World</a></li>
	

                </ul>
				</div><!-- /#network-selector -->
			</div><!-- /.network -->
		</div><!-- /.wrapper -->
    </section>
</footer>


<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery-ui.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery.dfp.min.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/shortstack_nav.js"></script>




	
		
			
		





















	

		
			
			
			
			
			
			
				<div id="mobilewelcomead" class=" ad-container test">					
				</div>				
				<script type="text/javascript">
				consent.ads.queue.push(function(){
				
					IDG.GPT.addDisplayedAd("mobilewelcomead", "true");
					$('#mobilewelcomead').responsiveAd({screenSize:'971 1115', scriptTags: []});
                    IDG.GPT.log("Creating ad: mobilewelcomead - [971 1115]");
                    
				
				});
				</script>
			
		
	
 	
 
 
	



		
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/stickyLb.js"></script>
	<script>
	var stickHead = "sticky-head";
	if ( document.querySelector("#non-stick") ) {
		stickHead = "non-stick";
	}
		
		(function(){
			var parallaxArgs = {
				topNavEl: stickHead,
				topNavIsSticky: true,
				leaderboadrdId: 'topleaderboard', 
				adContainer: 'viewabilityAdContainer',
				adUnit: 'viewabilityAdUnit',
				viewabilityTime: 10000
			}
			parallaxLb(parallaxArgs);
		})();
		
	</script>


<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/tracking.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/autocomplete.js"></script>


	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery.colorbox-min.js"></script>
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/article.js"></script><iframe name="__uspapiLocator" style="display: none;" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/saved_resource(1).html"></iframe>
	
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/responsive-tables.js"></script>
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/jquery.tablesorter.min.js"></script>
	<script>
	$(document).ready(function() {
		$("table.tablesorter").tablesorter({
			widgets: ['zebra']
		});
		
		$("table.tablesorter tbody tr").hover(function() {
			$(this).toggleClass("selected");
		});
		
		$("table.tablesorter thead tr th").each(function(){			
			if ($(this).find('.ss-icon').length < 1) {
				$(this).append('<i class="ss-icon"></i>');
			}
		});
		
	});
	</script>
	
		<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/prettify.js"></script>
		<script>prettyPrint();</script>
	




<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/global.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ss-social.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/ss-standard.js"></script>
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/brandAnalytics.js"></script>




















		
		
			
				
			





















	

		
			
			
			
			
			
			
				<div id="catfish" class=" ad-container test">					
				</div>				
				<script type="text/javascript">
				consent.ads.queue.push(function(){
				
					IDG.GPT.addDisplayedAd("catfish", "true");
					$('#catfish').responsiveAd({screenSize:'971 1115', scriptTags: []});
                    IDG.GPT.log("Creating ad: catfish - [971 1115]");
                    
				
				});
				</script>
			
		
	
 	
 
 
			
				
			





















	

		
			
			
				<!--  Begin gpt-skin -->
				<div id="gpt-skin" class=" ad-container">					
				</div>
				<script type="text/javascript">
				consent.ads.queue.push(function(){
					IDG.GPT.addDisplayedAd("gpt-skin", "true");
					IDG.GPT.displayGoogleTagSlot('gpt-skin');
				});
				</script>
				<!--  End gpt-skin -->	
			
			
			
			
			
		
	
 	
 
 
		
	


<!-- Include here when empty article and when not empty and article is slideshow as this script is included with DRR code in body-base.jsp. -->
<!-- Also do not include on search page with new right rail. OC-1778 -->



<script type="text/javascript">
// -- Load Lazy Advertisement placement as deferred
$("div.lazyload_ad").lazyLoadAd({
        threshold    : 0,         // You can set threshold on how close to the edge ad should come before it is loaded. Default is 0 (when it is visible).
        forceLoad    : false,       // Ad is loaded even if not visible. Default is false.
        onLoad       : false,       // Callback function on call ad loading
        onComplete   : false,       // Callback function when load is loaded
        timeout      : 1500,        // Timeout ad load
        debug        : false,       // For debug use : draw colors border depends on load status
        xray         : false        // For debug use : display a complete page view with ad placements
}) ;
</script>







<script type="text/javascript">

	g_bRequireHttps = true;
	 	var localeId = getLocale();
		$.ajax('/ads/tso?localeId=' + localeId,{
			dataType: 'json',
			success: function(data){
				renderTSO(data.tsoLinks, g_bRequireHttps);
			},
			error: function(jqXHR,error,thrown){
				$thm.debug("TSO AJAX Status: "+error+": "+thrown,true);
			}
		});
	
</script>












	
		
	
	
		
	
	

<!-- Begin comScore Tag -->
<script>
var _comscore = _comscore || [];
_comscore.push(
{ c1: "2", c2: "6035308", c3: "", c5: "Core Java", c6: "Article: How-To", c15: "2077569" });
(function()
{
	var s = document.createElement("script"), el = document.getElementsByTagName("script")[0];
	s.async = true; s.src = (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js";
	el.parentNode.insertBefore(s, el);
})();
</script>
<noscript>
<img src="https://sb.scorecardresearch.com/p?c1=2&c2=6035308&cv=2.0&cj=1" />
</noscript>
<!-- End comScore Tag -->


	<!-- LiveRamp Sources -->
	<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/liveRamp.js"></script>
	<!-- End of LiveRamp -->













<script type="text/javascript">
consent.digitalelement.queue.push(function(){
	$thm.logPlEvent({"b":"jvw","e":"view","t":"article","id":"2077569"});
});
</script>

		<div id="loginModal"></div>
		<div id="logoffModal"></div>

		
		
		
		<script type="text/javascript">
			a=top;f=self;
			var acceptedDomains = ["lookbookhq.com"];
			var cleanedHost = a.location.hostname.split(".").slice(-2).join(".");
			if(a!=f && acceptedDomains.indexOf(cleanedHost) < 0) {
				a.location=f.location;
			}
		</script>			

		













	
<div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" role="dialog" tabindex="-1" style="display: none;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><button type="button" id="cboxPrevious"></button><button type="button" id="cboxNext"></button><button id="cboxSlideshow"></button><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div><div style="display: none; visibility: hidden;">
<script type="text/javascript">var _auto={accountKey:"0cf738c9d2c2033aaa3bb88f6ae0a9f57c18d1b822b19058d46be2fd29de4f58",u1:"jw",apiURL:"https://www.popshops.com",snippetURL:"https://automate-prod.s3.amazonaws.com/minified_logic.js",automateURL:"https://automate.linksynergy.com",widgetKey:"xp35fk24bu8fvo1ajpk3qdt2izxuffjj",aelJS:null,useDefaultAEL:!1,loaded:!1,events:[]},ael=window.addEventListener;
window.addEventListener=function(a,b,c,d){"click"!==a&&_auto.useDefaultAEL?ael(a,b,c):_auto.events.push({type:a,handler:b,capture:c,rakuten:d})};_auto.links={};var httpRequest=new XMLHttpRequest;httpRequest.open("GET",_auto.snippetURL,!0);httpRequest.timeout=5E3;httpRequest.ontimeout=function(){if(!_auto.loaded){for(i=0;i<_auto.events.length;i++){var a=_auto.events[i];ael(a.type,a.handler,a.capture)}_auto.useDefaultAEL=!0}};
httpRequest.onreadystatechange=function(){httpRequest.readyState===XMLHttpRequest.DONE&&200===httpRequest.status&&(eval(httpRequest.responseText),_auto.run(ael))};httpRequest.send(null);</script>
</div><div style="display: none; visibility: hidden;">
<script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/oct.js" type="text/javascript"></script></div><div style="display: none; visibility: hidden;"></div><div style="display: none; visibility: hidden;"></div><div style="display: none; visibility: hidden;"></div><div style="display: none; visibility: hidden;"></div><script type="text/javascript" id="">var firstSessionDate=google_tag_manager["GTM-WR6LD2P"].macro(1),lastSessionDate=google_tag_manager["GTM-WR6LD2P"].macro(2),currentSessionDate=google_tag_manager["GTM-WR6LD2P"].macro(3),sessionNumber=google_tag_manager["GTM-WR6LD2P"].macro(4)||1,inSession=google_tag_manager["GTM-WR6LD2P"].macro(5),daysSinceLastSession=0,currentTime=new Date,longExpiry=15768E8;
if("undefined"===typeof firstSessionDate)google_tag_manager["GTM-WR6LD2P"].macro(6)("inSession",!0,18E5,"/"),lastSessionDate=firstSessionDate=currentSessionDate=currentTime.toUTCString(),google_tag_manager["GTM-WR6LD2P"].macro(7)("firstSessionDate",firstSessionDate,longExpiry,"/"),google_tag_manager["GTM-WR6LD2P"].macro(8)("currentSessionDate",currentSessionDate,longExpiry,"/"),google_tag_manager["GTM-WR6LD2P"].macro(9)("sessionNumber",sessionNumber,longExpiry,"/"),google_tag_manager["GTM-WR6LD2P"].macro(10)("lastSessionDate",lastSessionDate,longExpiry,"/");else if("undefined"===typeof inSession&&(google_tag_manager["GTM-WR6LD2P"].macro(11)("inSession",
!0,18E5,"/"),sessionNumber=+sessionNumber+1,google_tag_manager["GTM-WR6LD2P"].macro(12)("sessionNumber",sessionNumber,longExpiry,"/"),lastSessionDate=currentSessionDate,google_tag_manager["GTM-WR6LD2P"].macro(13)("lastSessionDate",lastSessionDate,longExpiry,"/"),currentSessionDate=currentTime.toUTCString(),google_tag_manager["GTM-WR6LD2P"].macro(14)("currentSessionDate",currentSessionDate,longExpiry,"/")),"undefined"!=typeof lastSessionDate){var lastSessionMS=(new Date(lastSessionDate)).getTime();daysSinceLastSession=Math.round((currentTime.getTime()-lastSessionMS)/
864E5)}dataLayer.push({event:"Session Vars Set",daysSinceLastSession:daysSinceLastSession,firstSessionDate:firstSessionDate,lastSessionDate:lastSessionDate,sessionNumber:sessionNumber});</script>
<script type="text/javascript" id="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/api.js"></script><div style="display: none; visibility: hidden;"></div><div style="display: none; visibility: hidden;"></div><script type="text/javascript" id="">/*
 @preserve
 jquery.scrolldepth.js | v1.0
 Copyright (c) 2016 Rob Flaherty (@robflaherty)
 Licensed under the MIT and GPL licenses.
*/
(function(a){"function"===typeof define&&define.amd?define(["jquery"],a):"object"===typeof module&&module.exports?module.exports=a(require("jquery")):a(jQuery)})(function(a){var p={minHeight:0,percentage:!0,pixelDepth:!0,nonInteraction:!0,gtmOverride:!1,trackerName:!1,dataLayer:"dataLayer"},f=a(window),g=[],h=0,m;a.scrollDepth=function(b){function q(c,a,e,v){if(m&&b.pixelDepth&&2<arguments.length&&e>h){h=e;var d=!0;"undefined"!==typeof a&&"25%"!==a&&(d=!1);m({event:"ScrollDistance",scrollEventCategory:"Scroll Depth",
scrollEventAction:a,scrollEventLabel:(250*Math.floor(e/250)).toString()+"px",eventValue:1,eventNonInteraction:d})}}function r(c,d,e){a.each(c,function(c,b){-1===a.inArray(c,g)&&d>=b&&(q("Percentage",c,d,e),g.push(c))})}function t(c,a){var b,d,f,k=null,l=0,g=function(){l=new Date;k=null;f=c.apply(b,d)};return function(){var e=new Date;l||(l=e);var h=a-(e-l);b=this;d=arguments;0>=h?(clearTimeout(k),k=null,l=e,f=c.apply(b,d)):k||(k=setTimeout(g,h));return f}}function n(){f.on("scroll.scrollDepth",t(function(){var c=
a(document).height(),d=window.innerHeight?window.innerHeight:f.height();d=f.scrollTop()+d;c={"25%":parseInt(.25*c,10),"50%":parseInt(.5*c,10),"75%":parseInt(.75*c,10),"100%":c-5};var e=+new Date-u;g.length>=(b.percentage?4:0)?f.off("scroll.scrollDepth"):b.percentage&&r(c,d,e)},500))}var u=+new Date;b=a.extend({},p,b);a(document).height()<b.minHeight||(a.scrollDepth.reset=function(){g=[];h=0;f.off("scroll.scrollDepth");n()},n(),"undefined"===typeof window[b.dataLayer]||"function"!==typeof window[b.dataLayer].push||
b.gtmOverride||(m=function(a){window[b.dataLayer].push(a)}))};return a.scrollDepth});</script>
<script type="text/javascript" id="">jQuery(function(){jQuery.scrollDepth()});window.addEventListener("beforeunload",function(a){dataLayer.push({event:"pushOnUnload"})});</script>

<script type="text/javascript" id="">(function(){try{var q=function(l){var a,c,b,m,n,e,f,h="SoundCloud",d=SC.Widget(l),g=0;d.bind(SC.Widget.Events.READY,function(){d.bind(SC.Widget.Events.PLAY,function(){1E3<Date.now()-g&&d.getCurrentSound(function(c){f=c.title;a="Play";k(h,a,f);g=Date.now()})});d.bind(SC.Widget.Events.PAUSE,function(b){c=Math.round(100*b.relativePosition);100!==c&&(a="Pause",k(h,a,f))});d.bind(SC.Widget.Events.PLAY_PROGRESS,function(d){e=!1;c=Math.round(100*d.relativePosition);25!==c||b||(a="25%",e=b=!0);50!==c||m||
(a="50%",e=m=!0);75!==c||n||(a="75%",e=n=!0);e&&k(h,a,f)});d.bind(SC.Widget.Events.FINISH,function(){a="100%";b=m=n=!1;k(h,a,f)})})},k=function(b,a,c){window.dataLayer.push({event:"scEvent",eventCategory:b,eventAction:a,eventLabel:c})},g,p=document.querySelectorAll('iframe[src*\x3d"soundcloud.com"]');var b=0;for(g=p.length;b<g;b+=1)q(p[b])}catch(l){console.log("Error with SoundCloud API: "+l.message)}})();</script><script type="text/javascript" id="" src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/pub.531979.min.js"></script><script src="./Java Tip 68_ Learn how to implement the Command pattern in Java _ JavaWorld_files/init.js"></script></body></html>