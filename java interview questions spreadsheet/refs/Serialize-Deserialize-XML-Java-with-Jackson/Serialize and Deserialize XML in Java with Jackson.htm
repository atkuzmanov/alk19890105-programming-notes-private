<!DOCTYPE html>
<!-- saved from url=(0074)https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="./Serialize and Deserialize XML in Java with Jackson_files/525232124909042" async=""></script><script async="" src="./Serialize and Deserialize XML in Java with Jackson_files/fbevents.js"></script><script type="text/javascript" src="./Serialize and Deserialize XML in Java with Jackson_files/cmp.complete.bundle.js"></script><script type="text/javascript" async="" src="./Serialize and Deserialize XML in Java with Jackson_files/videoplayer.js"></script><script type="text/javascript" async="" src="./Serialize and Deserialize XML in Java with Jackson_files/prebid.js"></script>
    <link href="https://cdn.thisiswaldo.com/" rel="dns-prefetch">
    <link href="https://fonts.googleapis.com/" rel="dns-prefetch">

	
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<title>Serialize and Deserialize XML in Java with Jackson</title>
    <meta name="HandheldFriendly" content="True">
	<meta name="keywords" content="">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<!-- fav icons -->
	<link rel="shortcut icon" href="https://stackabuse.com/favicon.png">
    <link rel="apple-touch-icon" sizes="180x180" href="https://stackabuse.com/assets/images/apple-touch-icon.png?v=0879c772bf">
    <link rel="icon" type="image/png" sizes="32x32" href="https://stackabuse.com/assets/images/favicon-32x32.png?v=0879c772bf">
    <link rel="icon" type="image/png" sizes="16x16" href="https://stackabuse.com/assets/images/favicon-16x16.png?v=0879c772bf">
    <!-- header scripts -->
    <script async="" type="text/javascript" src="./Serialize and Deserialize XML in Java with Jackson_files/gpt.js"></script><script async="" src="./Serialize and Deserialize XML in Java with Jackson_files/analytics.js"></script><script id="repixel" async="" src="./Serialize and Deserialize XML in Java with Jackson_files/r.js"></script><script>
        document.addEventListener("DOMContentLoaded", function() {
            setTimeout(function() {
                var e = document.createElement("script");
                e.type="text/javascript",
                e.src="//cdn.thisiswaldo.com/static/js/3873.js",
                document.getElementsByTagName("head")[0].appendChild(e);
            }, 1000);
        }, false);
    </script>
	<!-- stylesheets -->
    <link href="./Serialize and Deserialize XML in Java with Jackson_files/css" rel="stylesheet">
	<link rel="stylesheet" href="./Serialize and Deserialize XML in Java with Jackson_files/bootstrap.min.css">
	<link rel="stylesheet" href="./Serialize and Deserialize XML in Java with Jackson_files/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="./Serialize and Deserialize XML in Java with Jackson_files/screen.css">
	<link rel="stylesheet" type="text/css" href="./Serialize and Deserialize XML in Java with Jackson_files/atom_one_dark.css">
	<script>
/*====================================================
  THEME SETTINGS & GLOBAL VARIABLES
====================================================*/
//  1. Disqus comment settings
var disqus_shortname = 'stackabuse'; // required: replace example with your forum shortname

//	2. Sidebar Position
var sidebar_left = false; // Set true or flase for positioning sidebar on left

//  3. Recent Post count
var recent_post_count = 3;

//	4. Google+ badge settings
var badge_type = 'page'; // person / page / community ----- three type of google badge
var google_plus_url = 'https://plus.google.com/111813546240107028721';

//	5. Facebook Page Setting
var facebook_page_url = 'https://www.facebook.com/stackabuse';

//	6. Twitter Setting
var twitter_url = 'https://twitter.com/ScottWRobinson';
var twitter_widget_id = '722928793669607425';
var number_of_tweet = 3;

//	7. Mailchimp signup form Setting
var mailchimp_form_url = '//stackabuse.us10.list-manage.com/subscribe/post?u=90b216fdbe02b25619ec94fc3&amp;id=bc2bb312cd';
var success_message = "Please check your inbox and confirm your email address. Thank you!";

//	8. Flickr Setting
//var flickr_id = '52617155@N08';
var flickr_id = '';
</script>
    <link rel="shortcut icon" href="https://stackabuse.com/favicon.png" type="image/png">
    <link rel="canonical" href="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/">
    <meta name="referrer" content="no-referrer-when-downgrade">
    
    <meta property="og:site_name" content="Stack Abuse">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Serialize and Deserialize XML in Java with Jackson">
    <meta property="og:description" content="Introduction
In an increasingly connected ecosystem of software systems, communication
between them has become even more paramount. In turn, several technologies have
been developed to package data being transferred or shared between these many
and different systems.

The eXtensible Markup Language, popularly known as XML, is one of the ways to
package data to be transferred. XML is a document formatting language that was
developed in the 1990s since HTML does not allow the definition of new tex">
    <meta property="og:url" content="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/">
    <meta property="article:published_time" content="2019-04-23T13:12:00.000Z">
    <meta property="article:modified_time" content="2019-04-23T14:14:58.000Z">
    <meta property="article:tag" content="java">
    <meta property="article:tag" content="xml">
    <meta property="article:tag" content="jackson">
    
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="Serialize and Deserialize XML in Java with Jackson">
    <meta name="twitter:description" content="Introduction
In an increasingly connected ecosystem of software systems, communication
between them has become even more paramount. In turn, several technologies have
been developed to package data being transferred or shared between these many
and different systems.

The eXtensible Markup Language, popularly known as XML, is one of the ways to
package data to be transferred. XML is a document formatting language that was
developed in the 1990s since HTML does not allow the definition of new tex">
    <meta name="twitter:url" content="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/">
    <meta name="twitter:label1" content="Written by">
    <meta name="twitter:data1" content="Robley Gori">
    <meta name="twitter:label2" content="Filed under">
    <meta name="twitter:data2" content="java, xml, jackson">
    <meta name="twitter:site" content="@ScottWRobinson">
    <meta name="twitter:creator" content="@ro6ley">
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Stack Abuse",
        "logo": {
            "@type": "ImageObject",
            "url": "https://stackabuse.com/favicon.png",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Robley Gori",
        "image": {
            "@type": "ImageObject",
            "url": "//www.gravatar.com/avatar/0cec6229638540e3f7d2b0cd7b041542?s=250&d=mm&r=x",
            "width": 250,
            "height": 250
        },
        "url": "https://stackabuse.com/author/robley/",
        "sameAs": [
            "https://ro6ley.github.io",
            "https://twitter.com/ro6ley"
        ]
    },
    "headline": "Serialize and Deserialize XML in Java with Jackson",
    "url": "https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/",
    "datePublished": "2019-04-23T13:12:00.000Z",
    "dateModified": "2019-04-23T14:14:58.000Z",
    "keywords": "java, xml, jackson",
    "description": "Introduction\nIn an increasingly connected ecosystem of software systems, communication\nbetween them has become even more paramount. In turn, several technologies have\nbeen developed to package data being transferred or shared between these many\nand different systems.\n\nThe eXtensible Markup Language, popularly known as XML, is one of the ways to\npackage data to be transferred. XML is a document formatting language that was\ndeveloped in the 1990s since HTML does not allow the definition of new tex",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://stackabuse.com/"
    }
}
    </script>

    <meta name="generator" content="Ghost 2.23">
    <link rel="alternate" type="application/rss+xml" title="Stack Abuse" href="https://stackabuse.com/rss/">
    <!-- Repixel Code -->
<script>
  (function(w, d, s, id, src){
  w.Repixel = r = {
    init: function(id) {
      w.repixelId = id;
    }
  };
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)){ return; }
  js = d.createElement(s); 
  js.id = id;
  js.async = true;
  js.onload = function(){
      Repixel.init(w.repixelId);
  };
  js.src = src;
  fjs.parentNode.insertBefore(js, fjs);
  }(window, document, 'script', 'repixel', 
  'https://sdk.repixel.co/r.js'));
  Repixel.init('5cefff7fce3aad00089e44e5');
</script>
<!-- Repixel Code -->
<style type="text/css">.hljs-ln{border-collapse:collapse}.hljs-ln td{padding:0}.hljs-ln-n:before{content:attr(data-line-number)}</style><script src="./Serialize and Deserialize XML in Java with Jackson_files/count-data.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script type="text/javascript" src="./Serialize and Deserialize XML in Java with Jackson_files/3873.js"></script><style type="text/css">#waldo-sticky-footer-wrapper {position: fixed; width: 100%; bottom: 0px; left: 0px; text-align: center; z-index: 9000;}#waldo-sticky-footer-wrapper > div {position: relative; display: inline-block}#waldo-sticky-footer-wrapper iframe, #waldo-sticky-footer-wrapper div {margin-left: auto;margin-right: auto;}.waldo-sticky-sidebar{position: fixed; top: 10px;z-index: 90}.waldo-sticky-css{position: sticky; top: 10px; z-index: 90}.waldo-overlay{position: fixed;height: 100%;width: 100%;top: 0;left: 0;z-index: 105;background: rgba(0,0,0,0.7);}#waldo-counter {position: absolute;bottom: 0;right: 0;color: #fff;font-size: 30px;padding: 15px;}.waldo-bfleft {position: fixed; left: 0; top: 10px;z-index:101;}.waldo-bfright {position: fixed; right: 0; top: 10px;z-index:101;}#waldo-tag-6038 {clear: both !important;}div[class^="app_gdpr-"] a {color: #41afbb !important; text-decoration: underline !important}#waldo-close-button a {border: 1px solid rgba(0,0,0,.35);padding: 3px;font-size: 12px;color: #fff;font-weight: bold;background-color: #777;}</style><script type="text/javascript">googletag.cmd.push(function() {gptAdSlots[3874] = googletag.defineSlot('/124067137/stackabuse300x250FL_1', [[300, 250], [300, 600]], 'waldo-tag-3874').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[300, 250], [300, 600]]).addSize([768, 0], [[300, 250], [300, 600]]).addSize([0, 0], [[300, 250], [300, 600]]).build()).addService(googletag.pubads());gptAdSlots[3876] = googletag.defineSlot('/124067137/stackabuse300x250FL_2', [[300, 250], [300, 600]], 'waldo-tag-3876').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[300, 250], [300, 600]]).addSize([768, 0], [[300, 250], [300, 600]]).addSize([0, 0], [[300, 250], [300, 600]]).build()).addService(googletag.pubads());gptAdSlots[3878] = googletag.defineSlot('/124067137/stackabuse728x90FS_1', [[728, 90], [320, 50]], 'waldo-tag-3878').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90]]).addSize([768, 0], [[320, 50]]).addSize([0, 0], [[320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3880] = googletag.defineSlot('/124067137/stackabuse728x90FS_2', [[728, 90], [300, 250], [320, 50]], 'waldo-tag-3880').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90], [300, 250]]).addSize([768, 0], [[300, 250], [320, 50]]).addSize([0, 0], [[300, 250], [320, 50]]).build()).addService(googletag.pubads());gptAdSlots[3884] = googletag.defineSlot('/124067137/stackabuse728x90FS_3', [[728, 90], [300, 250], [320, 50]], 'waldo-tag-3884').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[728, 90], [300, 250]]).addSize([768, 0], [[300, 250], [320, 50]]).addSize([0, 0], [[300, 250], [320, 50]]).build()).addService(googletag.pubads());gptAdSlots[7184] = googletag.defineSlot('/124067137/stackabuse300x250FL_3', [[300, 250], [300, 600]], 'waldo-tag-7184').defineSizeMapping(googletag.sizeMapping().addSize([1024, 0], [[300, 250], [300, 600]]).addSize([768, 0], [[300, 250], [300, 600]]).addSize([0, 0], [[300, 250], [300, 600]]).build()).addService(googletag.pubads());googletag.pubads().enableSingleRequest();googletag.pubads().addEventListener('slotRenderEnded', function(event) {waldoAddCloseBtn(event); waldoPassbackInit(event);});googletag.pubads().disableInitialLoad();googletag.enableServices();});</script><link rel="preload" href="./Serialize and Deserialize XML in Java with Jackson_files/f.txt" as="script"><script type="text/javascript" src="./Serialize and Deserialize XML in Java with Jackson_files/f.txt"></script><link rel="preload" href="./Serialize and Deserialize XML in Java with Jackson_files/f(1).txt" as="script"><script type="text/javascript" src="./Serialize and Deserialize XML in Java with Jackson_files/f(1).txt"></script><script src="./Serialize and Deserialize XML in Java with Jackson_files/pubads_impl_2020020305.js" async=""></script><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><iframe src="./Serialize and Deserialize XML in Java with Jackson_files/serve.html" id="bidt-sra" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="1" height="1"></iframe><style>[data-ad-unit="LEFT_RAIL_DYNAMIC"]{display:none !important}</style><style>[data-ad-unit="LEFT_RAIL"]{display:none !important}</style><img src="./Serialize and Deserialize XML in Java with Jackson_files/notify"><img src="./Serialize and Deserialize XML in Java with Jackson_files/notify(1)"></head>
<body class="post-template tag-java tag-xml tag-jackson"><div id="MathJax_Message" style="display: none;"></div>
	<nav class="navbar navbar-default navbar-static-top">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <i class="fa fa-bars"></i>
      </button>
      <a class="navbar-brand" href="https://stackabuse.com/">Stack <span style="color:#f16334;">Abuse</span></a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
      <ul class="nav navbar-nav" role="navigation" aria-label="Site navigation">
	<li class="nav-node-js"><a href="https://stackabuse.com/tag/node/">Node.js</a></li>
	<li class="nav-python"><a href="https://stackabuse.com/tag/python">Python</a></li>
	<li class="nav-java"><a href="https://stackabuse.com/tag/java/">Java</a></li>
    <li class="nav-hireremote">
        <a rel="noopener nofollow" target="_blank" href="https://hireremote.io/" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Nav-Link">
            Jobs
        </a>
    </li>
</ul>

      <!--<ul class="nav navbar-nav pull-right">
        <li role="presentation">
          <a class="btn btn-success nav-btn" href="http://jobs.stackabuse.com">Find a Job</a>
        </li>
        <li role="presentation">
          <a class="btn btn-danger nav-btn" href="http://jobs.stackabuse.com/post">Post a Job</a>
        </li>
      </ul>-->
    </div><!--/.nav-collapse -->
  </div>
</nav>
	<!-- start site's main content area -->
<section class="content-wrap">
	<div class="container">
		<div class="row">
			<!-- start main post area -->
			<div class="col-md-8 main-content">
				<!-- start post -->
				<article id="5d2e2f5a2ad4a010f9ee62f7" class="post tag-java tag-xml tag-jackson">
					<div class="post-head">
						<h2 class="post-title">Serialize and Deserialize XML in Java with Jackson</h2>
						<div class="post-meta">
							<span class="author">
                                By
                                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/ro6ley">
                                    <i class="fa fa-twitter" style="color:#55acee;"></i>
                                    Robley Gori
                                </a>
                            </span> •
							<span class="date">April 23, 2019</span> •
							<span class="comment-count"><a href="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/#disqus_thread">1 Comment</a></span>
						</div>
					</div>
                    <div class="post-ad">
                        <!-- 728x90/320x50 -->
<div id="waldo-tag-3878" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() {googletag.display('waldo-tag-3878'); });</script><span id="_waldo-tag-3878-3-container"></span></div>                    </div>
					<div class="post-content">
						<!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><h3 id="introduction">Introduction</h3>
<p>In an increasingly connected ecosystem of software systems, communication between them has become even more paramount. In turn, several technologies have been developed to package data being transferred or shared between these many and different systems.</p>
<p>The <strong>eXtensible Markup Language</strong>, popularly known as <strong>XML</strong>, is one of the ways to package data to be transferred. XML is a document formatting language that was developed in the 1990s since HTML does not allow the definition of new text elements, i.e. it is not extensible. In addition to being extensible, data in XML is self-describing, making it human readable and easy to comprehend.</p>
<p>In this post, we will explore XML manipulation in Java using the <a rel="nofollow noopener" target="_blank" href="https://github.com/FasterXML/jackson">Jackson library</a>.</p>
<h3 id="advantagesanddisadvantagesofxml">Advantages and Disadvantages of XML</h3>
<p>XML is still popular and in use in some systems since it has some advantages, but also newer technologies have come up to cater for some of its shortcomings.</p>
<p>Some of the advantages of XML include:</p>
<ul>
<li>XML is not tied to a single platform or programming language and can be used on many different systems easily. This makes it suitable for facilitating communication between systems with different hardware and software configurations.</li>
<li>The data contained in an XML document can be validated using a document type definition (DTD), or XML schema. This is a set of markup declarations that define the building blocks of an XML document.</li>
<li>Through its support for Unicode, XML can contain information written in any language or format without losing any information or contents in the process.</li>
<li>Through its compatibility with HTML, it is easy to read and display data contained in an XML document by using HTML.</li>
<li>The information stored in an XML document can be modified at any given time without affecting the presentation of the data through other mediums such as HTML.</li>
</ul>
<p>Some of the shortcomings of XML that have been resolved in new technologies include:</p>
<ul>
<li>The syntax is quite redundant and verbose as compared to other formats, such as JSON, which as short and straight to the point.</li>
<li>Due to its syntax and verbose nature, XML documents are usually large, which may result in extra storage and transportation costs.</li>
<li>It has no support for arrays.</li>
</ul>
<h3 id="xmllibraries">XML Libraries</h3>
<p>Manipulating XML in Java can be a tedious process, so to ease the process and hasten development there are various libraries we can use. They include:</p>
<ul>
<li><a rel="nofollow noopener" target="_blank" href="https://github.com/jhannes/eaxy">Eaxy</a> which is a small and simple library for building, manipulating, parsing and searching XML.</li>
<li><a rel="nofollow noopener" target="_blank" href="https://github.com/eclipse-ee4j/jaxb-ri">Java Architecture for XML Binding (JAXB)</a> is a framework for mapping Java classes to XML representations through marshalling Java objects into XML and unmarshalling XML into Java objects. It is part of the Java SE platform.</li>
<li><a rel="nofollow noopener" target="_blank" href="https://github.com/FasterXML/jackson-dataformat-xml">Jackson</a> is a library for handling JSON in Java systems and now has support for XML from version 2.</li>
<li><a rel="nofollow noopener" target="_blank" href="https://github.com/dom4j/dom4j">DOM4J</a> is a memory-efficient library for parsing XML, XPath, and XSLT (eXtensible Stylesheet Language).</li>
<li><a rel="nofollow noopener" target="_blank" href="http://jdom.org/">JDom</a> which is an XML parsing library with support for XPath and XSLT.</li>
</ul>
<h3 id="whatisjackson">What is Jackson?</h3>
<p>The Jackson project is a collection of data processing tools for the Java language and the JVM platform. It supports a wide range of data formats such as CSV, Java Properties, XML, and YAML through extension components that support the specific language.</p>
<p>The Jackson XML component is meant for reading and writing XML data by emulating how JAXB works, although not conclusively.</p>
<p>In this article we will use the Jackson library to serialize Java objects into XML and deserialize them back into Java objects.</p>
<h3 id="projectsetup">Project Setup</h3>
<p>First, let us set up a fresh Maven project:</p>
<pre><code class="language-sh hljs">$ mvn archetype:generate -DgroupId=com.stackabuse -DartifactId=xmltutorial -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=<span class="hljs-literal">false</span>
</code></pre>
<p>With our project generated, let us add the Jackson dependency in our <code>pom.xml</code> file. Delete the existing dependencies section and replace it with:</p>
<pre><code class="language-xml hljs"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>

  <span class="hljs-comment">&lt;!-- Jackson dependency for XML manipulation --&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span>
    <span class="hljs-comment">&lt;!--
    This plugin configuration will enable Maven to include the project dependencies
    in the produced jar file.
    It also enables us to run the jar file using `java -jar command`
    --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-shade-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">executions</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">execution</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">phase</span>&gt;</span>package<span class="hljs-tag">&lt;/<span class="hljs-name">phase</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">goals</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">goal</span>&gt;</span>shade<span class="hljs-tag">&lt;/<span class="hljs-name">goal</span>&gt;</span>
          <span class="hljs-tag">&lt;/<span class="hljs-name">goals</span>&gt;</span>
          <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span>
            <span class="hljs-tag">&lt;<span class="hljs-name">transformers</span>&gt;</span>
              <span class="hljs-tag">&lt;<span class="hljs-name">transformer</span>
                  <span class="hljs-attr">implementation</span>=<span class="hljs-string">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span>
                <span class="hljs-tag">&lt;<span class="hljs-name">mainClass</span>&gt;</span>com.stackabuse.App<span class="hljs-tag">&lt;/<span class="hljs-name">mainClass</span>&gt;</span>
              <span class="hljs-tag">&lt;/<span class="hljs-name">transformer</span>&gt;</span>
            <span class="hljs-tag">&lt;/<span class="hljs-name">transformers</span>&gt;</span>
          <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span>
        <span class="hljs-tag">&lt;/<span class="hljs-name">execution</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">executions</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span>
</code></pre>
<p>We can now test the project we have set up by running the following commands:</p>
<pre><code class="language-sh hljs">$ mvn package
$ java -jar target/java -jar target/xmltutorial-1.0.jar
</code></pre>
<p>The output should be <code>Hello World!</code> printed on our terminal showing that our project is ready for the next step of the project.</p>
<h3 id="javaobjectserializationintoxml">Java Object Serialization into XML</h3>
<p>Java objects have attributes and methods to manipulate these attributes. In relation to an XML document, the elements in the document can be mapped to attributes of a Java object.</p>
<p><em>In the serialization process, an object's attributes are converted into XML elements and stored in an XML document.</em></p>
<p>We will use a <code>PhoneDetails</code> class that will define information about a particular phone model, such as its name, display size, and internal storage capacity. In our class, these will be attributes, but in our XML document, these details will be contained in tags or elements.</p>
<p>Let us start by defining the <code>PhoneDetails</code> class that will be used to generate our objects:</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PhoneDetails</span> </span>{
    <span class="hljs-keyword">private</span> String name;
    <span class="hljs-keyword">private</span> String displaySize;
    <span class="hljs-keyword">private</span> String memory;

    <span class="hljs-comment">// getters and setters</span>
}
</code></pre>
<p>With our object set, let us modify our <code>App.java</code> and add a function to handle the serialization to XML:</p>
<pre><code class="language-java hljs"><span class="hljs-comment">/**
* This function writes serializes the Java object into XML and writes it
* into an XML file.
*/</span>
<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">serializeToXML</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">try</span> {
        XmlMapper xmlMapper = <span class="hljs-keyword">new</span> XmlMapper();

        <span class="hljs-comment">// serialize our Object into XML string</span>
        String xmlString = xmlMapper.writeValueAsString(<span class="hljs-keyword">new</span> PhoneDetails(<span class="hljs-string">"OnePlus"</span>, <span class="hljs-string">"6.4"</span>, <span class="hljs-string">"6/64 GB"</span>));

        <span class="hljs-comment">// write to the console</span>
        System.out.println(xmlString);

        <span class="hljs-comment">// write XML string to file</span>
        File xmlOutput = <span class="hljs-keyword">new</span> File(<span class="hljs-string">"serialized.xml"</span>);
        FileWriter fileWriter = <span class="hljs-keyword">new</span> FileWriter(xmlOutput);
        fileWriter.write(xmlString);
        fileWriter.close();
    } <span class="hljs-keyword">catch</span> (JsonProcessingException e) {
        <span class="hljs-comment">// handle exception</span>
    } <span class="hljs-keyword">catch</span> (IOException e) {
        <span class="hljs-comment">// handle exception</span>
    }
}

<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
    System.out.println(<span class="hljs-string">"Serializing to XML..."</span>);
    serializeToXML();
}
</code></pre>
<p>Let us package and run our project once again:</p><div><!-- 728x90/300x250/320x50 --><div id="waldo-tag-3880" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() {googletag.display('waldo-tag-3880'); });</script><div id="_waldo-tag-3880-2-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3880-2" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="728" height="90" src="./Serialize and Deserialize XML in Java with Jackson_files/render.html">
    </iframe></div></div></div>
<pre><code class="language-sh hljs">$ mvn package
$ java -jar target/xmltutorial-1.0.jar
</code></pre>
<p>The output on the terminal is:</p>
<pre><code class="hljs">&lt;PhoneDetails&gt;&lt;name&gt;OnePlus&lt;/name&gt;&lt;displaySize&gt;6.4&lt;/displaySize&gt;&lt;memory&gt;6/64 GB&lt;/memory&gt;&lt;/PhoneDetails&gt;
</code></pre>
<p>In the root folder of our project, the <code>serialized.xml</code> file is created containing this information. We have successfully serialized our Java object into XML and written it into an XML file.</p>
<p>In our <code>serializeToXML()</code> function, we create an <code>XmlMapper</code> object, which is a child class to the <code>ObjectMapper</code> class used in JSON serialization. This class converts our Java Object into an XML output that we can now write to file.</p>
<h3 id="deserializationfromxml">Deserialization from XML</h3>
<p>Jackson also allows us to read the contents of an XML file and deserialize the XML String back into a Java object. In our example, we will read an XML document containing details about a phone, and use Jackson to extract this data and use it to create Java objects containing the same information.</p>
<p>First, let us create an XML document matching our class to read from. Create <code>to_deserialize.xml</code> with the following contents:</p>
<pre><code class="language-xml hljs"><span class="hljs-tag">&lt;<span class="hljs-name">PhoneDetails</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>iPhone<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">displaySize</span>&gt;</span>6.2<span class="hljs-tag">&lt;/<span class="hljs-name">displaySize</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">memory</span>&gt;</span>3/64 GB<span class="hljs-tag">&lt;/<span class="hljs-name">memory</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">PhoneDetails</span>&gt;</span>
</code></pre>
<p>Let us add a <code>deserializeFromXML()</code> function to deserialize the XML file above into a Java object:</p>
<pre><code class="language-java hljs"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">deserializeFromXML</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">try</span> {
        XmlMapper xmlMapper = <span class="hljs-keyword">new</span> XmlMapper();

        <span class="hljs-comment">// read file and put contents into the string</span>
        String readContent = <span class="hljs-keyword">new</span> String(Files.readAllBytes(Paths.get(<span class="hljs-string">"to_deserialize.xml"</span>)));

        <span class="hljs-comment">// deserialize from the XML into a Phone object</span>
        PhoneDetails deserializedData = xmlMapper.readValue(readContent, PhoneDetails.class);

        <span class="hljs-comment">// Print object details</span>
        System.out.println(<span class="hljs-string">"Deserialized data: "</span>);
        System.out.println(<span class="hljs-string">"\tName: "</span> + deserializedData.getName());
        System.out.println(<span class="hljs-string">"\tMemory: "</span> + deserializedData.getMemory());
        System.out.println(<span class="hljs-string">"\tDisplay Size: "</span> + deserializedData.getDisplaySize());
    } <span class="hljs-keyword">catch</span> (IOException e) {
        <span class="hljs-comment">// handle the exception</span>
    }
}

<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
    System.out.println(<span class="hljs-string">"Deserializing from XML..."</span>);
    deserializeFromXML();
}
</code></pre>
<p>We package and run our project as usual and the output is:</p>
<pre><code class="hljs">Deserializing from XML...

Deserialized data:
    Name: iPhone
    Memory: 3/64 GB
    Display Size: 6.2
</code></pre>
<p>Our XML file has been successfully deserialized and all the data has been extracted through the help of the Jackson library.</p>
        <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">
            <form action="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/#" method="post" class="form-inline validate" novalidate="">
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and jobs in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row" style="margin-left: 10px;margin-right: 10px;">
                    <div class="col-md-7 col-md-offset-1 col-xs-12" style="margin-bottom: 5px;">
                        <label class="control-label sr-only" for="section-newsletter">Newsletter Signup</label>
                        <input id="section-newsletter" type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-3 col-xs-12" style="margin-top: 5px;">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-block btn-subscribe" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->
    
<h3 id="jacksonannotations">Jackson Annotations</h3>
<p>Annotations are used to add metadata to our Java code and they have no direct effect on the execution of the code they are attached to. They are used to give instructions to the compiler during compile time and runtime.</p>
<p>Jackson uses annotations for various functions such as defining whether we are mapping to XML or JSON, define the order of attributes and fields in our output or their names.</p>
<p>These annotations are usually applied in our Java POJOs (Plain Old Java Objects). For instance, we can annotate our <code>PhoneDetails</code> class as follows:</p>
<pre><code class="language-java hljs"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PhoneDetails</span> </span>{

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"phone_name"</span>)
    <span class="hljs-keyword">private</span> String name;

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"display_size"</span>)
    <span class="hljs-keyword">private</span> String displaySize;

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"internal_memory"</span>)
    <span class="hljs-keyword">private</span> String memory;

    <span class="hljs-comment">// rest of the code remains as is</span>
}
</code></pre>
<p>The <code>@JsonProperty</code> annotation helps define the name of the fields in our XML file. With this annotation added, the tags in our XML output and input files will have to resemble the strings in the annotation as follows:</p>
<pre><code class="language-xml hljs"><span class="hljs-tag">&lt;<span class="hljs-name">PhoneDetails</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">phone_name</span>&gt;</span>OnePlus<span class="hljs-tag">&lt;/<span class="hljs-name">phone_name</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">display_size</span>&gt;</span>6.4<span class="hljs-tag">&lt;/<span class="hljs-name">display_size</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">internal_memory</span>&gt;</span>6/64 GB<span class="hljs-tag">&lt;/<span class="hljs-name">internal_memory</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">PhoneDetails</span>&gt;</span>
</code></pre>
<p>Another notable annotation is the <code>@JacksonXmlText</code> that indicates that an element should be displayed as plain text without any tags or another element containing it.</p>
<p>The <code>@JacksonXmlProperty</code> annotation can be used to control the details of the attribute or element being displayed. Such details can include the namespace of the element. Namespaces are a way of assigning elements to a particular group.</p>
<p>One main use for namespaces is to avoid conflicts when using similar tags in the document, they help isolate tags by a group to remove any ambiguity that may arise as XML documents scale.</p>
<p>The order of the properties can also be specified using a <code>@JsonPropertyOrder</code> annotation. For instance, to reverse the order of the elements in the XML document output, the annotation is used as follows:</p>
<pre><code class="language-java hljs"><span class="hljs-meta">@JsonPropertyOrder</span>({ <span class="hljs-string">"internal_memory"</span>, <span class="hljs-string">"display_size"</span>, <span class="hljs-string">"phone_name"</span> })
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PhoneDetails</span> </span>{

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"phone_name"</span>)
    <span class="hljs-keyword">private</span> String name;

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"display_size"</span>)
    <span class="hljs-keyword">private</span> String displaySize;

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"internal_memory"</span>)
    <span class="hljs-keyword">private</span> String memory;

    ...
</code></pre>
<p>The output of serialization to XML will now be:</p>
<pre><code class="language-xml hljs"><span class="hljs-tag">&lt;<span class="hljs-name">PhoneDetails</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">internal_memory</span>&gt;</span>6/64 GB<span class="hljs-tag">&lt;/<span class="hljs-name">internal_memory</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">display_size</span>&gt;</span>6.4<span class="hljs-tag">&lt;/<span class="hljs-name">display_size</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">phone_name</span>&gt;</span>OnePlus<span class="hljs-tag">&lt;/<span class="hljs-name">phone_name</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">PhoneDetails</span>&gt;</span>
</code></pre>
<p>If there are fields in Java objects that we do not wish to be serialized, we can use the <code>@JsonIgnore</code> annotation and the fields will be omitted during serialization and deserialization.</p><div><!-- 728x90/300x250/320x50 --><div id="waldo-tag-3884" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() {googletag.display('waldo-tag-3884'); });</script><span id="_waldo-tag-3884-4-container" style="margin: auto; text-align: center;"></span></div></div>
<p>Jackson annotations are useful in defining and controlling the process of serialization and deserialization across various formats such as XML, JSON, and YAML. Some annotations work for all formats and some are tied to a specific type of file.</p>
<p>More Jackson annotations and their uses can be found in this <a rel="nofollow noopener" target="_blank" href="https://github.com/FasterXML/jackson-annotations/wiki/Jackson-Annotations">official wiki</a> on Github.</p>
<h3 id="manipulatingnestedelementsandlistsinxml">Manipulating Nested Elements and Lists in XML</h3>
<p>Having learned about annotations, let us enhance our XML file to add nested elements and loops and modify our code to serialize and deserialize the following updated structure:</p>
<pre><code class="language-xml hljs"><span class="hljs-tag">&lt;<span class="hljs-name">PhoneDetails</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">internal_memory</span>&gt;</span>3/64 GB<span class="hljs-tag">&lt;/<span class="hljs-name">internal_memory</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">display_size</span>&gt;</span>6.2<span class="hljs-tag">&lt;/<span class="hljs-name">display_size</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">phone_name</span>&gt;</span>iPhone X<span class="hljs-tag">&lt;/<span class="hljs-name">phone_name</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">manufacturer</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">manufacturer_name</span>&gt;</span>Apple<span class="hljs-tag">&lt;/<span class="hljs-name">manufacturer_name</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">country</span>&gt;</span>USA<span class="hljs-tag">&lt;/<span class="hljs-name">country</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">other_phones</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">phone</span>&gt;</span>iPhone 8<span class="hljs-tag">&lt;/<span class="hljs-name">phone</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">phone</span>&gt;</span>iPhone 7<span class="hljs-tag">&lt;/<span class="hljs-name">phone</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">phone</span>&gt;</span>iPhone 6<span class="hljs-tag">&lt;/<span class="hljs-name">phone</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">other_phones</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">manufacturer</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">PhoneDetails</span>&gt;</span>
</code></pre>
<p>In this new structure, we have introduced a nested <code>Manufacturer</code> element which also includes a list of elements. With our current code, we cannot extract or create the new nested section.</p>
<p>To fix this, a new class to handle the nested element is required, and to that effect, this is part of our new <code>Manufacturer</code> class:</p>
<pre><code class="language-java hljs"><span class="hljs-comment">// define the order of elements</span>
<span class="hljs-meta">@JsonPropertyOrder</span>({ <span class="hljs-string">"manufacturer_name"</span>, <span class="hljs-string">"country"</span>, <span class="hljs-string">"other_phones"</span> })
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Manufacturer</span> </span>{
    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"manufacturer_name"</span>)
    <span class="hljs-keyword">private</span> String name;

    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"country"</span>)
    <span class="hljs-keyword">private</span> String country;

    <span class="hljs-comment">// new annotation</span>
    <span class="hljs-meta">@JacksonXmlElementWrapper</span>(localName=<span class="hljs-string">"other_phones"</span>)
    <span class="hljs-keyword">private</span> List&lt;String&gt; phone;

    ...
</code></pre>
<p>It is quite similar to our <code>PhoneDetails</code> class but we have now introduced a new annotation: <code>@JacksonXmlElementWrapper</code>. The purpose of this annotation is to define whether a collection of elements uses or does not use a wrapper element, and can be used to dictate the wrapper elements local name and namespace.</p>
<p>In our example, we use the annotation to define the element that contains a list of elements and the tag to be used for that element. This will be used when serializing and deserializing our XML files.</p>
<p>This change in our XML structure and introduction of this class requires us to modify our <code>PhoneDetails</code> class to reflect:</p>
<pre><code class="language-java hljs"><span class="hljs-comment">// existing code remains</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PhoneDetails</span> </span>{
    <span class="hljs-comment">// existing code remains</span>
    <span class="hljs-meta">@JsonProperty</span>(<span class="hljs-string">"manufacturer"</span>)
    <span class="hljs-keyword">private</span> Manufacturer manufacturer;

    <span class="hljs-comment">// standard getters and setters for the new element</span>

    ...
</code></pre>
<p>Our <code>PhoneDetails</code> object will now be able to include information about a phone's manufacturer.</p>
<p>Next, we update our <code>serializeToXML()</code> method:</p>
<pre><code class="language-java hljs"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">serializeToXML</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">try</span> {
        XmlMapper xmlMapper = <span class="hljs-keyword">new</span> XmlMapper();

        <span class="hljs-comment">// create a list of other phones</span>
        List&lt;String&gt; otherPhones = Arrays.asList(<span class="hljs-string">"OnePlus 6T"</span>, <span class="hljs-string">"OnePlus 5T"</span>, <span class="hljs-string">"OnePlus 5"</span>);

        <span class="hljs-comment">// create the manufacturer object</span>
        Manufacturer manufacturer = <span class="hljs-keyword">new</span> Manufacturer(<span class="hljs-string">"OnePlus"</span>, <span class="hljs-string">"China"</span>, otherPhones);

        <span class="hljs-comment">// serialize our new Object into XML string</span>
        String xmlString = xmlMapper
          .writeValueAsString(<span class="hljs-keyword">new</span> PhoneDetails(<span class="hljs-string">"OnePlus"</span>, <span class="hljs-string">"6.4"</span>, <span class="hljs-string">"6/64 GB"</span>, manufacturer));

        <span class="hljs-comment">// write to the console</span>
        System.out.println(xmlString);

        <span class="hljs-comment">// write XML string to file</span>
        File xmlOutput = <span class="hljs-keyword">new</span> File(<span class="hljs-string">"serialized.xml"</span>);
        FileWriter fileWriter = <span class="hljs-keyword">new</span> FileWriter(xmlOutput);
        fileWriter.write(xmlString);
        fileWriter.close();
    } <span class="hljs-keyword">catch</span> (JsonProcessingException e) {
        <span class="hljs-comment">// handle the exception</span>
    } <span class="hljs-keyword">catch</span> (IOException e) {
        <span class="hljs-comment">// handle the exception</span>
    }
}
</code></pre>
<p>The result of serializing the new <code>PhoneDetails</code> object with the <code>Manufacturer</code> information is:</p>
<pre><code class="hljs">Serializing to XML...

&lt;PhoneDetails&gt;&lt;internal_memory&gt;6/64 GB&lt;/internal_memory&gt;&lt;display_size&gt;6.4&lt;/display_size&gt;&lt;phone_name&gt;OnePlus&lt;/phone_name&gt;&lt;manufacturer&gt;&lt;manufacturer_name&gt;OnePlus&lt;/manufacturer_name&gt;&lt;country&gt;China&lt;/country&gt;&lt;other_phones&gt;&lt;phones&gt;OnePlus 6T&lt;/phones&gt;&lt;phones&gt;OnePlus 5T&lt;/phones&gt;&lt;phones&gt;OnePlus 5&lt;/phones&gt;&lt;/other_phones&gt;&lt;/manufacturer&gt;&lt;/PhoneDetails&gt;
</code></pre>
<p>It works! Our <code>deserializeFromXML()</code> function, on the other hand, does not need a major update since the <code>PhoneDetails</code> class, when deserialized, will also include manufacturer information.</p>
<p>Let us add the following code to print out the manufacturer's details just to be sure:</p>
<pre><code class="language-java hljs"><span class="hljs-comment">// existing code remains</span>

<span class="hljs-comment">// Print object details</span>
System.out.println(<span class="hljs-string">"Deserialized data: "</span>);
System.out.println(<span class="hljs-string">"\tName: "</span> + deserializedData.getName());
System.out.println(<span class="hljs-string">"\tMemory: "</span> + deserializedData.getMemory());
System.out.println(<span class="hljs-string">"\tDisplay Size: "</span> + deserializedData.getDisplaySize());
System.out.println(<span class="hljs-string">"\tManufacturer Name: "</span> + deserializedData.getManufacturer().getName());
System.out.println(<span class="hljs-string">"\tManufacturer Country: "</span> + deserializedData.getManufacturer().getCountry());
System.out.println(<span class="hljs-string">"\tManufacturer Other Phones: "</span> + deserializedData.getManufacturer().getPhone().toString());

<span class="hljs-comment">// existing code remains</span>
</code></pre>
<p>The output:</p>
<pre><code class="hljs">Deserializing from XML...

Deserialized data:
    Name: iPhone X
    Memory: 3/64 GB
    Display Size: 6.2
    Manufacturer Name: Apple
    Manufacturer Country: USA
    Manufacturer Other Phones: [iPhone 8, iPhone 7, iPhone 6]
</code></pre>
<p>The deserialization process is seamless and the new manufacturer details have been extracted from our updated XML file.</p>
<h3 id="conclusion">Conclusion</h3>
<p>In this post, we have learned about XML and how to serialize data into XML documents as well as deserializing to extract data from XML documents.</p>
<p>We have also learned about annotations and how Jackson uses annotations in the serialization and deserialization process.</p>
<p>XML is still widely used in various systems that we may interact with from time to time, therefore, to interact with them we will need to serialize and deserialize XML documents from time to time. We can also consume XML APIs in our Java projects while exposing REST endpoints and use Jackson to convert XML input to JSON output.</p>
<p>The source code for this post is available on <a rel="nofollow noopener" target="_blank" href="https://github.com/ro6ley/java-xml">Github</a> for reference.</p>
<!--kg-card-end: markdown--><!--kg-card-end: markdown-->
					</div>
					<footer class="post-footer clearfix">
						<div class="pull-left tag-list">
							<i class="fa fa-folder-open-o"></i>
							<a href="https://stackabuse.com/tag/java/">java</a>,<a href="https://stackabuse.com/tag/xml/">xml</a>,<a href="https://stackabuse.com/tag/jackson/">jackson</a>
						</div>
						<div class="pull-right share">
							<div>
	<ul class="share-icons">
		<!-- twitter -->
		<li>
			<a aria-label="Share on Twitter" href="https://twitter.com/share?text=Serialize%20and%20Deserialize%20XML%20in%20Java%20with%20Jackson&amp;url=https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/" onclick="window.open(this.href, &#39;twitter-share&#39;, &#39;width=550,height=235&#39;);return false;"><i class="fa fa-twitter" style="color:#55acee;"></i></a>
		</li>
		<!-- facebook -->
		<li>
			<a aria-label="Share on Facebook" href="https://www.facebook.com/sharer/sharer.php?u=https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/" onclick="window.open(this.href, &#39;facebook-share&#39;,&#39;width=580,height=296&#39;);return false;"><i class="fa fa-facebook" style="color:#3b5998;"></i></a>
		</li>
		<!-- linkedin -->
		<li>
			<a aria-label="Share on Linkedin" href="https://www.linkedin.com/shareArticle?mini=true%26url=https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/%26source=https://stackabuse.com" onclick="window.open(this.href, &#39;linkedin-share&#39;, &#39;width=490,height=530&#39;);return false;"><i class="fa fa-linkedin" style="color:#0077b5;"></i></a>
		</li>
	</ul>
</div>
						</div>
					</footer>
                    <!-- start about the author -->
<!-- end about the author -->
				</article>
                <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">
            <form action="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/#" method="post" class="form-inline validate" novalidate="">
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and jobs in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row" style="margin-left: 10px;margin-right: 10px;">
                    <div class="col-md-7 col-md-offset-1 col-xs-12" style="margin-bottom: 5px;">
                        <label class="control-label sr-only" for="section-newsletter">Newsletter Signup</label>
                        <input id="section-newsletter" type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-3 col-xs-12" style="margin-top: 5px;">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-block btn-subscribe" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->
				<div class="comment-wrap">
					<!-- start disqus comment -->
<div class="disqus-container">
	<div id="disqus_thread"></div>
	    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
</div>
<!-- end disqus comment -->
				</div>
				<!-- start prev next wrap -->
<div class="prev-next-wrap clearfix">
		<a class="btn btn-default pull-left" href="https://stackabuse.com/how-docker-can-make-your-life-easier-as-a-developer/" title="How Docker can Make your Life Easier as a Developer"><i class="fa fa-angle-left fa-fw"></i> Previous Post</a>
		&nbsp;
        <a class="btn btn-default pull-right" href="https://stackabuse.com/working-with-pdfs-in-python-reading-and-splitting-pages/" title="Working with PDFs in Python: Reading and Splitting Pages">Next Post <i class="fa fa-angle-right fa-fw"></i></a>
</div>				<!-- end post -->
			</div>
			<!-- end main post area -->
			<!-- start sidebar -->
<div class="col-md-4 sidebar">
    <!-- start widget -->
<div class="widget">
	<h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-3874" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() {googletag.display('waldo-tag-3874'); });</script><div id="_waldo-tag-3874-3-container" style="margin: auto; text-align: center;"><iframe id="waldo-tag-3874-3" scrolling="no" allowtransparency="true" frameborder="0" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" sandbox="allow-forms allow-same-origin allow-scripts allow-top-navigation allow-popups" width="300" height="250" src="./Serialize and Deserialize XML in Java with Jackson_files/render(1).html">
    </iframe></div></div>    </div>
</div>
<!-- end widget -->
    <!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-twitter fa-2x"></i>
                    <i class="hidden-xs fa fa-twitter fa-lg"></i>
                    <span class="hidden-xs">Twitter</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-facebook fa-2x"></i>
                    <i class="hidden-xs fa fa-facebook fa-lg"></i>
                    <span class="hidden-xs">Facebook</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-rss fa-2x"></i>
                    <i class="hidden-xs fa fa-rss fa-lg"></i>
                    <span class="hidden-xs">RSS</span>
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->
    <!-- start newsletter widget -->
<div class="widget">
    <h4 class="title">Newsletter</h4>
    <div class="content newsletter">
        <p style="font-size: 16px;">Subscribe to our newsletter! Get occassional tutorials, guides, and reviews in your inbox.</p>
        <form action="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/#" method="post" class="validate" novalidate="">
            <div class="input-group">
                <label class="control-label sr-only" for="widget-newsletter">Newsletter Signup</label>
                <input id="widget-newsletter" type="email" value="" name="email" class="required email input-lg" placeholder="Enter your email...">
            </div>
            <div class="input-group">
                <button type="submit" name="subscribe" class="btn btn-lg btn-default" ga-on="click" ga-event-category="Newsletter" ga-event-action="Signup" ga-event-label="General-Newsletter-Signup">
                    <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                    Subscribe
                </button>
            </div>
            <span style="color: #7f7f7f;">No spam ever. Unsubscribe at any time.</span>
        </form>
        <div class="message"></div>
    </div>
</div>
<!-- end tag cloud widget -->
    <!-- start widget -->
<div class="widget">
    <h4 class="title">
        Ad
    </h4>
    <div class="content ad" style="min-height: 250px;">
        <!-- 300x250/300x600 -->
<div id="waldo-tag-7184" data-processed="true"><script type="text/javascript">googletag.cmd.push(function() {googletag.display('waldo-tag-7184'); });</script></div>
    </div>
</div>
<!-- end widget -->
    <div class="widget-sticky" style="width: 403.328px; position: fixed; top: 10px;">
        <!-- start widget -->
<div class="widget">
    <a rel="noopener nofollow" target="_blank" class="dcp-link" href="http://stackabu.se/daily-coding-problem" style="text-decoration: none;" ga-on="click" ga-event-category="Affiliate" ga-event-action="Click" ga-event-label="DCP-Link">
        <h4 class="title">Interviewing for a job?</h4>
    </a>
    <div class="content product">
        <style type="text/css">
            #product-features li {
                margin: 5px 0;
            }
        </style>
        <div id="product-features" style="font-size: 16px;line-height: 1.7em;">
            <ul style="list-style: initial;">
                <li>
                    Improve your skills by solving one coding problem every day
                </li>
                <li>
                    Get the solutions the next morning via email
                </li>
                <li>
                    Practice on <strong>actual problems</strong> asked by top companies, like:
                    <div style="margin: 15px 0px;">
                        <img src="./Serialize and Deserialize XML in Java with Jackson_files/logo-google.svg" style="height: 16px;">
                        &nbsp;
                        <img src="./Serialize and Deserialize XML in Java with Jackson_files/logo-facebook.svg" style="height: 13px;margin-bottom: 3px;">
                        &nbsp;
                        <img src="./Serialize and Deserialize XML in Java with Jackson_files/logo-amazon.svg" style="height: 19px;">
                        &nbsp;
                        <img src="./Serialize and Deserialize XML in Java with Jackson_files/logo-microsoft.svg" style="height: 18px;">
                    </div>
                </li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-5">
                <a rel="noopener nofollow" target="_blank" class="btn btn-default dcp-link" href="http://stackabu.se/daily-coding-problem" ga-on="click" ga-event-category="Affiliate" ga-event-action="Click" ga-event-label="DCP-Link">
                    <i class="fa fa-code"></i>
                    &nbsp;
                    Daily Coding Problem
                </a>
            </div>
        </div>
    </div>
</div>
<!-- end widget -->
        <!-- start widget -->
<div class="widget">
    <h4 class="title">Want a remote job?</h4>
    <div class="content jobs hr">
        <ul style="margin-bottom: 0px;">
        <li><a aria-label="Sr. Android Engineer" rel="nofollow noopener" target="_blank" href="https://hireremote.io/remote-job/1123-sr.-android-engineer-at-socialchorus" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Sr. Android Engineer<br><span class="job-company">SocialChorus</span>&nbsp;<span class="job-posted-at">14 hours ago</span></a><div class="tags"><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-android-jobs"><span class="job-tag">android</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-java-jobs"><span class="job-tag">java</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-saas-jobs"><span class="job-tag">saas</span></a></div><hr></li><li><a aria-label="Principal Front-End Engineer" rel="nofollow noopener" target="_blank" href="https://hireremote.io/remote-job/1120-principal-front-end-engineer-at-unanet,-inc." ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Principal Front-End Engineer<br><span class="job-company">Unanet, Inc.</span>&nbsp;<span class="job-posted-at">1 day ago</span></a><div class="tags"><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-react-js-jobs"><span class="job-tag">react-js</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-javascript-jobs"><span class="job-tag">javascript</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-user-interface-jobs"><span class="job-tag">user-interface</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-angular-js-jobs"><span class="job-tag">angular-js</span></a></div><hr></li><li><a aria-label="Principal API/Backend Engineer" rel="nofollow noopener" target="_blank" href="https://hireremote.io/remote-job/1118-principal-api-backend-engineer-at-unanet,-inc." ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Job-Link">Principal API/Backend Engineer<br><span class="job-company">Unanet, Inc.</span>&nbsp;<span class="job-posted-at">1 day ago</span></a><div class="tags"><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-java-jobs"><span class="job-tag">java</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-api-jobs"><span class="job-tag">api</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-rest-jobs"><span class="job-tag">rest</span></a><a rel="nofollow noopener" target="_blank" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-Tag-Link" href="https://hireremote.io/remote-microservices-jobs"><span class="job-tag">microservices</span></a></div></li></ul>
        <div class="row">
            <div class="col-md-4">
                <strong>
                    <a rel="noopener nofollow" target="_blank" class="btn btn-default" href="https://hireremote.io/" style="margin-top: 10px;" ga-on="click" ga-event-category="Jobs" ga-event-action="Click" ga-event-label="HR-More-Link">
                        <i class="fa fa-arrow-circle-right"></i>&nbsp; More jobs
                    </a>
                </strong>
            </div>
            <div class="col-md-8 text-right" style="margin-top: 18px;">
                Jobs via
                <a rel="noopener nofollow" target="_blank" href="https://hireremote.io/" class="hr-link" style="color: #f16334;" ga-on="click" ga-event-category="Affiliate" ga-event-action="Click" ga-event-label="HR-Link">
                    HireRemote.io
                </a>
            </div>
            <!-- <div class="col-md-9 text-right">
                <span>Jobs by</span>
                <a
                    rel="noopener nofollow" target="_blank"
                    href="https://www.hireremote.io/"
                    id="jobs_widget_link"
                    ga-on="click"
                    ga-event-category="Jobs"
                    ga-event-action="Click"
                    ga-event-label="HR-Jobs-By"
                >
                    <span id="hr_logo_container">
                        <img
                            id="hr_logo"
                            src="https://www.ziprecruiter.com/img/logos/logo-sm-black-304px.png" alt="HireRemote.io"
                            width="100"
                        />
                    </span>
                </a>
            </div> -->
        </div>
    </div>
</div>
<!-- end widget -->
    </div>
</div>
<!-- end sidebar -->
		</div>
	</div>
</section>
<!-- end site's main content area -->


	<!-- start main-footer -->
	<footer class="main-footer">
		<div class="container">
			<div class="row">
				<!-- start first footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Recent Posts</h4>
    <div class="content recent-post">
        <div class="recent-single-post">
            <a href="https://stackabuse.com/using-spies-for-testing-in-javascript-with-sinon/" class="post-title">Using Spies for Testing in JavaScript with Sinon.js</a>
            <!--<div class="date">February 04, 2020</div>-->
        </div>
        <div class="recent-single-post">
            <a href="https://stackabuse.com/a-beginner-level-introduction-to-mongodb-with-node-js/" class="post-title">A Beginner-Level Introduction to MongoDB with Node.js</a>
            <!--<div class="date">February 03, 2020</div>-->
        </div>
        <div class="recent-single-post">
            <a href="https://stackabuse.com/reactive-programming-with-spring-5-webflux/" class="post-title">Reactive Programming with Spring 5 WebFlux</a>
            <!--<div class="date">January 31, 2020</div>-->
        </div>
    </div>
</div>
<!-- end widget -->				</div>
				<!-- end first footer widget area -->
				<!-- start second footer widget area -->
				<div class="col-sm-4">
					<!-- start tag cloud widget -->
<div class="widget">
    <h4 class="title">Tags</h4>
    <div class="content tag-cloud">
        <a href="https://stackabuse.com/tag/algorithms/">algorithms</a><a href="https://stackabuse.com/tag/amqp/">amqp</a><a href="https://stackabuse.com/tag/angular/">angular</a><a href="https://stackabuse.com/tag/announcements/">announcements</a><a href="https://stackabuse.com/tag/apache/">apache</a><a href="https://stackabuse.com/tag/api/">api</a><a href="https://stackabuse.com/tag/arduino/">arduino</a><a href="https://stackabuse.com/tag/artificial-intelligence/">artificial intelligence</a><a href="https://stackabuse.com/tag/asynchronous/">asynchronous</a><a href="https://stackabuse.com/tag/aws/">aws</a>
    </div>
</div>
<!-- end tag cloud widget -->
				</div>
				<!-- end second footer widget area -->
				<!-- start third footer widget area -->
				<div class="col-sm-4">
					<!-- start widget -->
<div class="widget">
    <h4 class="title">Follow Us</h4>
    <div class="content social">
        <div class="row">
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://twitter.com/StackAbuse" style="color: #38A1F3;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-twitter fa-2x"></i>
                    <i class="hidden-xs fa fa-twitter fa-lg"></i>
                    <span class="hidden-xs">Twitter</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a rel="noopener nofollow" target="_blank" href="https://www.facebook.com/stackabuse" style="color: #3b5998;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-facebook fa-2x"></i>
                    <i class="hidden-xs fa fa-facebook fa-lg"></i>
                    <span class="hidden-xs">Facebook</span>
                </a>
            </div>
            <div class="col-xs-4">
                <a target="_blank" href="https://stackabuse.com/rss/" style="color: #f7a000;">
                    <i class="hidden-lg hidden-md hidden-sm fa fa-rss fa-2x"></i>
                    <i class="hidden-xs fa fa-rss fa-lg"></i>
                    <span class="hidden-xs">RSS</span>
                </a>
            </div>
        </div>
        <!-- <ul class="social">
            <li><a href="https://twitter.com/StackAbuse"><i class="fa fa-twitter fa-lg"></i></a></li>
            <li><a href="https://www.facebook.com/stackabuse"><i class="fa fa-facebook fa-lg"></i></a></li>
            <li><a href="#"><i class="fa fa-google-plus"></i></a></li>
            <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
            <li><a href="#"><i class="fa fa-skype"></i></a></li>
            <li><a href="#"><i class="fa fa-pinterest"></i></a></li>
            <li><a href="#"><i class="fa fa-youtube"></i></a></li>
            <li><a href="#"><i class="fa fa-vimeo-square"></i></a></li>
            <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
            <li><a href="#"><i class="fa fa-flickr"></i></a></li>
            <li><a href="#"><i class="fa fa-tumblr"></i></a></li>
            <li><a href="https://github.com/scottwrobinson"><i class="fa fa-github"></i></a></li>
            <li><a href="#"><i class="fa fa-instagram"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-overflow"></i></a></li>
            <li><a href="#"><i class="fa fa-stack-exchange"></i></a></li>
            <li><a href="#"><i class="fa fa-xing"></i></a></li>
            <li><a href="#"><i class="fa fa-envelope"></i></a></li>
            <li><a href="https://stackabuse.com/rss/"><i class="fa fa-rss fa-lg"></i></a></li>
        </ul> -->
    </div>
</div>
<!-- end widget -->
				</div>
				<!-- end third footer widget area -->
			</div>
		</div>
	</footer>
	<!-- end main-footer -->
	<!-- start copyright section -->
<div class="copyright">
	<div class="container">
		<div class="row">
			<div class="col-sm-12">
				Copyright © 2020, <a href="https://stackabuse.com/">Stack Abuse</a>.  All Rights Reserved.
			</div>
		</div>
	</div>
</div>
<!-- end copyright section -->	<div class="footer-links">
		<div class="container">
			<div class="row">
				<div class="col-sm-12">
					<a href="https://stackabuse.com/disclosure">Disclosure</a>
					•
					<a href="https://stackabuse.com/privacy-policy">Privacy Policy</a>
					•
					<a href="https://stackabuse.com/terms-of-service">Terms of Service</a>
				</div>
			</div>
		</div>
	</div>
	<a aria-label="Back to Top" href="https://stackabuse.com/serialize-and-deserialize-xml-in-java-with-jackson/#" id="back-to-top" style="display: inline;"><i class="fa fa-angle-up"></i></a>
	<!--
<script src="//my.hellobar.com/4dd9990be00532b0fc7961824b7d7a0930e9e2b7.js" type="text/javascript" charset="utf-8" async="async"></script>
-->
	<!-- scripts -->
    <script id="dsq-count-scr" src="./Serialize and Deserialize XML in Java with Jackson_files/count.js" async=""></script>
    <script>
      var disqus_config = function() {
        this.page.url = window.location.href;
        this.page.identifier = window.location.href;
        this.callbacks.onReady = [function() {
          if (window.onDisqusReady) {
            window.onDisqusReady();
          }
        }];
      };
      var disqus_script_url = 'https://stackabuse.disqus.com/embed.js';
    </script>

    <!-- HTML templates for use in JS code -->
    <script id="newsletter-template" type="text/x-custom-template">
        <!-- start newsletter section -->
<div class="section">
    <div class="newsletter text-center">
        <h4 class="title">Subscribe to our Newsletter</h4>
        <div class="content">
            <form action="#" method="post" class="form-inline validate" novalidate>
                <div class="row">
                    <div class="col-md-9 col-md-offset-1 col-xs-12">
                        <p>Get occassional tutorials, guides, and jobs in your inbox. No spam ever. Unsubscribe at any time.</p>
                    </div>
                    <div class="col-md-2 col-xs-12"></div>
                </div>
                <div class="row" style="margin-left: 10px;margin-right: 10px;">
                    <div class="col-md-7 col-md-offset-1 col-xs-12" style="margin-bottom: 5px;">
                        <label class="control-label sr-only" for="section-newsletter">Newsletter Signup</label>
                        <input id="section-newsletter" type="email" value="" name="email" class="form-control input-lg required email" placeholder="Enter your email..." style="width:100%;">
                    </div>
                    <div class="col-md-3 col-xs-12" style="margin-top: 5px;">
                        <button type="submit" name="subscribe" class="btn btn-default btn-lg btn-block btn-subscribe"
                            ga-on="click"
                            ga-event-category="Newsletter"
                            ga-event-action="Signup"
                            ga-event-label="General-Newsletter-Signup"
                        >
                            <i class="fa fa-spinner fa-pulse fa-fw" style="display:none;"></i>
                            Subscribe
                        </button>
                    </div>
                </div>
            </form>
            <div class="message"></div>
        </div>
    </div>
</div>
<!-- end newsletter section -->
    </script>

    <script src="./Serialize and Deserialize XML in Java with Jackson_files/jquery.min.js" type="text/javascript"></script>
    <script src="./Serialize and Deserialize XML in Java with Jackson_files/highlight.min.js"></script>
    <script src="./Serialize and Deserialize XML in Java with Jackson_files/dockerfile.min.js"></script>
    <script src="./Serialize and Deserialize XML in Java with Jackson_files/yaml.min.js"></script>
    <script src="./Serialize and Deserialize XML in Java with Jackson_files/bootstrap-custom.min.js" async=""></script>
	<script src="./Serialize and Deserialize XML in Java with Jackson_files/main.min.js" async=""></script>
    <script src="./Serialize and Deserialize XML in Java with Jackson_files/MathJax.js" type="text/javascript" async=""></script>
	<!-- Add your analytic code below -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  if (window.location.hostname !== 'localhost') {
    ga('create', 'UA-43140675-1', 'auto');
    ga('require', 'eventTracker');
    ga('send', 'pageview');
  }

</script>
<script async="true" src="./Serialize and Deserialize XML in Java with Jackson_files/autotrack.js"></script>


</body></html>