<!DOCTYPE html>
<!-- saved from url=(0082)https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-gb" lang="en-gb" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><!--<base href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example">--><base href="."><meta name="keywords" content="Java, Hibernate, Query, Language, HQL, example"><meta name="description" content="A comprehensive tutorial and examples about various types of HQL queries in Hibernate."><meta name="generator" content="Joomla! - Open Source Content Management"><title>Hibernate Query Language (HQL) Example</title><link href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example" rel="canonical"><link href="https://www.codejava.net/templates/protostar/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon"><link rel="stylesheet" href="./Hibernate Query Language (HQL) Example_files/f6837314815f65986250d0725e882911.css" type="text/css"><link rel="stylesheet" href="./Hibernate Query Language (HQL) Example_files/font-awesome.min.css" type="text/css"><style type="text/css">@media(max-width:768px){.jf_mm_trigger,#jf_mm_menu{display:block}}
			.jf_mm_trigger{background-color:#4a5052;color:#f5f5f5}
			.jf_mm_wrapper .levelHolderClass,.jf_mm_wrapper .jf_mm_inactive{background-color:#4a5052}
			.jf_mm_wrapper li{background-color:#4a5052}
			.jf_mm_wrapper li:hover{background-color:#434749}
			.jf_mm_wrapper .backItemClass{background-color:#444444}
			.jf_mm_wrapper .backItemClass:hover{background-color:#333333}
			.jf_mm_wrapper li,.jf_mm_wrapper li:last-child,.jf_mm_wrapper .backItemClass{border-color:#5a5e5f}
			.jf_mm_wrapper h2{color:#888888}
			.jf_mm_wrapper a,.jf_mm_wrapper a:hover{color:#eeeeee}
			.jf_mm_wrapper .ltr,.jf_mm_wrapper .rtl{-webkit-box-shadow:5px 0 5px -5px #202020;-moz-box-shadow:5px 0 5px -5px #202020;box-shadow:5px 0 5px -5px #202020;}
		
#jf_mm_menu.jf_hidden{display:none!important}</style><script type="text/javascript" async="" src="./Hibernate Query Language (HQL) Example_files/analytics.js"></script><script type="text/javascript" async="" src="./Hibernate Query Language (HQL) Example_files/recaptcha__en_gb.js"></script><script src="./Hibernate Query Language (HQL) Example_files/api.js" type="text/javascript"></script><link href="./Hibernate Query Language (HQL) Example_files/css" rel="stylesheet" type="text/css"><style type="text/css">h1,h2,h3,h4,h5,h6{
        font-family: 'Open Sans', sans-serif;
      }</style><!--[if lt IE 9]><script src="/media/jui/js/html5.js"></script><![endif]--><script async="" src="./Hibernate Query Language (HQL) Example_files/js"></script><script>window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-29498384-2');</script></head><body class="site com_content view-article no-layout no-task itemid-514"><!-- Body --><div class="body"><div class="container"><!-- Header --><header class="header" role="banner"><div class="header-inner clearfix"><a class="brand pull-left" href="https://www.codejava.net/"><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b><font size="45" color="white">Code</font><font size="45" color="red">Java</font></b><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i><font size="4" color="white">Coding Your Passion</font></i></a><div id="jf_mm_menu" class="" style="height: 100px; min-height: 100px; width: 0px;"><nav id="jf_mm_menu_multilevelpushmenu" class="jf_mm_wrapper" style="min-height: 100px; height: 100%;"><div class="levelHolderClass ltr jf_mm_inactive" data-level="0" style="margin-left: -200px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="fa fa-times floatRight cursorPointer"></i>CodeJava.net</h2><ul style="display: none;"><li class="item-101 default active" style="text-align: left"><a href="https://www.codejava.net/"><img class="jf_mm_a_img menu-image" src="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example" style="">Home</a></li><li class="item-465 deeper parent" style="text-align: left"><a href="https://www.codejava.net/java-core"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Java Core</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Java Core</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-499" style="text-align: left"><a href="https://www.codejava.net/java-core/the-java-language">The Java Language</a></li><li class="item-856" style="text-align: left"><a href="https://www.codejava.net/java-core/collections">Generics &amp; Collections</a></li><li class="item-859" style="text-align: left"><a href="https://www.codejava.net/java-core/tools">Tools</a></li><li class="item-964" style="text-align: left"><a href="https://www.codejava.net/java-core/exception">Exception Handling</a></li><li class="item-965" style="text-align: left"><a href="https://www.codejava.net/java-core/concurrency">Concurrency</a></li></ul></div></li><li class="item-850 deeper parent" style="text-align: left"><a href="https://www.codejava.net/java-se"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Java SE</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Java SE</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-851" style="text-align: left"><a href="https://www.codejava.net/java-se/swing">Swing</a></li><li class="item-852" style="text-align: left"><a href="https://www.codejava.net/java-se/applet">Applet</a></li><li class="item-853 current" style="text-align: left"><a href="https://www.codejava.net/java-se/file-io">File I/O</a></li><li class="item-854" style="text-align: left"><a href="https://www.codejava.net/java-se/graphics">2D/3D Graphics</a></li><li class="item-855" style="text-align: left"><a href="https://www.codejava.net/java-se/networking">Networking</a></li><li class="item-857" style="text-align: left"><a href="https://www.codejava.net/java-se/ftp">FTP Networking</a></li><li class="item-858" style="text-align: left"><a href="https://www.codejava.net/java-se/jdbc">JDBC</a></li></ul></div></li><li class="item-840 deeper parent" style="text-align: left"><a href="https://www.codejava.net/java-ee"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Java EE</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Java EE</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-848" style="text-align: left"><a href="https://www.codejava.net/java-ee/servlet">Servlet</a></li><li class="item-510" style="text-align: left"><a href="https://www.codejava.net/java-ee/javamail">JavaMail</a></li><li class="item-849" style="text-align: left"><a href="https://www.codejava.net/java-ee/jstl">JSTL</a></li><li class="item-513" style="text-align: left"><a href="https://www.codejava.net/java-ee/jsp">JavaServer Pages (JSP)</a></li><li class="item-980" style="text-align: left"><a href="https://www.codejava.net/java-ee/jpa">Java Persistence API</a></li><li class="item-512" style="text-align: left"><a href="https://www.codejava.net/java-ee/web-services">Web Services</a></li></ul></div></li><li class="item-470 deeper parent" style="text-align: left"><a href="https://www.codejava.net/frameworks"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Frameworks</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Frameworks</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-515" style="text-align: left"><a href="https://www.codejava.net/frameworks/spring">Spring</a></li><li class="item-981" style="text-align: left"><a href="https://www.codejava.net/frameworks/spring-boot">Spring Boot</a></li><li class="item-514" style="text-align: left"><a href="https://www.codejava.net/frameworks/hibernate">Hibernate</a></li><li class="item-516" style="text-align: left"><a href="https://www.codejava.net/frameworks/struts">Struts</a></li></ul></div></li><li class="item-472 deeper parent" style="text-align: left"><a href="https://www.codejava.net/servers"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Servers</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Servers</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-518" style="text-align: left"><a href="https://www.codejava.net/servers/tomcat">Tomcat</a></li></ul></div></li><li class="item-473" style="text-align: left"><a href="https://www.codejava.net/coding">Coding</a></li><li class="item-471 deeper parent" style="text-align: left"><a href="https://www.codejava.net/ides"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>IDEs</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>IDEs</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-517" style="text-align: left"><a href="https://www.codejava.net/ides/eclipse">Eclipse</a></li><li class="item-954" style="text-align: left"><a href="https://www.codejava.net/ides/netbeans">NetBeans</a></li></ul></div></li><li class="item-498" style="text-align: left"><a href="https://www.codejava.net/books">Books</a></li><li class="item-960 deeper parent" style="text-align: left"><a href="https://www.codejava.net/videos"><i class=" floatLeft iconSpacing_ltr fa fa-angle-left"></i>Videos</a><div class="levelHolderClass ltr" data-level="1" style="margin-left: -480px; width: 240px; min-width: 240px;"><h2 style="text-align: left"><i class="floatRight cursorPointer"></i>Videos</h2><div class="backItemClass"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#"><i class="floatRight fa fa-angle-right"></i>Back</a></div><ul class="nav-child unstyled" style="display: none;"><li class="item-967" style="text-align: left"><a href="https://www.codejava.net/videos/top-trending">Top Trending</a></li><li class="item-968" style="text-align: left"><a href="https://www.codejava.net/videos/top-java-core-and-java-ee">Top Java Core and Java EE</a></li><li class="item-969" style="text-align: left"><a href="https://www.codejava.net/videos/top-spring-and-hibernate">Top Spring and Hibernate</a></li></ul></div></li><li class="item-970" style="text-align: left"><a href="https://www.codejava.net/java-certifications">Certifications</a></li><li class="item-973" style="text-align: left"><a href="https://www.codejava.net/testing">Testing</a></li></ul></div></nav></div><div class="jf_mm_trigger"><i class="fa fa-bars"></i></div><div class="jf_mm_backout"></div><div class="bannergroup"><div class="banneritem"><script data-cfasync="false" type="text/javascript" src="./Hibernate Query Language (HQL) Example_files/728x90below_res.js"></script><div class="clr"></div></div></div></div></header><nav class="navigation" role="navigation"><ul class="nav menu nav-pills">
<li class="item-101"><a href="https://www.codejava.net/">Home</a></li><li class="item-465 deeper parent dropdown"><a href="https://www.codejava.net/java-core" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Java Core</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-499"><a href="https://www.codejava.net/java-core/the-java-language">The Java Language</a></li><li class="item-856"><a href="https://www.codejava.net/java-core/collections">Generics &amp; Collections</a></li><li class="item-859"><a href="https://www.codejava.net/java-core/tools">Tools</a></li><li class="item-964"><a href="https://www.codejava.net/java-core/exception">Exception Handling</a></li><li class="item-965"><a href="https://www.codejava.net/java-core/concurrency">Concurrency</a></li></ul></li><li class="item-850 deeper parent dropdown"><a href="https://www.codejava.net/java-se" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Java SE</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-851"><a href="https://www.codejava.net/java-se/swing">Swing</a></li><li class="item-852"><a href="https://www.codejava.net/java-se/applet">Applet</a></li><li class="item-853"><a href="https://www.codejava.net/java-se/file-io">File I/O</a></li><li class="item-854"><a href="https://www.codejava.net/java-se/graphics">2D/3D Graphics</a></li><li class="item-855"><a href="https://www.codejava.net/java-se/networking">Networking</a></li><li class="item-857"><a href="https://www.codejava.net/java-se/ftp">FTP Networking</a></li><li class="item-858"><a href="https://www.codejava.net/java-se/jdbc">JDBC</a></li></ul></li><li class="item-840 deeper parent dropdown"><a href="https://www.codejava.net/java-ee" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Java EE</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-848"><a href="https://www.codejava.net/java-ee/servlet">Servlet</a></li><li class="item-510"><a href="https://www.codejava.net/java-ee/javamail">JavaMail</a></li><li class="item-849"><a href="https://www.codejava.net/java-ee/jstl">JSTL</a></li><li class="item-513"><a href="https://www.codejava.net/java-ee/jsp">JavaServer Pages (JSP)</a></li><li class="item-980"><a href="https://www.codejava.net/java-ee/jpa">Java Persistence API</a></li><li class="item-512"><a href="https://www.codejava.net/java-ee/web-services">Web Services</a></li></ul></li><li class="item-470 active deeper parent dropdown"><a href="https://www.codejava.net/frameworks" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Frameworks</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-515"><a href="https://www.codejava.net/frameworks/spring">Spring</a></li><li class="item-981"><a href="https://www.codejava.net/frameworks/spring-boot">Spring Boot</a></li><li class="item-514 current active"><a href="https://www.codejava.net/frameworks/hibernate">Hibernate</a></li><li class="item-516"><a href="https://www.codejava.net/frameworks/struts">Struts</a></li></ul></li><li class="item-472 deeper parent dropdown"><a href="https://www.codejava.net/servers" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Servers</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-518"><a href="https://www.codejava.net/servers/tomcat">Tomcat</a></li></ul></li><li class="item-473"><a href="https://www.codejava.net/coding">Coding</a></li><li class="item-471 deeper parent dropdown"><a href="https://www.codejava.net/ides" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">IDEs</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-517"><a href="https://www.codejava.net/ides/eclipse">Eclipse</a></li><li class="item-954"><a href="https://www.codejava.net/ides/netbeans">NetBeans</a></li></ul></li><li class="item-498"><a href="https://www.codejava.net/books">Books</a></li><li class="item-960 deeper parent dropdown"><a href="https://www.codejava.net/videos" class="dropdown-toggle" data-toggle="dropdown" disabled="disabled">Videos</a><ul class="nav-child unstyled small dropdown-menu"><li class="item-967"><a href="https://www.codejava.net/videos/top-trending">Top Trending</a></li><li class="item-968"><a href="https://www.codejava.net/videos/top-java-core-and-java-ee">Top Java Core and Java EE</a></li><li class="item-969"><a href="https://www.codejava.net/videos/top-spring-and-hibernate">Top Spring and Hibernate</a></li></ul></li><li class="item-970"><a href="https://www.codejava.net/java-certifications">Certifications</a></li><li class="item-973"><a href="https://www.codejava.net/testing">Testing</a></li></ul>

<ul class="breadcrumb">
	&nbsp;&nbsp;<li><a href="https://www.codejava.net/" class="pathway">Home</a><span class="divider">&gt;</span></li><li><a href="https://www.codejava.net/frameworks" class="pathway">Frameworks</a><span class="divider">&gt;</span></li><li><span>Hibernate</span></li></ul>

</nav><div class="row-fluid"><style>.moduletable_search{
            margin-right: 0!important;
          }
          #sidebar{
            width: 21%!important;
            margin-left: 5px!important;
          }
          #content{
            margin-left: 10px!important;
          }</style><!-- Begin Sidebar --><div id="sidebar" class="span3"><div class="sidebar-nav"><aside><div class="moduletable"><div class="bannergroup"><div class="banneritem"><table class="rightmoduletable"><tbody><tr class="RowHeader"><td><font color="white"><b>Learn Hibernate:</b><br></font></td></tr><tr><td><nav><br><ul><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-hello-world-tutorial-for-beginners-with-eclipse-and-mysql">Hibernate Hello World for Beginner</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/java-hibernate-jpa-annotations-tutorial-for-beginners">Hibernate JPA Annotations Tutorial for Beginners</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example">Hibernate Query Language Examples</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-enum-type-mapping-example">Hibernate Enum Type Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-binary-data-and-blob-mapping-example">Hibernate Binary Data and BLOB Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/java-hibernate-reverse-engineering-tutorial-with-eclipse-and-mysql">Java Hibernate Reverse Engineering Tutorial</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-one-with-primary-key-xml-mapping-example">Hibernate One-to-One With Primary Key XML Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-one-with-foreign-key-xml-mapping-example">Hibernate One-to-One With Foreign Key XML Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-one-mapping-with-foreign-key-annotations-example">Hibernate One-to-One Mapping with Foreign Key Annotations</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-one-association-on-primary-key-annotations-example">Hibernate One-to-One Association on Primary Key Annotations</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-xml-mapping-example">Hibernate One-to-Many XML Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-association-annotations-example">Hibernate One-to-Many Association Annotations</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-association-on-join-table-annotations-example">Hibernate One-to-Many Association on Join Table Annotations</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-using-join-table-xml-mapping-example">Hibernate One-to-Many Using Join Table XML Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-many-to-many-xml-mapping-example">Hibernate Many-to-Many XML Mapping</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-many-to-many-association-annotations-example">Hibernate Many-to-Many Association Annotations</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-many-to-many-association-with-extra-columns-in-join-table-example">Hibernate Many-to-Many Association with Extra Columns in Join Table</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/how-to-use-c3p0-database-connection-pooling-library-with-hibernate-jpa">How to use c3p0 with Hibernate</a><br><br></li><li><a href="https://www.codejava.net/frameworks/hibernate/how-to-configure-proxool-with-hibernate-jpa">How to configure Proxool with Hibernate</a><br><br></li></ul></nav></td><td></td></tr></tbody></table><div class="clr"></div></div></div></div><div class="moduletable"><div class="bannergroup"><div class="banneritem"><div id="sidebarads" class=""><style>.sticky {
		  position: fixed;
		  top: 0;
		}</style><br><script data-cfasync="false" type="text/javascript" src="./Hibernate Query Language (HQL) Example_files/160x600_responsive.js"></script><script>window.onscroll = function() {myFunction()};

var sidebarads = document.getElementById("sidebarads");
var sticky = sidebarads.offsetTop;

function myFunction() {
  if (window.pageYOffset >= sticky) {
	sidebarads.classList.add("sticky")
  } else {
	sidebarads.classList.remove("sticky");
  }
}</script></div><div class="clr"></div></div></div></div></aside></div></div><!-- End Sidebar --><main id="content" role="main" class="span9"><!-- Begin Content --><div id="system-message-container"><div id="system-message"></div></div><div class="item-page"><div class="page-header"><h1><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example"> Hibernate Query Language (HQL) Example</a></h1></div><div class="article-info muted"><dl class="article-info"><dt class="article-info-term">Details</dt><dd class="createdby">Written by &nbsp;<cite><a href="https://www.codejava.net/nam-ha-minh" rel="author">Nam Ha Minh</a></cite></dd><dd class="modified"><span class="icon-calendar"></span> Last Updated on 16 July 2019						&nbsp; | &nbsp;<a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example?tmpl=component&amp;print=1&amp;page=" title="Print" onclick="window.open(this.href,&#39;win2&#39;,&#39;status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no&#39;); return false;" rel="nofollow"><span class="icon-print"></span>&nbsp;Print&nbsp;</a><a href="https://www.codejava.net/component/mailto/?tmpl=component&amp;template=protostar&amp;link=db5aa30437a8023b69e1a0a3e2aa7c2a9d5239e1" title="Email" onclick="window.open(this.href,&#39;win2&#39;,&#39;width=400,height=350,menubar=yes,resizable=yes&#39;); return false;"><span class="icon-envelope"></span> Email</a></dd></dl></div>The Hibernate ORM framework provides its own query language called Hibernate Query Language or HQL for short. It is very powerful and flexible and has the following characteristics:<p></p><ul><li><strong><span style="font-size: 12pt; line-height: 115%;">SQL similarity:</span></strong> HQL’s syntax is very similar to standard SQL. If you are familiar with SQL then writing HQL would be pretty easy: from <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SELECT</span>, <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">FROM</span>, <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">ORDER</span><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">BY</span> to arithmetic expressions and aggregate functions, etc.</li><li><strong><span style="font-size: 12pt; line-height: 115%;">Fully object-oriented:</span></strong> HQL doesn’t use real names of table and columns. It uses class and property names instead. HQL can understand inheritance, polymorphism and association.</li><li><strong><span style="font-size: 12pt; line-height: 115%;">Case-insensitive for keywords:</span></strong> Like SQL, keywords in HQL are case-insensitive. That means <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SELECT</span>, <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">select</span> or <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Select</span> are the same.</li><li><strong><span style="font-size: 12pt; line-height: 115%;">Case-sensitive for Java classes and properties:</span></strong> HQL considers case-sensitive names for Java classes and their properties, meaning <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Person</span> and <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">person</span> are two different objects.</li></ul>In this tutorial, we show you how to write HQL for executing fundamental queries (CRUD) as well as other popular ones. The following diagram illustrates relationship of the tables used in examples of this tutorial:<p></p><img style="display: block; margin-left: auto; margin-right: auto;" src="./Hibernate Query Language (HQL) Example_files/Database_Structure.png" alt="Database Structure" width="480" height="142"><p></p>And here are the model classes annotated with JPA annotations:<p></p><span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category </span></strong></span>class:<p></p><div><div id="highlighter_608431" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">net.codejava.hibernate;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Set;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.CascadeType;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Column;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Entity;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.GeneratedValue;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Id;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.OneToMany;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Table;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java color1">@Entity</code></div><div class="line number15 index14 alt2"><code class="java color1">@Table</code><code class="java plain">(name = </code><code class="java string">"CATEGORY"</code><code class="java plain">)</code></div><div class="line number16 index15 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Category {</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">long</code> <code class="java plain">id;</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String name;</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Set&lt;Product&gt; products;</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Category() {</code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Category(String name) {</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.name = name;</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Id</code></div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"CATEGORY_ID"</code><code class="java plain">)</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@GeneratedValue</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">long</code> <code class="java plain">getId() {</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">id;</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@OneToMany</code><code class="java plain">(mappedBy = </code><code class="java string">"category"</code><code class="java plain">, cascade = CascadeType.ALL)</code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Set&lt;Product&gt; getProducts() {</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">products;</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number42 index41 alt1">&nbsp;</div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// other getters and setters</code></div><div class="line number44 index43 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>&nbsp;<p></p><span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Product</span></strong></span> class:<p></p><div><div id="highlighter_912885" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">net.codejava.hibernate;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Column;</code></div><div class="line number4 index3 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Entity;</code></div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.GeneratedValue;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Id;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.JoinColumn;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.ManyToOne;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Table;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="java color1">@Entity</code></div><div class="line number12 index11 alt1"><code class="java color1">@Table</code><code class="java plain">(name = </code><code class="java string">"PRODUCT"</code><code class="java plain">)</code></div><div class="line number13 index12 alt2"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Product {</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">long</code> <code class="java plain">id;</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String name;</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String description;</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">float</code> <code class="java plain">price;</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Category category;</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Product() {</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Product(String name, String description, </code><code class="java keyword">float</code> <code class="java plain">price,</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Category category) {</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.name = name;</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.description = description;</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.price = price;</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.category = category;</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Id</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"PRODUCT_ID"</code><code class="java plain">)</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@GeneratedValue</code></div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">long</code> <code class="java plain">getId() {</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">id;</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@ManyToOne</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@JoinColumn</code><code class="java plain">(name = </code><code class="java string">"CATEGORY_ID"</code><code class="java plain">)</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Category getCategory() {</code></div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">category;</code></div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// other getters and setters</code></div><div class="line number46 index45 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>&nbsp;<p></p><span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Order</span></strong></span> class:<p></p><div><div id="highlighter_403219" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">package</code> <code class="java plain">net.codejava.hibernate;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.Date;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Column;</code></div><div class="line number6 index5 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Entity;</code></div><div class="line number7 index6 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.GeneratedValue;</code></div><div class="line number8 index7 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Id;</code></div><div class="line number9 index8 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.JoinColumn;</code></div><div class="line number10 index9 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.ManyToOne;</code></div><div class="line number11 index10 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.OneToMany;</code></div><div class="line number12 index11 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Table;</code></div><div class="line number13 index12 alt2"><code class="java keyword">import</code> <code class="java plain">javax.persistence.Temporal;</code></div><div class="line number14 index13 alt1"><code class="java keyword">import</code> <code class="java plain">javax.persistence.TemporalType;</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="java color1">@Entity</code></div><div class="line number17 index16 alt2"><code class="java color1">@Table</code><code class="java plain">(name = </code><code class="java string">"ORDERS"</code><code class="java plain">)</code></div><div class="line number18 index17 alt1"><code class="java keyword">public</code> <code class="java keyword">class</code> <code class="java plain">Order {</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">int</code> <code class="java plain">id;</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">String customerName;</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Date purchaseDate;</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java keyword">float</code> <code class="java plain">amount;</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">private</code> <code class="java plain">Product product;</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Id</code></div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"ORDER_ID"</code><code class="java plain">)</code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@GeneratedValue</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">int</code> <code class="java plain">getId() {</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">id;</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">void</code> <code class="java plain">setId(</code><code class="java keyword">int</code> <code class="java plain">id) {</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">this</code><code class="java plain">.id = id;</code></div><div class="line number34 index33 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"CUSTOMER_NAME"</code><code class="java plain">)</code></div><div class="line number37 index36 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">String getCustomerName() {</code></div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">customerName;</code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number40 index39 alt1">&nbsp;</div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Column</code><code class="java plain">(name = </code><code class="java string">"PURCHASE_DATE"</code><code class="java plain">)</code></div><div class="line number42 index41 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Temporal</code><code class="java plain">(TemporalType.DATE)</code></div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Date getPurchaseDate() {</code></div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">purchaseDate;</code></div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@ManyToOne</code></div><div class="line number49 index48 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@JoinColumn</code><code class="java plain">(name = </code><code class="java string">"PRODUCT_ID"</code><code class="java plain">)</code></div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java plain">Product getProduct() {</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">product;</code></div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number53 index52 alt2">&nbsp;</div><div class="line number54 index53 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// other getters and setters</code></div><div class="line number55 index54 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><div><script data-cfasync="false" type="text/javascript" src="./Hibernate Query Language (HQL) Example_files/336x280_responsive.js"></script></div>The upcoming examples are provided based on assumption that a Hibernate’s <span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SessionFactory</span></strong></span> is opened and a transaction has been started. You can find more about how to obtain <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;; color: #800000;">SessionFactory</span> and start a transaction in the tutorial: <a href="https://www.codejava.net/frameworks/hibernate/building-hibernate-sessionfactory-from-service-registry" target="_blank">Building Hibernate SessionFactory from Service Registry</a>.<p></p>&nbsp;<p></p>The following table of content is provided for your convenience:<p></p><ol><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Basics">How to execute HQL in Hibernate</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#List">List Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Search">Search Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Parameters">Using Named Parameters Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Insert">Insert - Select Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Update">Update Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Delete">Delete Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Join">Join Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Sort">Sort Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Group">Group By Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Pagination">Pagination Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#DateRange">Date Range Query Example</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Expressions">Using Expressions in Query</a></li><li><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#Aggregate">Using Aggregate Functions in Query</a></li></ol>&nbsp;<p></p><h2><a name="Basics">1. How to execute HQL in Hibernate</a></h2>Basically, it’s fairly simple to execute HQL in Hibernate. Here are the steps:<p></p><ul><li>Write your HQL:<div><div id="highlighter_47754" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"Your Query Goes Here"</code><code class="java plain">;</code></div></div></td></tr></tbody></table></div></div></li><li>Create a <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Query</span> from the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Session</span>:<div><div id="highlighter_209540" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div></div></td></tr></tbody></table></div></div></li><li>Execute the query: depending on the type of the query (listing or update), an appropriate method is used:<ul><li>For a listing query (<span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SELECT</span>):<div><div id="highlighter_404266" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">List listResult = query.list();</code></div></div></td></tr></tbody></table></div></div></li><li>For an update query (<span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">INSERT</span>, <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">UPDATE</span>, <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">DELETE</span>):<div><div id="highlighter_975680" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">int</code> <code class="java plain">rowsAffected = query.executeUpdate();</code></div></div></td></tr></tbody></table></div></div></li></ul></li><li>Extract result returned from the query: depending of the type of the query, Hibernate returns different type of result set. For example:<ul><li>Select query on a mapped object returns a list of those objects.</li><li>Join query returns a list of arrays of Objects which are aggregate of columns of the joined tables. This also applies for queries using aggregate functions (count, sum, avg, etc).</li></ul></li></ul>Now, let’s go through various concrete examples.<p></p><h2><br><a name="List">2. Hibernate List Query Example</a></h2>The following code snippet executes a query that returns all <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span> objects:<p></p><div><div id="highlighter_585021" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Category"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number3 index2 alt2"><code class="java plain">List&lt;Category&gt; listCategories = query.list();</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">for</code> <code class="java plain">(Category aCategory : listCategories) {</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(aCategory.getName());</code></div><div class="line number7 index6 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>Note that in HQL, we can omit the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SELECT</span> keyword and just use the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">FROM</span> instead.<p></p><h2><br><a name="Search">3. Hibernate Search Query Example</a></h2>The following statements execute a query that searches for all products in a category whose name is ‘Computer’:<p></p><div><div id="highlighter_286540" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Product where category.name = 'Computer'"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number3 index2 alt2"><code class="java plain">List&lt;Product&gt; listProducts = query.list();</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java keyword">for</code> <code class="java plain">(Product aProduct : listProducts) {</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(aProduct.getName());</code></div><div class="line number7 index6 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>The cool thing here is Hibernate automatically generates <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">JOIN</span> query between the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Product</span> and <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span> tables behind the scene. Thus we don’t have to use explicit <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">JOIN</span> keyword:<p></p><div><div id="highlighter_316639" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">from Product where category.name = 'Computer'</code></div></div></td></tr></tbody></table></div></div>&nbsp;<p></p><h2><a name="Parameters">4. Using Named Parameters in Query Example</a></h2>You can parameterize your query using a colon before parameter name, for example <strong>:id</strong> indicates a placeholder for a parameter named <strong>id</strong>. The following example demonstrates how to write and execute a query using named parameters:<p></p><div><div id="highlighter_132248" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Product where description like :keyword"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">String keyword = </code><code class="java string">"New"</code><code class="java plain">;</code></div><div class="line number4 index3 alt1"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number5 index4 alt2"><code class="java plain">query.setParameter(</code><code class="java string">"keyword"</code><code class="java plain">, </code><code class="java string">"%"</code> <code class="java plain">+ keyword + </code><code class="java string">"%"</code><code class="java plain">);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java plain">List&lt;Product&gt; listProducts = query.list();</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java keyword">for</code> <code class="java plain">(Product aProduct : listProducts) {</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(aProduct.getName());</code></div><div class="line number11 index10 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>The above HQL searches for all products whose description contains the specified keyword:<p></p><div><div id="highlighter_378219" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">from Product where description like :keyword</code></div></div></td></tr></tbody></table></div></div>Then use the <span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">setParameter(name, value)</span></strong></span> method to set actual value for the named parameter:<p></p><div><div id="highlighter_975269" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">query.setParameter("keyword", "%" + keyword + "%");</code></div></div></td></tr></tbody></table></div></div>Note that we want to perform a <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">LIKE</span> search so the percent signs must be used outside the query string, unlike traditional SQL.<p></p><h2><br><a name="Insert">5. Hibernate Insert - Select Query Example</a></h2>HQL doesn’t support regular <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">INSERT</span> statement (you know why - because the <span style="color: #800000;"><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">session</span><span style="font-family: &#39;Courier New&#39;;">.</span><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">save</span><span style="font-family: &#39;Courier New&#39;;">(</span><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Object</span><span style="font-family: &#39;Courier New&#39;;">)</span></span> method does it perfectly). So we can only write <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">INSERT</span> … <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">SELECT</span> query in HQL. The following code snippet executes a query that inserts all rows from <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span> table to <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">OldCategory</span> table:<p></p><div><div id="highlighter_66882" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"insert into Category (id, name)"</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">+ </code><code class="java string">" select id, name from OldCategory"</code><code class="java plain">;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">int</code> <code class="java plain">rowsAffected = query.executeUpdate();</code></div><div class="line number7 index6 alt2"><code class="java keyword">if</code> <code class="java plain">(rowsAffected &gt; </code><code class="java value">0</code><code class="java plain">) {</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(rowsAffected + </code><code class="java string">"(s) were inserted"</code><code class="java plain">);</code></div><div class="line number9 index8 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>Note that HQL is object-oriented, so <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span> and <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">OldCategory</span> must be mapped class names (not real table names).<p></p><h2><br><a name="Update">6. Hibernate Update Query Example</a></h2>The <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">UPDATE</span> query is similar to SQL. The following example runs a query that updates price for a specific product:<p></p><div><div id="highlighter_524890" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"update Product set price = :price where id = :id"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">query.setParameter(</code><code class="java string">"price"</code><code class="java plain">, </code><code class="java value">488</code><code class="java plain">.0f);</code></div><div class="line number5 index4 alt2"><code class="java plain">query.setParameter(</code><code class="java string">"id"</code><code class="java plain">, 43l);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java keyword">int</code> <code class="java plain">rowsAffected = query.executeUpdate();</code></div><div class="line number8 index7 alt1"><code class="java keyword">if</code> <code class="java plain">(rowsAffected &gt; </code><code class="java value">0</code><code class="java plain">) {</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"Updated "</code> <code class="java plain">+ rowsAffected + </code><code class="java string">" rows."</code><code class="java plain">);</code></div><div class="line number10 index9 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2><br><a name="Delete">7. Hibernate Delete Query Example</a></h2>Using <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">DELETE</span> query in HQL is also straightforward. For example:<p></p><div><div id="highlighter_725804" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"delete from OldCategory where id = :catId"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">query.setParameter(</code><code class="java string">"catId"</code><code class="java plain">, </code><code class="java keyword">new</code> <code class="java plain">Long(</code><code class="java value">1</code><code class="java plain">));</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">int</code> <code class="java plain">rowsAffected = query.executeUpdate();</code></div><div class="line number7 index6 alt2"><code class="java keyword">if</code> <code class="java plain">(rowsAffected &gt; </code><code class="java value">0</code><code class="java plain">) {</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"Deleted "</code> <code class="java plain">+ rowsAffected + </code><code class="java string">" rows."</code><code class="java plain">);</code></div><div class="line number9 index8 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2><br><a name="Join">8. Hibernate Join Query Example</a></h2>HQL supports the following join types (similar to SQL):<p></p><ul><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">inner</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong> (can be abbreviated as <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong>).</li><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">left</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">outer</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong> (can be abbreviated as <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">left</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong>).</li><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">right</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">outer</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong> (can be abbreviated as <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">right</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong>).</li><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">full</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong></li></ul>For example, the following code snippet executes a query that retrieves results which is a join between two tables <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Product</span> and <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span>:<p></p><div><div id="highlighter_319256" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Product p inner join p.category"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">List&lt;Object[]&gt; listResult = query.list();</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">for</code> <code class="java plain">(Object[] aRow : listResult) {</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Product product = (Product) aRow[</code><code class="java value">0</code><code class="java plain">];</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Category category = (Category) aRow[</code><code class="java value">1</code><code class="java plain">];</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(product.getName() + </code><code class="java string">" - "</code> <code class="java plain">+ category.getName());</code></div><div class="line number10 index9 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>Using the <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong> keyword in HQL is called <strong>explicit join</strong>. Note that a <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">JOIN</span> query returns a list of <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Object</span> arrays, so we need to deal with the result set differently:<p></p><div><div id="highlighter_295870" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">List&lt;Object[]&gt; listResult = query.list();</code></div></div></td></tr></tbody></table></div></div>HQL provides <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">with</span></strong> keyword which can be used in case you want to supply extra join conditions. For example:<p></p><div><div id="highlighter_557595" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">from Product p inner join p.category with p.price &gt; 500</code></div></div></td></tr></tbody></table></div></div>That joins the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Product</span> and <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Category</span> together with a condition specifies that product’s price must be higher than 500.<p></p>As stated earlier, we can write <strong>implicit join</strong> query which uses dot-notation. For example:<p></p><div><div id="highlighter_442445" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">from Product where category.name = 'Computer'</code></div></div></td></tr></tbody></table></div></div>That result in <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">inner</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">join</span></strong> in the resulting SQL statement.<p></p>&nbsp;<p></p><h2><a name="Sort">9. Hibernate Sort Query Example</a></h2>Sorting in HQL is very similar to SQL using <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">ORDER</span><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">BY</span> clause follows by a sort direction <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">ASC</span> (ascending) or <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">DESC</span> (descending). For example:<p></p><div><div id="highlighter_256077" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Product order by price ASC"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">List&lt;Product&gt; listProducts = query.list();</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">for</code> <code class="java plain">(Product aProduct : listProducts) {</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(aProduct.getName() + </code><code class="java string">"\t - "</code> <code class="java plain">+ aProduct.getPrice());</code></div><div class="line number8 index7 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>That lists all products by the ascending order of price.<p></p><h2><br><a name="Group">10. Hibernate Group By Query Example</a></h2>Using <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">GROUP</span><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">BY</span> clause in HQL is similar to SQL. The following query summarizes price of all products grouped by each category:<p></p><div><div id="highlighter_687350" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">select sum(p.price), p.category.name from Product p group by category</code></div></div></td></tr></tbody></table></div></div>And here is the code snippet:<p></p><div><div id="highlighter_605214" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"select sum(p.price), p.category.name from Product p group by category"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">List&lt;Object[]&gt; listResult = query.list();</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java keyword">for</code> <code class="java plain">(Object[] aRow : listResult) {</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">Double sum = (Double) aRow[</code><code class="java value">0</code><code class="java plain">];</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">String category = (String) aRow[</code><code class="java value">1</code><code class="java plain">];</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(category + </code><code class="java string">" - "</code> <code class="java plain">+ sum);</code></div><div class="line number10 index9 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2><br><a name="Pagination">11. Hibernate Pagination Query Example</a></h2>To return a subset of a result set, the <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">Query&nbsp;</span></strong>interface has two methods for limiting the result set:<p></p><ul><li><span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">setFirstResult(int</span></strong><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">firstResult)</span></strong></span>: sets the first row to retrieve.</li><li><span style="color: #800000;"><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">setMaxResults(int</span></strong></span><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">maxResults)</span></strong>: sets the maximum number of rows to retrieve.</li></ul>For example, the following code snippet lists first 10 products:<p></p><div><div id="highlighter_243816" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Product"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">query.setFirstResult(</code><code class="java value">0</code><code class="java plain">);</code></div><div class="line number5 index4 alt2"><code class="java plain">query.setMaxResults(</code><code class="java value">10</code><code class="java plain">);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="java plain">List&lt;Product&gt; listProducts = query.list();</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java keyword">for</code> <code class="java plain">(Product aProduct : listProducts) {</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(aProduct.getName() + </code><code class="java string">"\t - "</code> <code class="java plain">+ aProduct.getPrice());</code></div><div class="line number11 index10 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div><h2><br><a name="DateRange">12. Hibernate Date Range Query Example</a></h2>A nice feature of Hibernate is that it is able to defer parameter type to generate the resulting SQL statement accordingly. So using date time parameters in HQL is quick and easy, for example:<p></p><div><div id="highlighter_154480" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"from Order where purchaseDate &gt;= :beginDate and purchaseDate &lt;= :endDate"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="java plain">SimpleDateFormat dateFormatter = </code><code class="java keyword">new</code> <code class="java plain">SimpleDateFormat(</code><code class="java string">"yyyy-MM-dd"</code><code class="java plain">);</code></div><div class="line number6 index5 alt1"><code class="java plain">Date beginDate = dateFormatter.parse(</code><code class="java string">"2014-11-01"</code><code class="java plain">);</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java plain">query.setParameter(</code><code class="java string">"beginDate"</code><code class="java plain">, beginDate);</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="java plain">Date endDate = dateFormatter.parse(</code><code class="java string">"2014-11-22"</code><code class="java plain">);</code></div><div class="line number11 index10 alt2"><code class="java plain">query.setParameter(</code><code class="java string">"endDate"</code><code class="java plain">, endDate);</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="java plain">List&lt;Order&gt; listOrders = query.list();</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="java keyword">for</code> <code class="java plain">(Order anOrder : listOrders) {</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(anOrder.getProduct().getName() + </code><code class="java string">" - "</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">+&nbsp; anOrder.getAmount() + </code><code class="java string">" - "</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">+ anOrder.getPurchaseDate());</code></div><div class="line number19 index18 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>The above query lists only orders whose purchase date is in a specified range.<p></p><h2><br><a name="Expressions">13. Using Expressions in Hibernate Query</a></h2>For expressions used in the <span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">WHERE</span> clause, HQL supports all basic arithmetic expressions similar to SQL include the following:<p></p><ul><li>mathematical operators: <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">+, -, *, /</span></strong></li><li>binary comparison operators: <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">=, &gt;=, &lt;=, &lt;&gt;, !=, like</span></strong></li><li>logical operators: <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">and, or, not</span></strong></li><li>etc</li></ul>For a complete list of expressions supported by Hibernate, <a href="https://docs.jboss.org/hibernate/orm/3.3/reference/en/html/queryhql.html#queryhql-expressions" target="_blank">click here</a>.<p></p>For example, the following query returns only products with price is ranging from 500 to 1000 dollars:<p></p><div><div id="highlighter_855296" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">from Product where price &gt;= 500 and price &lt;= 1000</code></div></div></td></tr></tbody></table></div></div><h2><br><a name="Aggregate">14. Using Aggregate Functions in Hibernate Query</a></h2>HQL supports the following aggregate functions:<p></p><ul><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">avg(…)</span></strong>, <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">sum(…)</span></strong>, <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">min(…)</span></strong>, <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">max(…)</span></strong></li><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">count(*)</span></strong></li><li><strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">count(…)</span></strong>, <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">count</span></strong>(<strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">distinct…)</span></strong>, <strong><span style="font-size: 10pt; line-height: 115%; font-family: &#39;Courier New&#39;;">count(all…)</span></strong></li></ul>For example, the following query counts all products:<p></p><div><div id="highlighter_937934" class="syntaxhighlighter  text"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="text plain">select count(name) from Product</code></div></div></td></tr></tbody></table></div></div>And here’s the code snippet that shows how to extract the result:<p></p><div><div id="highlighter_931679" class="syntaxhighlighter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">String hql = </code><code class="java string">"select count(name) from Product"</code><code class="java plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="java plain">Query query = session.createQuery(hql);</code></div><div class="line number4 index3 alt1"><code class="java plain">List listResult = query.list();</code></div><div class="line number5 index4 alt2"><code class="java plain">Number number = (Number) listResult.get(</code><code class="java value">0</code><code class="java plain">);</code></div><div class="line number6 index5 alt1"><code class="java plain">System.out.println(number.intValue());</code></div></div></td></tr></tbody></table></div></div>&nbsp;<p></p><h3><span style="line-height: 115%;">References:</span></h3><ul><li><a href="https://docs.jboss.org/hibernate/orm/3.3/reference/en/html/queryhql.html" rel="nofollow" target="_blank">HQL: The Hibernate Query Language</a></li><li><a href="http://docs.jboss.org/hibernate/orm/4.3/javadocs/org/hibernate/Query.html" rel="nofollow" target="_blank">Query interface Javadoc</a></li></ul>So far you have learn various code examples to use queries in Hibernate. I recommend you to take <a href="https://www.udemy.com/java-servlet-jsp-and-hibernate-build-a-complete-website/" rel="nofollow" target="_blank">this course</a> to learn how to use Hibernate for data access layer of a complete Java web application.<span style="font-family: &#39;Open Sans&#39;, sans-serif; font-size: 18px; font-weight: bold;">&nbsp;</span><p></p><h3 style="padding: 0px; font-family: &#39;Open Sans&#39;, sans-serif; color: #333333;">&nbsp;</h3><h3 style="padding: 0px; font-family: &#39;Open Sans&#39;, sans-serif; color: #333333;">Other Hibernate Tutorials:</h3><ul style="font-family: Arial, Helvetica, sans-serif; font-size: 14.3px;"><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/java-hibernate-jpa-annotations-tutorial-for-beginners" target="_blank">Java Hibernate JPA Annotations Tutorial for Beginners</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-hello-world-tutorial-for-beginners-with-eclipse-and-mysql" target="_blank">Hibernate Hello World Tutorial for Beginners with Eclipse and MySQL</a></li><li style="margin: 0px; padding: 0px;"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-one-association-on-primary-key-annotations-example" target="_blank">Hibernate One-to-One Association on Primary Key Annotations Example</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-one-to-many-using-join-table-xml-mapping-example" target="_blank">Hibernate One-to-Many Using Join Table XML Mapping Example</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-many-to-many-association-with-extra-columns-in-join-table-example" target="_blank">Hibernate Many-to-Many Association with Extra Columns in Join Table Example</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-enum-type-mapping-example" target="_blank">Hibernate Enum Type Mapping Example</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-binary-data-and-blob-mapping-example" target="_blank">Hibernate Binary Data and BLOB Mapping Example</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/java-hibernate-reverse-engineering-tutorial-with-eclipse-and-mysql" target="_blank">Java Hibernate Reverse Engineering Tutorial with Eclipse and MySQL</a></li><li style="margin: 0px; padding: 0px;"><a style="margin: 0px; padding: 0px; color: #095197; cursor: pointer;" href="https://www.codejava.net/frameworks/hibernate/hibernate-basics-3-ways-to-delete-an-entity-from-the-datastore" target="_blank">Hibernate Basics - 3 ways to delete an entity from the datastore</a></li></ul><div><br><h3>About the Author:</h3><img src="./Hibernate Query Language (HQL) Example_files/NamAuthor.png" align="left" style="padding: 0px 10px 15px 0px"><cite><a href="https://www.codejava.net/nam-ha-minh" target="_blank" rel="author">Nam Ha Minh</a></cite> is certified Java programmer (SCJP and SCWCD). He started programming with Java in the time of Java 1.4 and has been falling in love with Java since then. Make friend with him on <a href="https://www.facebook.com/namjavaprogrammer" rel="nofollow" target="_blank">Facebook</a>.<br><br><script data-cfasync="false" type="text/javascript" src="./Hibernate Query Language (HQL) Example_files/750x300.js"></script></div><div class="attachmentsContainer"><div class="attachmentsList" id="attachmentsList_com_content_article_532"><table><caption>Attachments:</caption><tbody><tr class="odd"><td class="at_filename"><a class="at_icon" href="https://www.codejava.net/download-attachment?fid=330" target="_blank" title="Download this file (HibernateQueryTest.zip)"><img src="./Hibernate Query Language (HQL) Example_files/zip.gif" alt="Download this file (HibernateQueryTest.zip)"></a><a class="at_url" href="https://www.codejava.net/download-attachment?fid=330" target="_blank" title="Download this file (HibernateQueryTest.zip)">HibernateQueryTest.zip</a></td><td class="at_description">[Eclipse-Maven Project]</td><td class="at_file_size">21 kB</td></tr></tbody></table></div></div><input type="hidden" id="jcaid" value="532"><div id="jc"><h4>Add comment</h4><a id="addcomments" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#addcomments"></a><form id="comments-form" name="comments-form" action="javascript:void(null);"><p><span><input id="comments-form-name" type="text" name="name" maxlength="20" size="22" tabindex="1" placeholder="Name" required=""> &nbsp;&nbsp;&nbsp; <input id="comments-form-email" type="text" name="email" value="" size="22" tabindex="2" placeholder="E-mail" required=""></span></p><p><span><span class="bbcode" style="display: block;"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-b" title="Bold" class="bbcode-b" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-i" title="Italic" class="bbcode-i" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-u" title="Underlined" class="bbcode-u" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-s" title="Striked" class="bbcode-s" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-img" title="Image" class="bbcode-img" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-url" title="Link" class="bbcode-url" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-quote" title="Quote" class="bbcode-quote" style="display: block;"></a><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" id="bbcode-list" title="List" class="bbcode-list" style="display: block;"></a></span><textarea id="comments-form-comment" name="comment" cols="50" rows="6" tabindex="5" placeholder="comment" required=""></textarea><div class="grippie"><span class="counter"> <span>500</span>  symbols left</span></div></span></p><p><span><input class="checkbox" id="comments-form-subscribe" type="checkbox" name="subscribe" value="1" tabindex="5"><label for="comments-form-subscribe">Notify me of follow-up comments</label><br></span></p><p><span></span></p><div class="g-recaptcha" data-sitekey="6Leb1UsUAAAAAMz79FhT2G1eTmOUpvd2E82eUp2F"><div style="width: 304px; height: 78px;"><div><iframe src="./Hibernate Query Language (HQL) Example_files/anchor.html" width="304" height="78" role="presentation" name="a-7labn7qf1d0f" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox"></iframe></div><textarea id="g-recaptcha-response" name="g-recaptcha-response" class="g-recaptcha-response" style="width: 250px; height: 40px; border: 1px solid rgb(193, 193, 193); margin: 10px 25px; padding: 0px; resize: none; display: none;"></textarea></div></div><p></p><div id="comments-form-buttons"><div class="btn" id="comments-form-send"><button id="btnSendComment" title="Send (Ctrl+Enter)">Send</button></div><div class="btn" id="comments-form-cancel" style="display:none;"><div><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" tabindex="8" onclick="return false;" title="Cancel">Cancel</a></div></div><div style="clear:both;"></div></div><div><input type="hidden" id="object_id" name="object_id" value="532"><input type="hidden" id="object_group" name="object_group" value="com_content"></div></form><div id="comments"><h4><a id="comment" name="comment">Comments</a><a class="refresh" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" title="Refresh comments list" id="btnRefreshComment1">&nbsp;</a></h4><div id="comments-list" class="comments-list"><div class="even" id="comment-item-16635"><div class="rbox"><div class="comment-box"><a class="comment-anchor" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#comment-16635" id="comment-16635">#5</a><span class="comment-author">Wajid Ali</span><span class="comment-date">2019-07-26 17:43</span><div class="comment-body" id="comment-body-16635">Awesomely explained. Thank you Nam</div><span class="comments-buttons"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" class="qclnk" qid="16635">Quote</a></span></div><div class="clear"></div></div></div><div class="odd" id="comment-item-15219"><div class="rbox"><div class="comment-box"><a class="comment-anchor" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#comment-15219" id="comment-15219">#4</a><span class="comment-author">jay</span><span class="comment-date">2018-09-26 07:40</span><div class="comment-body" id="comment-body-15219">can we used aggregate function in where clause?</div><span class="comments-buttons"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" class="qclnk" qid="15219">Quote</a></span></div><div class="clear"></div></div></div><div class="even" id="comment-item-4908"><div class="rbox"><div class="comment-box"><a class="comment-anchor" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#comment-4908" id="comment-4908">#3</a><span class="comment-author">taoufik</span><span class="comment-date">2017-03-12 11:25</span><div class="comment-body" id="comment-body-4908">merci code java . net</div><span class="comments-buttons"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" class="qclnk" qid="4908">Quote</a></span></div><div class="clear"></div></div></div><div class="odd" id="comment-item-3982"><div class="rbox"><div class="comment-box"><a class="comment-anchor" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#comment-3982" id="comment-3982">#2</a><span class="comment-author">Hassan</span><span class="comment-date">2016-07-13 10:04</span><div class="comment-body" id="comment-body-3982">what if I want to join category to products and get the list of all products<br><br>for e.g. query = "from Category c, where c.products."<br>List cat = query.list();<br><br>How would this work</div><span class="comments-buttons"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" class="qclnk" qid="3982">Quote</a></span></div><div class="clear"></div></div></div><div class="even" id="comment-item-3644"><div class="rbox"><div class="comment-box"><a class="comment-anchor" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#comment-3644" id="comment-3644">#1</a><span class="comment-author">pradeep</span><span class="comment-date">2016-04-02 08:57</span><div class="comment-body" id="comment-body-3644">Excellent work.Thank you so much for all the tutorials</div><span class="comments-buttons"><a href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" class="qclnk" qid="3644">Quote</a></span></div><div class="clear"></div></div></div></div><div id="comments-list-footer"><a class="refresh" href="https://www.codejava.net/frameworks/hibernate/hibernate-query-language-hql-example#" title="Refresh comments list" id="btnRefreshComment2">Refresh comments list</a></div></div></div></div><!-- End Content --></main></div></div></div><!-- Footer --><footer class="footer" role="contentinfo"><div class="container"><p><font size="+1">About CodeJava.net:</font><br> CodeJava.net shares Java tutorials, code examples and sample projects for programmers at all levels.<br> CodeJava.net is created and managed by <a href="https://www.codejava.net/nam-ha-minh">Nam Ha Minh</a> - a passionate programmer. <br></p><nav class="nav-footer"><a href="https://www.codejava.net/about">About</a>&nbsp; <a href="https://www.codejava.net/contact">Contact</a>&nbsp; <a href="https://www.codejava.net/terms">Terms of Use</a>&nbsp; <a href="https://www.codejava.net/privacy-policy">Privacy Policy</a>&nbsp; <a href="https://www.codejava.net/sitemap">Sitemap</a>&nbsp; <a href="https://www.facebook.com/codejava" target="_blank" rel="nofollow"><b>F</b>acebook</a>&nbsp; <a href="https://twitter.com/codejavadotnet" target="_blank" rel="nofollow"><b>T</b>witter</a>&nbsp;<a href="https://www.youtube.com/codejava" target="_blank" rel="nofollow"><b>Y</b>ouTube</a>&nbsp; </nav><p><br><font size="-3">Copyright © 2012 - 2020 CodeJava.net, all rights reserved.</font></p></div></footer><script src="./Hibernate Query Language (HQL) Example_files/ee519081b2451f336765eca967cf07c4.js" defer="" type="text/javascript"></script><noscript>JavaScript is currently disabled.</noscript><div style="background-color: rgb(255, 255, 255); border: 1px solid rgb(204, 204, 204); box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 3px; position: absolute; transition: visibility 0s linear 0.3s, opacity 0.3s linear 0s; opacity: 0; visibility: hidden; z-index: 2000000000; left: 0px; top: -10000px;"><div style="width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 2000000000; background-color: rgb(255, 255, 255); opacity: 0.05;"></div><div class="g-recaptcha-bubble-arrow" style="border: 11px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -11px; z-index: 2000000000;"></div><div class="g-recaptcha-bubble-arrow" style="border: 10px solid transparent; width: 0px; height: 0px; position: absolute; pointer-events: none; margin-top: -10px; z-index: 2000000000;"></div><div style="z-index: 2000000000; position: relative;"><iframe title="recaptcha challenge" src="./Hibernate Query Language (HQL) Example_files/bframe.html" name="c-7labn7qf1d0f" frameborder="0" scrolling="no" sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox" style="width: 100%; height: 100%;"></iframe></div></div></body></html>